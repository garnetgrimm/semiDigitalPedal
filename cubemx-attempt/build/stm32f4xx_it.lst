ARM GAS  /tmp/cc1AKb51.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB130:
  28              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Src/stm32f4xx_it.c ****   * @attention
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f4xx_it.c ****   *
  12:Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f4xx_it.c ****   *
  17:Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Src/stm32f4xx_it.c ****   */
  19:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_it.c **** 
  21:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_it.c **** #include "main.h"
  23:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f4xx_it.c **** 
  28:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/cc1AKb51.s 			page 2


  31:Src/stm32f4xx_it.c **** /* USER CODE END TD */
  32:Src/stm32f4xx_it.c **** 
  33:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f4xx_it.c **** 
  36:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f4xx_it.c **** 
  41:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f4xx_it.c **** 
  43:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f4xx_it.c **** 
  46:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Src/stm32f4xx_it.c **** 
  48:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f4xx_it.c **** 
  51:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32f4xx_it.c **** 
  53:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32f4xx_it.c **** 
  56:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32f4xx_it.c **** 
  58:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32f4xx_it.c **** extern ADC_HandleTypeDef hadc1;
  60:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim2;
  61:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  62:Src/stm32f4xx_it.c **** 
  63:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  64:Src/stm32f4xx_it.c **** 
  65:Src/stm32f4xx_it.c **** /******************************************************************************/
  66:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  67:Src/stm32f4xx_it.c **** /******************************************************************************/
  68:Src/stm32f4xx_it.c **** /**
  69:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Src/stm32f4xx_it.c ****   */
  71:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  72:Src/stm32f4xx_it.c **** {
  29              		.loc 1 72 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  73:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Src/stm32f4xx_it.c **** 
  75:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Src/stm32f4xx_it.c **** 
  78:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  79:Src/stm32f4xx_it.c **** }
  34              		.loc 1 79 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
ARM GAS  /tmp/cc1AKb51.s 			page 3


  37              	.LFE130:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB131:
  80:Src/stm32f4xx_it.c **** 
  81:Src/stm32f4xx_it.c **** /**
  82:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  83:Src/stm32f4xx_it.c ****   */
  84:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  85:Src/stm32f4xx_it.c **** {
  49              		.loc 1 85 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  86:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  87:Src/stm32f4xx_it.c **** 
  88:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  89:Src/stm32f4xx_it.c ****   while (1)
  56              		.loc 1 89 3 discriminator 1 view .LVU3
  90:Src/stm32f4xx_it.c ****   {
  91:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  92:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  93:Src/stm32f4xx_it.c ****   }
  57              		.loc 1 93 3 discriminator 1 view .LVU4
  89:Src/stm32f4xx_it.c ****   {
  58              		.loc 1 89 9 discriminator 1 view .LVU5
  59 0000 FEE7     		b	.L3
  60              		.cfi_endproc
  61              	.LFE131:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	MemManage_Handler:
  72              	.LFB132:
  94:Src/stm32f4xx_it.c **** }
  95:Src/stm32f4xx_it.c **** 
  96:Src/stm32f4xx_it.c **** /**
  97:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
  98:Src/stm32f4xx_it.c ****   */
  99:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 100:Src/stm32f4xx_it.c **** {
  73              		.loc 1 100 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
ARM GAS  /tmp/cc1AKb51.s 			page 4


  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L5:
 101:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 102:Src/stm32f4xx_it.c **** 
 103:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 104:Src/stm32f4xx_it.c ****   while (1)
  80              		.loc 1 104 3 discriminator 1 view .LVU7
 105:Src/stm32f4xx_it.c ****   {
 106:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 107:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 108:Src/stm32f4xx_it.c ****   }
  81              		.loc 1 108 3 discriminator 1 view .LVU8
 104:Src/stm32f4xx_it.c ****   {
  82              		.loc 1 104 9 discriminator 1 view .LVU9
  83 0000 FEE7     		b	.L5
  84              		.cfi_endproc
  85              	.LFE132:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB133:
 109:Src/stm32f4xx_it.c **** }
 110:Src/stm32f4xx_it.c **** 
 111:Src/stm32f4xx_it.c **** /**
 112:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 113:Src/stm32f4xx_it.c ****   */
 114:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 115:Src/stm32f4xx_it.c **** {
  97              		.loc 1 115 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L7:
 116:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 117:Src/stm32f4xx_it.c **** 
 118:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 119:Src/stm32f4xx_it.c ****   while (1)
 104              		.loc 1 119 3 discriminator 1 view .LVU11
 120:Src/stm32f4xx_it.c ****   {
 121:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 122:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 123:Src/stm32f4xx_it.c ****   }
 105              		.loc 1 123 3 discriminator 1 view .LVU12
 119:Src/stm32f4xx_it.c ****   {
 106              		.loc 1 119 9 discriminator 1 view .LVU13
 107 0000 FEE7     		b	.L7
 108              		.cfi_endproc
 109              	.LFE133:
ARM GAS  /tmp/cc1AKb51.s 			page 5


 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB134:
 124:Src/stm32f4xx_it.c **** }
 125:Src/stm32f4xx_it.c **** 
 126:Src/stm32f4xx_it.c **** /**
 127:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 128:Src/stm32f4xx_it.c ****   */
 129:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 130:Src/stm32f4xx_it.c **** {
 121              		.loc 1 130 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L9:
 131:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 132:Src/stm32f4xx_it.c **** 
 133:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 134:Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 134 3 discriminator 1 view .LVU15
 135:Src/stm32f4xx_it.c ****   {
 136:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 137:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 138:Src/stm32f4xx_it.c ****   }
 129              		.loc 1 138 3 discriminator 1 view .LVU16
 134:Src/stm32f4xx_it.c ****   {
 130              		.loc 1 134 9 discriminator 1 view .LVU17
 131 0000 FEE7     		b	.L9
 132              		.cfi_endproc
 133              	.LFE134:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	SVC_Handler:
 144              	.LFB135:
 139:Src/stm32f4xx_it.c **** }
 140:Src/stm32f4xx_it.c **** 
 141:Src/stm32f4xx_it.c **** /**
 142:Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 143:Src/stm32f4xx_it.c ****   */
 144:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 145:Src/stm32f4xx_it.c **** {
 145              		.loc 1 145 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc1AKb51.s 			page 6


 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 146:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 147:Src/stm32f4xx_it.c **** 
 148:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 149:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 150:Src/stm32f4xx_it.c **** 
 151:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 152:Src/stm32f4xx_it.c **** }
 150              		.loc 1 152 1 view .LVU19
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE135:
 155              		.section	.text.DebugMon_Handler,"ax",%progbits
 156              		.align	1
 157              		.global	DebugMon_Handler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	DebugMon_Handler:
 164              	.LFB136:
 153:Src/stm32f4xx_it.c **** 
 154:Src/stm32f4xx_it.c **** /**
 155:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 156:Src/stm32f4xx_it.c ****   */
 157:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 158:Src/stm32f4xx_it.c **** {
 165              		.loc 1 158 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 159:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 160:Src/stm32f4xx_it.c **** 
 161:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 162:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 163:Src/stm32f4xx_it.c **** 
 164:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 165:Src/stm32f4xx_it.c **** }
 170              		.loc 1 165 1 view .LVU21
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE136:
 175              		.section	.text.PendSV_Handler,"ax",%progbits
 176              		.align	1
 177              		.global	PendSV_Handler
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	PendSV_Handler:
 184              	.LFB137:
 166:Src/stm32f4xx_it.c **** 
 167:Src/stm32f4xx_it.c **** /**
 168:Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 169:Src/stm32f4xx_it.c ****   */
ARM GAS  /tmp/cc1AKb51.s 			page 7


 170:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 171:Src/stm32f4xx_it.c **** {
 185              		.loc 1 171 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 172:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 173:Src/stm32f4xx_it.c **** 
 174:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 175:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 176:Src/stm32f4xx_it.c **** 
 177:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 178:Src/stm32f4xx_it.c **** }
 190              		.loc 1 178 1 view .LVU23
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE137:
 195              		.section	.text.SysTick_Handler,"ax",%progbits
 196              		.align	1
 197              		.global	SysTick_Handler
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	SysTick_Handler:
 204              	.LFB138:
 179:Src/stm32f4xx_it.c **** 
 180:Src/stm32f4xx_it.c **** /**
 181:Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 182:Src/stm32f4xx_it.c ****   */
 183:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 184:Src/stm32f4xx_it.c **** {
 205              		.loc 1 184 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI0:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 185:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 186:Src/stm32f4xx_it.c **** 
 187:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 188:Src/stm32f4xx_it.c ****   HAL_IncTick();
 214              		.loc 1 188 3 view .LVU25
 215 0002 FFF7FEFF 		bl	HAL_IncTick
 216              	.LVL0:
 189:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 190:Src/stm32f4xx_it.c **** 
 191:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 192:Src/stm32f4xx_it.c **** }
 217              		.loc 1 192 1 is_stmt 0 view .LVU26
 218 0006 08BD     		pop	{r3, pc}
 219              		.cfi_endproc
 220              	.LFE138:
ARM GAS  /tmp/cc1AKb51.s 			page 8


 222              		.section	.text.ADC_IRQHandler,"ax",%progbits
 223              		.align	1
 224              		.global	ADC_IRQHandler
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	ADC_IRQHandler:
 231              	.LFB139:
 193:Src/stm32f4xx_it.c **** 
 194:Src/stm32f4xx_it.c **** /******************************************************************************/
 195:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 196:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 197:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 198:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 199:Src/stm32f4xx_it.c **** /******************************************************************************/
 200:Src/stm32f4xx_it.c **** 
 201:Src/stm32f4xx_it.c **** /**
 202:Src/stm32f4xx_it.c ****   * @brief This function handles ADC1 global interrupt.
 203:Src/stm32f4xx_it.c ****   */
 204:Src/stm32f4xx_it.c **** void ADC_IRQHandler(void)
 205:Src/stm32f4xx_it.c **** {
 232              		.loc 1 205 1 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI1:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
 206:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 0 */
 207:Src/stm32f4xx_it.c **** 
 208:Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 0 */
 209:Src/stm32f4xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 241              		.loc 1 209 3 view .LVU28
 242 0002 0248     		ldr	r0, .L17
 243 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 244              	.LVL1:
 210:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 1 */
 211:Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 1 */
 212:Src/stm32f4xx_it.c **** }
 245              		.loc 1 212 1 is_stmt 0 view .LVU29
 246 0008 08BD     		pop	{r3, pc}
 247              	.L18:
 248 000a 00BF     		.align	2
 249              	.L17:
 250 000c 00000000 		.word	hadc1
 251              		.cfi_endproc
 252              	.LFE139:
 254              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 255              		.align	1
 256              		.global	HAL_ADC_ConvCpltCallback
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc1AKb51.s 			page 9


 262              	HAL_ADC_ConvCpltCallback:
 263              	.LVL2:
 264              	.LFB140:
 213:Src/stm32f4xx_it.c **** 
 214:Src/stm32f4xx_it.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 215:Src/stm32f4xx_it.c **** {
 265              		.loc 1 215 1 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		.loc 1 215 1 is_stmt 0 view .LVU31
 270 0000 08B5     		push	{r3, lr}
 271              	.LCFI2:
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 3, -8
 274              		.cfi_offset 14, -4
 216:Src/stm32f4xx_it.c ****     ADCValue = HAL_ADC_GetValue(&hadc1);
 275              		.loc 1 216 5 is_stmt 1 view .LVU32
 276              		.loc 1 216 16 is_stmt 0 view .LVU33
 277 0002 0648     		ldr	r0, .L21
 278              	.LVL3:
 279              		.loc 1 216 16 view .LVU34
 280 0004 FFF7FEFF 		bl	HAL_ADC_GetValue
 281              	.LVL4:
 282              		.loc 1 216 14 view .LVU35
 283 0008 82B2     		uxth	r2, r0
 284 000a 054B     		ldr	r3, .L21+4
 285 000c 1A80     		strh	r2, [r3]	@ movhi
 217:Src/stm32f4xx_it.c ****     //char buf[1000];
 218:Src/stm32f4xx_it.c ****     //snprintf(buf, sizeof(buf), "ADC - %d", ADCValue);
 219:Src/stm32f4xx_it.c ****     //debugPrintln(&huart2, buf);
 220:Src/stm32f4xx_it.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, ADCValue);
 286              		.loc 1 220 5 is_stmt 1 view .LVU36
 287 000e D2B2     		uxtb	r2, r2
 288 0010 0821     		movs	r1, #8
 289 0012 0448     		ldr	r0, .L21+8
 290 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 291              	.LVL5:
 221:Src/stm32f4xx_it.c **** }
 292              		.loc 1 221 1 is_stmt 0 view .LVU37
 293 0018 08BD     		pop	{r3, pc}
 294              	.L22:
 295 001a 00BF     		.align	2
 296              	.L21:
 297 001c 00000000 		.word	hadc1
 298 0020 00000000 		.word	ADCValue
 299 0024 00040240 		.word	1073873920
 300              		.cfi_endproc
 301              	.LFE140:
 303              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 304              		.align	1
 305              		.global	TIM2_IRQHandler
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv4-sp-d16
 311              	TIM2_IRQHandler:
ARM GAS  /tmp/cc1AKb51.s 			page 10


 312              	.LFB141:
 222:Src/stm32f4xx_it.c **** 
 223:Src/stm32f4xx_it.c **** 
 224:Src/stm32f4xx_it.c **** /**
 225:Src/stm32f4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 226:Src/stm32f4xx_it.c ****   */
 227:Src/stm32f4xx_it.c **** void TIM2_IRQHandler(void)
 228:Src/stm32f4xx_it.c **** {
 313              		.loc 1 228 1 is_stmt 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 08B5     		push	{r3, lr}
 318              	.LCFI3:
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 3, -8
 321              		.cfi_offset 14, -4
 229:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 230:Src/stm32f4xx_it.c **** 
 231:Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 232:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 322              		.loc 1 232 3 view .LVU39
 323 0002 0248     		ldr	r0, .L25
 324 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 325              	.LVL6:
 233:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 234:Src/stm32f4xx_it.c ****   /*debugPrintln(&huart2, "---");
 235:Src/stm32f4xx_it.c ****   if (HAL_ADC_PollForConversion(&hadc1, 500) == HAL_OK)
 236:Src/stm32f4xx_it.c ****   {
 237:Src/stm32f4xx_it.c ****           ADCValue = HAL_ADC_GetValue(&hadc1);*/
 238:Src/stm32f4xx_it.c ****           //char buf[1000];
 239:Src/stm32f4xx_it.c ****           //snprintf(buf, sizeof(buf), "ADC - %d", ADCValue);
 240:Src/stm32f4xx_it.c ****           //debugPrintln(&huart2, buf);
 241:Src/stm32f4xx_it.c ****           /*
 242:Src/stm32f4xx_it.c ****           //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, ADCValue);
 243:Src/stm32f4xx_it.c ****   }
 244:Src/stm32f4xx_it.c ****   debugPrintln(&huart2, "!!!");*/
 245:Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 246:Src/stm32f4xx_it.c **** }
 326              		.loc 1 246 1 is_stmt 0 view .LVU40
 327 0008 08BD     		pop	{r3, pc}
 328              	.L26:
 329 000a 00BF     		.align	2
 330              	.L25:
 331 000c 00000000 		.word	htim2
 332              		.cfi_endproc
 333              	.LFE141:
 335              		.comm	htim2,64,4
 336              		.comm	huart2,64,4
 337              		.comm	ADCValue,2,2
 338              		.text
 339              	.Letext0:
 340              		.file 2 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/lib/gcc/arm-none-eabi/9.2.1/include/stdint
 341              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 342              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 343              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 344              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
ARM GAS  /tmp/cc1AKb51.s 			page 11


 345              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 346              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 347              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 348              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 349              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 350              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 351              		.file 13 "Inc/main.h"
 352              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  /tmp/cc1AKb51.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/cc1AKb51.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc1AKb51.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc1AKb51.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc1AKb51.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc1AKb51.s:64     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc1AKb51.s:71     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc1AKb51.s:88     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc1AKb51.s:95     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc1AKb51.s:112    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc1AKb51.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc1AKb51.s:136    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc1AKb51.s:143    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc1AKb51.s:156    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc1AKb51.s:163    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc1AKb51.s:176    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc1AKb51.s:183    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc1AKb51.s:196    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc1AKb51.s:203    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc1AKb51.s:223    .text.ADC_IRQHandler:0000000000000000 $t
     /tmp/cc1AKb51.s:230    .text.ADC_IRQHandler:0000000000000000 ADC_IRQHandler
     /tmp/cc1AKb51.s:250    .text.ADC_IRQHandler:000000000000000c $d
     /tmp/cc1AKb51.s:255    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/cc1AKb51.s:262    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/cc1AKb51.s:297    .text.HAL_ADC_ConvCpltCallback:000000000000001c $d
                            *COM*:0000000000000002 ADCValue
     /tmp/cc1AKb51.s:304    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/cc1AKb51.s:311    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/cc1AKb51.s:331    .text.TIM2_IRQHandler:000000000000000c $d
                            *COM*:0000000000000040 htim2
                            *COM*:0000000000000040 huart2

UNDEFINED SYMBOLS
HAL_IncTick
HAL_ADC_IRQHandler
hadc1
HAL_ADC_GetValue
HAL_GPIO_WritePin
HAL_TIM_IRQHandler
