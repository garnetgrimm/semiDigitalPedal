ARM GAS  /tmp/ccxsxQn0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB294:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include <string.h>
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
ARM GAS  /tmp/ccxsxQn0.s 			page 2


  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** ADC_HandleTypeDef hadc1;
  45:Src/main.c    **** 
  46:Src/main.c    **** DAC_HandleTypeDef hdac1;
  47:Src/main.c    **** 
  48:Src/main.c    **** OPAMP_HandleTypeDef hopamp1;
  49:Src/main.c    **** 
  50:Src/main.c    **** TIM_HandleTypeDef htim2;
  51:Src/main.c    **** 
  52:Src/main.c    **** UART_HandleTypeDef huart2;
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** /* USER CODE END PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** static void MX_GPIO_Init(void);
  60:Src/main.c    **** static void MX_USART2_UART_Init(void);
  61:Src/main.c    **** static void MX_DAC1_Init(void);
  62:Src/main.c    **** static void MX_ADC1_Init(void);
  63:Src/main.c    **** static void MX_OPAMP1_Init(void);
  64:Src/main.c    **** static void MX_TIM2_Init(void);
  65:Src/main.c    **** /* USER CODE BEGIN PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END PFP */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  70:Src/main.c    **** /* USER CODE BEGIN 0 */
  71:Src/main.c    **** void debugPrintln(UART_HandleTypeDef *huart, char _out[]){
  72:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) _out, strlen(_out), 10);
  73:Src/main.c    ****  char newline[4] = "\r\n";
  74:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) newline, 2, 10);
  75:Src/main.c    **** }
  76:Src/main.c    **** /* USER CODE END 0 */
  77:Src/main.c    **** 
  78:Src/main.c    **** /**
  79:Src/main.c    ****   * @brief  The application entry point.
  80:Src/main.c    ****   * @retval int
  81:Src/main.c    ****   */
  82:Src/main.c    **** int main(void)
  83:Src/main.c    **** {
  84:Src/main.c    ****   /* USER CODE BEGIN 1 */
  85:Src/main.c    ****   /* USER CODE END 1 */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  88:Src/main.c    **** 
ARM GAS  /tmp/ccxsxQn0.s 			page 3


  89:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  90:Src/main.c    ****   HAL_Init();
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE BEGIN Init */
  93:Src/main.c    ****   /* USER CODE END Init */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Configure the system clock */
  96:Src/main.c    ****   SystemClock_Config();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END SysInit */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Initialize all configured peripherals */
 103:Src/main.c    ****   MX_GPIO_Init();
 104:Src/main.c    ****   MX_USART2_UART_Init();
 105:Src/main.c    ****   MX_DAC1_Init();
 106:Src/main.c    ****   MX_ADC1_Init();
 107:Src/main.c    ****   MX_OPAMP1_Init();
 108:Src/main.c    ****   MX_TIM2_Init();
 109:Src/main.c    ****   /* USER CODE BEGIN 2 */
 110:Src/main.c    ****   debugPrintln(&huart2, (char*) "Setting effects....");
 111:Src/main.c    ****   default_init_reverb(&r);
 112:Src/main.c    ****   default_init_octave(&o);
 113:Src/main.c    ****   default_init_fuzz(&f);
 114:Src/main.c    ****   debugPrintln(&huart2, (char*) "Setting up HAL....");
 115:Src/main.c    ****   HAL_DAC_Start(&hdac1, DAC_CHANNEL_1);
 116:Src/main.c    ****   HAL_OPAMP_Start(&hopamp1);
 117:Src/main.c    ****   debugPrintln(&huart2, (char*) "(ADC IT)");
 118:Src/main.c    ****   //HAL_ADC_Start_DMA(&hadc1, (uint32_t*) adc_data, 1);
 119:Src/main.c    ****   //HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED);
 120:Src/main.c    ****   HAL_ADC_Start_IT(&hadc1);
 121:Src/main.c    ****   debugPrintln(&huart2, (char*) "(TIM IT)");
 122:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 123:Src/main.c    ****   debugPrintln(&huart2, (char*) "done!");
 124:Src/main.c    ****   /* USER CODE END 2 */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* Infinite loop */
 127:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 128:Src/main.c    ****   while (1)
 129:Src/main.c    ****   {
 130:Src/main.c    ****     //char buf[32];
 131:Src/main.c    ****     //sprintf(buf, "ADC: %d", value_adc);
 132:Src/main.c    ****     //debugPrintln(&huart2,buf);
 133:Src/main.c    ****     /* USER CODE END WHILE */
 134:Src/main.c    **** 
 135:Src/main.c    ****     /* USER CODE BEGIN 3 */
 136:Src/main.c    ****   }
 137:Src/main.c    ****   /* USER CODE END 3 */
 138:Src/main.c    **** }
 139:Src/main.c    **** 
 140:Src/main.c    **** /**
 141:Src/main.c    ****   * @brief System Clock Configuration
 142:Src/main.c    ****   * @retval None
 143:Src/main.c    ****   */
 144:Src/main.c    **** void SystemClock_Config(void)
 145:Src/main.c    **** {
ARM GAS  /tmp/ccxsxQn0.s 			page 4


 146:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 147:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 148:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 149:Src/main.c    **** 
 150:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 151:Src/main.c    ****   */
 152:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 153:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 154:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 155:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_10;
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 157:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 158:Src/main.c    ****   {
 159:Src/main.c    ****     Error_Handler();
 160:Src/main.c    ****   }
 161:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 162:Src/main.c    ****   */
 163:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 164:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 165:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 166:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 167:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 168:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 169:Src/main.c    **** 
 170:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 171:Src/main.c    ****   {
 172:Src/main.c    ****     Error_Handler();
 173:Src/main.c    ****   }
 174:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_ADC;
 175:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 176:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 177:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 178:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 2;
 179:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 8;
 180:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 181:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 182:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 183:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 184:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 185:Src/main.c    ****   {
 186:Src/main.c    ****     Error_Handler();
 187:Src/main.c    ****   }
 188:Src/main.c    ****   /** Configure the main internal regulator output voltage
 189:Src/main.c    ****   */
 190:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 191:Src/main.c    ****   {
 192:Src/main.c    ****     Error_Handler();
 193:Src/main.c    ****   }
 194:Src/main.c    **** }
 195:Src/main.c    **** 
 196:Src/main.c    **** /**
 197:Src/main.c    ****   * @brief ADC1 Initialization Function
 198:Src/main.c    ****   * @param None
 199:Src/main.c    ****   * @retval None
 200:Src/main.c    ****   */
 201:Src/main.c    **** static void MX_ADC1_Init(void)
 202:Src/main.c    **** {
ARM GAS  /tmp/ccxsxQn0.s 			page 5


 203:Src/main.c    **** 
 204:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 205:Src/main.c    **** 
 206:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 207:Src/main.c    **** 
 208:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 209:Src/main.c    **** 
 210:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 211:Src/main.c    **** 
 212:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 213:Src/main.c    ****   /** Common config
 214:Src/main.c    ****   */
 215:Src/main.c    ****   hadc1.Instance = ADC1;
 216:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 217:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 218:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 219:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 220:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 221:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 222:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 223:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 224:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 225:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 226:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 227:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 228:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 229:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 230:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 231:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 232:Src/main.c    ****   {
 233:Src/main.c    ****     Error_Handler();
 234:Src/main.c    ****   }
 235:Src/main.c    ****   /** Configure Regular Channel
 236:Src/main.c    ****   */
 237:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_10;
 238:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 239:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_24CYCLES_5;
 240:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 241:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 242:Src/main.c    ****   sConfig.Offset = 0;
 243:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 244:Src/main.c    ****   {
 245:Src/main.c    ****     Error_Handler();
 246:Src/main.c    ****   }
 247:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 248:Src/main.c    ****   hadc1.Init.EOCSelection = EOC_SEQ_CONV;
 249:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 250:Src/main.c    ****   {
 251:Src/main.c    ****     Error_Handler();
 252:Src/main.c    ****   }
 253:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 254:Src/main.c    **** 
 255:Src/main.c    **** }
 256:Src/main.c    **** 
 257:Src/main.c    **** /**
 258:Src/main.c    ****   * @brief DAC1 Initialization Function
 259:Src/main.c    ****   * @param None
ARM GAS  /tmp/ccxsxQn0.s 			page 6


 260:Src/main.c    ****   * @retval None
 261:Src/main.c    ****   */
 262:Src/main.c    **** static void MX_DAC1_Init(void)
 263:Src/main.c    **** {
 264:Src/main.c    **** 
 265:Src/main.c    ****   /* USER CODE BEGIN DAC1_Init 0 */
 266:Src/main.c    **** 
 267:Src/main.c    ****   /* USER CODE END DAC1_Init 0 */
 268:Src/main.c    **** 
 269:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 270:Src/main.c    **** 
 271:Src/main.c    ****   /* USER CODE BEGIN DAC1_Init 1 */
 272:Src/main.c    **** 
 273:Src/main.c    ****   /* USER CODE END DAC1_Init 1 */
 274:Src/main.c    ****   /** DAC Initialization
 275:Src/main.c    ****   */
 276:Src/main.c    ****   hdac1.Instance = DAC1;
 277:Src/main.c    ****   if (HAL_DAC_Init(&hdac1) != HAL_OK)
 278:Src/main.c    ****   {
 279:Src/main.c    ****     Error_Handler();
 280:Src/main.c    ****   }
 281:Src/main.c    ****   /** DAC channel OUT1 config
 282:Src/main.c    ****   */
 283:Src/main.c    ****   sConfig.DAC_SampleAndHold = DAC_SAMPLEANDHOLD_DISABLE;
 284:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 285:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 286:Src/main.c    ****   sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
 287:Src/main.c    ****   sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 288:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 289:Src/main.c    ****   {
 290:Src/main.c    ****     Error_Handler();
 291:Src/main.c    ****   }
 292:Src/main.c    ****   /* USER CODE BEGIN DAC1_Init 2 */
 293:Src/main.c    **** 
 294:Src/main.c    ****   /* USER CODE END DAC1_Init 2 */
 295:Src/main.c    **** 
 296:Src/main.c    **** }
 297:Src/main.c    **** 
 298:Src/main.c    **** /**
 299:Src/main.c    ****   * @brief OPAMP1 Initialization Function
 300:Src/main.c    ****   * @param None
 301:Src/main.c    ****   * @retval None
 302:Src/main.c    ****   */
 303:Src/main.c    **** static void MX_OPAMP1_Init(void)
 304:Src/main.c    **** {
 305:Src/main.c    **** 
 306:Src/main.c    ****   /* USER CODE BEGIN OPAMP1_Init 0 */
 307:Src/main.c    **** 
 308:Src/main.c    ****   /* USER CODE END OPAMP1_Init 0 */
 309:Src/main.c    **** 
 310:Src/main.c    ****   /* USER CODE BEGIN OPAMP1_Init 1 */
 311:Src/main.c    **** 
 312:Src/main.c    ****   /* USER CODE END OPAMP1_Init 1 */
 313:Src/main.c    ****   hopamp1.Instance = OPAMP1;
 314:Src/main.c    ****   hopamp1.Init.PowerSupplyRange = OPAMP_POWERSUPPLY_LOW;
 315:Src/main.c    ****   hopamp1.Init.Mode = OPAMP_PGA_MODE;
 316:Src/main.c    ****   hopamp1.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
ARM GAS  /tmp/ccxsxQn0.s 			page 7


 317:Src/main.c    ****   hopamp1.Init.InvertingInput = OPAMP_INVERTINGINPUT_CONNECT_NO;
 318:Src/main.c    ****   hopamp1.Init.PgaGain = OPAMP_PGA_GAIN_2;
 319:Src/main.c    ****   hopamp1.Init.PowerMode = OPAMP_POWERMODE_NORMAL;
 320:Src/main.c    ****   hopamp1.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
 321:Src/main.c    ****   if (HAL_OPAMP_Init(&hopamp1) != HAL_OK)
 322:Src/main.c    ****   {
 323:Src/main.c    ****     Error_Handler();
 324:Src/main.c    ****   }
 325:Src/main.c    ****   /* USER CODE BEGIN OPAMP1_Init 2 */
 326:Src/main.c    **** 
 327:Src/main.c    ****   /* USER CODE END OPAMP1_Init 2 */
 328:Src/main.c    **** 
 329:Src/main.c    **** }
 330:Src/main.c    **** 
 331:Src/main.c    **** /**
 332:Src/main.c    ****   * @brief TIM2 Initialization Function
 333:Src/main.c    ****   * @param None
 334:Src/main.c    ****   * @retval None
 335:Src/main.c    ****   */
 336:Src/main.c    **** static void MX_TIM2_Init(void)
 337:Src/main.c    **** {
 338:Src/main.c    **** 
 339:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 340:Src/main.c    **** 
 341:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 342:Src/main.c    **** 
 343:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 344:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 345:Src/main.c    **** 
 346:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 347:Src/main.c    **** 
 348:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 349:Src/main.c    ****   htim2.Instance = TIM2;
 350:Src/main.c    ****   htim2.Init.Prescaler = 32;
 351:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 352:Src/main.c    ****   htim2.Init.Period = 10;
 353:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 354:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 355:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 356:Src/main.c    ****   {
 357:Src/main.c    ****     Error_Handler();
 358:Src/main.c    ****   }
 359:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 360:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 361:Src/main.c    ****   {
 362:Src/main.c    ****     Error_Handler();
 363:Src/main.c    ****   }
 364:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 365:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 366:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 367:Src/main.c    ****   {
 368:Src/main.c    ****     Error_Handler();
 369:Src/main.c    ****   }
 370:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 371:Src/main.c    **** 
 372:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 373:Src/main.c    **** 
ARM GAS  /tmp/ccxsxQn0.s 			page 8


 374:Src/main.c    **** }
 375:Src/main.c    **** 
 376:Src/main.c    **** /**
 377:Src/main.c    ****   * @brief USART2 Initialization Function
 378:Src/main.c    ****   * @param None
 379:Src/main.c    ****   * @retval None
 380:Src/main.c    ****   */
 381:Src/main.c    **** static void MX_USART2_UART_Init(void)
 382:Src/main.c    **** {
 383:Src/main.c    **** 
 384:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 385:Src/main.c    **** 
 386:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 387:Src/main.c    **** 
 388:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 389:Src/main.c    **** 
 390:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 391:Src/main.c    ****   huart2.Instance = USART2;
 392:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 393:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 394:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 395:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 396:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 397:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 398:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 399:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 400:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 401:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 402:Src/main.c    ****   {
 403:Src/main.c    ****     Error_Handler();
 404:Src/main.c    ****   }
 405:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 406:Src/main.c    **** 
 407:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 408:Src/main.c    **** 
 409:Src/main.c    **** }
 410:Src/main.c    **** 
 411:Src/main.c    **** /**
 412:Src/main.c    ****   * @brief GPIO Initialization Function
 413:Src/main.c    ****   * @param None
 414:Src/main.c    ****   * @retval None
 415:Src/main.c    ****   */
 416:Src/main.c    **** static void MX_GPIO_Init(void)
 417:Src/main.c    **** {
  28              		.loc 1 417 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
ARM GAS  /tmp/ccxsxQn0.s 			page 9


 418:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 418 3 view .LVU1
  42              		.loc 1 418 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 419:Src/main.c    **** 
 420:Src/main.c    ****   /* GPIO Ports Clock Enable */
 421:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 421 3 is_stmt 1 view .LVU3
  50              	.LBB2:
  51              		.loc 1 421 3 view .LVU4
  52              		.loc 1 421 3 view .LVU5
  53 0010 114B     		ldr	r3, .L3
  54 0012 DA6C     		ldr	r2, [r3, #76]
  55 0014 42F00102 		orr	r2, r2, #1
  56 0018 DA64     		str	r2, [r3, #76]
  57              		.loc 1 421 3 view .LVU6
  58 001a DA6C     		ldr	r2, [r3, #76]
  59 001c 02F00102 		and	r2, r2, #1
  60 0020 0192     		str	r2, [sp, #4]
  61              		.loc 1 421 3 view .LVU7
  62 0022 019A     		ldr	r2, [sp, #4]
  63              	.LBE2:
  64              		.loc 1 421 3 view .LVU8
 422:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 422 3 view .LVU9
  66              	.LBB3:
  67              		.loc 1 422 3 view .LVU10
  68              		.loc 1 422 3 view .LVU11
  69 0024 DA6C     		ldr	r2, [r3, #76]
  70 0026 42F00202 		orr	r2, r2, #2
  71 002a DA64     		str	r2, [r3, #76]
  72              		.loc 1 422 3 view .LVU12
  73 002c DB6C     		ldr	r3, [r3, #76]
  74 002e 03F00203 		and	r3, r3, #2
  75 0032 0293     		str	r3, [sp, #8]
  76              		.loc 1 422 3 view .LVU13
  77 0034 029B     		ldr	r3, [sp, #8]
  78              	.LBE3:
  79              		.loc 1 422 3 view .LVU14
 423:Src/main.c    **** 
 424:Src/main.c    ****   /*Configure GPIO pin Output Level */
 425:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
  80              		.loc 1 425 3 view .LVU15
  81 0036 094D     		ldr	r5, .L3+4
  82 0038 2246     		mov	r2, r4
  83 003a 0121     		movs	r1, #1
  84 003c 2846     		mov	r0, r5
  85 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL0:
 426:Src/main.c    **** 
 427:Src/main.c    ****   /*Configure GPIO pin : PB0 */
 428:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
ARM GAS  /tmp/ccxsxQn0.s 			page 10


  87              		.loc 1 428 3 view .LVU16
  88              		.loc 1 428 23 is_stmt 0 view .LVU17
  89 0042 0123     		movs	r3, #1
  90 0044 0393     		str	r3, [sp, #12]
 429:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 429 3 is_stmt 1 view .LVU18
  92              		.loc 1 429 24 is_stmt 0 view .LVU19
  93 0046 0493     		str	r3, [sp, #16]
 430:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  94              		.loc 1 430 3 is_stmt 1 view .LVU20
  95              		.loc 1 430 24 is_stmt 0 view .LVU21
  96 0048 0594     		str	r4, [sp, #20]
 431:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  97              		.loc 1 431 3 is_stmt 1 view .LVU22
  98              		.loc 1 431 25 is_stmt 0 view .LVU23
  99 004a 0694     		str	r4, [sp, #24]
 432:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 100              		.loc 1 432 3 is_stmt 1 view .LVU24
 101 004c 03A9     		add	r1, sp, #12
 102 004e 2846     		mov	r0, r5
 103 0050 FFF7FEFF 		bl	HAL_GPIO_Init
 104              	.LVL1:
 433:Src/main.c    **** 
 434:Src/main.c    **** }
 105              		.loc 1 434 1 is_stmt 0 view .LVU25
 106 0054 09B0     		add	sp, sp, #36
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 12
 109              		@ sp needed
 110 0056 30BD     		pop	{r4, r5, pc}
 111              	.L4:
 112              		.align	2
 113              	.L3:
 114 0058 00100240 		.word	1073876992
 115 005c 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE294:
 119              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 120              		.align	1
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv4-sp-d16
 126              	MX_USART2_UART_Init:
 127              	.LFB293:
 382:Src/main.c    **** 
 128              		.loc 1 382 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132 0000 08B5     		push	{r3, lr}
 133              	.LCFI3:
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 3, -8
 136              		.cfi_offset 14, -4
 391:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 137              		.loc 1 391 3 view .LVU27
ARM GAS  /tmp/ccxsxQn0.s 			page 11


 391:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 138              		.loc 1 391 19 is_stmt 0 view .LVU28
 139 0002 0948     		ldr	r0, .L7
 140 0004 094B     		ldr	r3, .L7+4
 141 0006 0360     		str	r3, [r0]
 392:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 142              		.loc 1 392 3 is_stmt 1 view .LVU29
 392:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 143              		.loc 1 392 24 is_stmt 0 view .LVU30
 144 0008 4FF4E133 		mov	r3, #115200
 145 000c 4360     		str	r3, [r0, #4]
 393:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 146              		.loc 1 393 3 is_stmt 1 view .LVU31
 393:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 147              		.loc 1 393 26 is_stmt 0 view .LVU32
 148 000e 0023     		movs	r3, #0
 149 0010 8360     		str	r3, [r0, #8]
 394:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 150              		.loc 1 394 3 is_stmt 1 view .LVU33
 394:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 151              		.loc 1 394 24 is_stmt 0 view .LVU34
 152 0012 C360     		str	r3, [r0, #12]
 395:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 153              		.loc 1 395 3 is_stmt 1 view .LVU35
 395:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 154              		.loc 1 395 22 is_stmt 0 view .LVU36
 155 0014 0361     		str	r3, [r0, #16]
 396:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 156              		.loc 1 396 3 is_stmt 1 view .LVU37
 396:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 157              		.loc 1 396 20 is_stmt 0 view .LVU38
 158 0016 0C22     		movs	r2, #12
 159 0018 4261     		str	r2, [r0, #20]
 397:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 160              		.loc 1 397 3 is_stmt 1 view .LVU39
 397:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 161              		.loc 1 397 25 is_stmt 0 view .LVU40
 162 001a 8361     		str	r3, [r0, #24]
 398:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 163              		.loc 1 398 3 is_stmt 1 view .LVU41
 398:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 164              		.loc 1 398 28 is_stmt 0 view .LVU42
 165 001c C361     		str	r3, [r0, #28]
 399:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 166              		.loc 1 399 3 is_stmt 1 view .LVU43
 399:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 167              		.loc 1 399 30 is_stmt 0 view .LVU44
 168 001e 0362     		str	r3, [r0, #32]
 400:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 169              		.loc 1 400 3 is_stmt 1 view .LVU45
 400:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 170              		.loc 1 400 38 is_stmt 0 view .LVU46
 171 0020 4362     		str	r3, [r0, #36]
 401:Src/main.c    ****   {
 172              		.loc 1 401 3 is_stmt 1 view .LVU47
 401:Src/main.c    ****   {
 173              		.loc 1 401 7 is_stmt 0 view .LVU48
ARM GAS  /tmp/ccxsxQn0.s 			page 12


 174 0022 FFF7FEFF 		bl	HAL_UART_Init
 175              	.LVL2:
 409:Src/main.c    **** 
 176              		.loc 1 409 1 view .LVU49
 177 0026 08BD     		pop	{r3, pc}
 178              	.L8:
 179              		.align	2
 180              	.L7:
 181 0028 00000000 		.word	huart2
 182 002c 00440040 		.word	1073759232
 183              		.cfi_endproc
 184              	.LFE293:
 186              		.section	.text.MX_DAC1_Init,"ax",%progbits
 187              		.align	1
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu fpv4-sp-d16
 193              	MX_DAC1_Init:
 194              	.LFB290:
 263:Src/main.c    **** 
 195              		.loc 1 263 1 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 40
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 10B5     		push	{r4, lr}
 200              	.LCFI4:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 4, -8
 203              		.cfi_offset 14, -4
 204 0002 8AB0     		sub	sp, sp, #40
 205              	.LCFI5:
 206              		.cfi_def_cfa_offset 48
 269:Src/main.c    **** 
 207              		.loc 1 269 3 view .LVU51
 269:Src/main.c    **** 
 208              		.loc 1 269 26 is_stmt 0 view .LVU52
 209 0004 2422     		movs	r2, #36
 210 0006 0021     		movs	r1, #0
 211 0008 01A8     		add	r0, sp, #4
 212 000a FFF7FEFF 		bl	memset
 213              	.LVL3:
 276:Src/main.c    ****   if (HAL_DAC_Init(&hdac1) != HAL_OK)
 214              		.loc 1 276 3 is_stmt 1 view .LVU53
 276:Src/main.c    ****   if (HAL_DAC_Init(&hdac1) != HAL_OK)
 215              		.loc 1 276 18 is_stmt 0 view .LVU54
 216 000e 094C     		ldr	r4, .L11
 217 0010 094B     		ldr	r3, .L11+4
 218 0012 2360     		str	r3, [r4]
 277:Src/main.c    ****   {
 219              		.loc 1 277 3 is_stmt 1 view .LVU55
 277:Src/main.c    ****   {
 220              		.loc 1 277 7 is_stmt 0 view .LVU56
 221 0014 2046     		mov	r0, r4
 222 0016 FFF7FEFF 		bl	HAL_DAC_Init
 223              	.LVL4:
 283:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
ARM GAS  /tmp/ccxsxQn0.s 			page 13


 224              		.loc 1 283 3 is_stmt 1 view .LVU57
 283:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 225              		.loc 1 283 29 is_stmt 0 view .LVU58
 226 001a 0022     		movs	r2, #0
 227 001c 0192     		str	r2, [sp, #4]
 284:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 228              		.loc 1 284 3 is_stmt 1 view .LVU59
 284:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 229              		.loc 1 284 23 is_stmt 0 view .LVU60
 230 001e 0292     		str	r2, [sp, #8]
 285:Src/main.c    ****   sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
 231              		.loc 1 285 3 is_stmt 1 view .LVU61
 285:Src/main.c    ****   sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
 232              		.loc 1 285 28 is_stmt 0 view .LVU62
 233 0020 0392     		str	r2, [sp, #12]
 286:Src/main.c    ****   sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 234              		.loc 1 286 3 is_stmt 1 view .LVU63
 286:Src/main.c    ****   sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 235              		.loc 1 286 39 is_stmt 0 view .LVU64
 236 0022 0492     		str	r2, [sp, #16]
 287:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 237              		.loc 1 287 3 is_stmt 1 view .LVU65
 287:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 238              		.loc 1 287 28 is_stmt 0 view .LVU66
 239 0024 0592     		str	r2, [sp, #20]
 288:Src/main.c    ****   {
 240              		.loc 1 288 3 is_stmt 1 view .LVU67
 288:Src/main.c    ****   {
 241              		.loc 1 288 7 is_stmt 0 view .LVU68
 242 0026 01A9     		add	r1, sp, #4
 243 0028 2046     		mov	r0, r4
 244 002a FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 245              	.LVL5:
 296:Src/main.c    **** 
 246              		.loc 1 296 1 view .LVU69
 247 002e 0AB0     		add	sp, sp, #40
 248              	.LCFI6:
 249              		.cfi_def_cfa_offset 8
 250              		@ sp needed
 251 0030 10BD     		pop	{r4, pc}
 252              	.L12:
 253 0032 00BF     		.align	2
 254              	.L11:
 255 0034 00000000 		.word	hdac1
 256 0038 00740040 		.word	1073771520
 257              		.cfi_endproc
 258              	.LFE290:
 260              		.section	.text.MX_ADC1_Init,"ax",%progbits
 261              		.align	1
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	MX_ADC1_Init:
 268              	.LFB289:
 202:Src/main.c    **** 
 269              		.loc 1 202 1 is_stmt 1 view -0
ARM GAS  /tmp/ccxsxQn0.s 			page 14


 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 24
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273 0000 70B5     		push	{r4, r5, r6, lr}
 274              	.LCFI7:
 275              		.cfi_def_cfa_offset 16
 276              		.cfi_offset 4, -16
 277              		.cfi_offset 5, -12
 278              		.cfi_offset 6, -8
 279              		.cfi_offset 14, -4
 280 0002 86B0     		sub	sp, sp, #24
 281              	.LCFI8:
 282              		.cfi_def_cfa_offset 40
 208:Src/main.c    **** 
 283              		.loc 1 208 3 view .LVU71
 208:Src/main.c    **** 
 284              		.loc 1 208 26 is_stmt 0 view .LVU72
 285 0004 0025     		movs	r5, #0
 286 0006 0095     		str	r5, [sp]
 287 0008 0195     		str	r5, [sp, #4]
 288 000a 0295     		str	r5, [sp, #8]
 289 000c 0395     		str	r5, [sp, #12]
 290 000e 0495     		str	r5, [sp, #16]
 291 0010 0595     		str	r5, [sp, #20]
 215:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 292              		.loc 1 215 3 is_stmt 1 view .LVU73
 215:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 293              		.loc 1 215 18 is_stmt 0 view .LVU74
 294 0012 184C     		ldr	r4, .L15
 295 0014 184B     		ldr	r3, .L15+4
 296 0016 2360     		str	r3, [r4]
 216:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 297              		.loc 1 216 3 is_stmt 1 view .LVU75
 216:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 298              		.loc 1 216 29 is_stmt 0 view .LVU76
 299 0018 4FF44033 		mov	r3, #196608
 300 001c 6360     		str	r3, [r4, #4]
 217:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 301              		.loc 1 217 3 is_stmt 1 view .LVU77
 217:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 302              		.loc 1 217 25 is_stmt 0 view .LVU78
 303 001e A560     		str	r5, [r4, #8]
 218:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 304              		.loc 1 218 3 is_stmt 1 view .LVU79
 218:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 305              		.loc 1 218 24 is_stmt 0 view .LVU80
 306 0020 E560     		str	r5, [r4, #12]
 219:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 307              		.loc 1 219 3 is_stmt 1 view .LVU81
 219:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 308              		.loc 1 219 27 is_stmt 0 view .LVU82
 309 0022 2561     		str	r5, [r4, #16]
 220:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 310              		.loc 1 220 3 is_stmt 1 view .LVU83
 220:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 311              		.loc 1 220 27 is_stmt 0 view .LVU84
 312 0024 0826     		movs	r6, #8
ARM GAS  /tmp/ccxsxQn0.s 			page 15


 313 0026 6661     		str	r6, [r4, #20]
 221:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 314              		.loc 1 221 3 is_stmt 1 view .LVU85
 221:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 315              		.loc 1 221 31 is_stmt 0 view .LVU86
 316 0028 2576     		strb	r5, [r4, #24]
 222:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 317              		.loc 1 222 3 is_stmt 1 view .LVU87
 222:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 318              		.loc 1 222 33 is_stmt 0 view .LVU88
 319 002a 0123     		movs	r3, #1
 320 002c 6376     		strb	r3, [r4, #25]
 223:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 321              		.loc 1 223 3 is_stmt 1 view .LVU89
 223:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 322              		.loc 1 223 30 is_stmt 0 view .LVU90
 323 002e E361     		str	r3, [r4, #28]
 224:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 324              		.loc 1 224 3 is_stmt 1 view .LVU91
 224:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 325              		.loc 1 224 36 is_stmt 0 view .LVU92
 326 0030 84F82050 		strb	r5, [r4, #32]
 225:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 327              		.loc 1 225 3 is_stmt 1 view .LVU93
 225:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 328              		.loc 1 225 34 is_stmt 0 view .LVU94
 329 0034 6362     		str	r3, [r4, #36]
 226:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 330              		.loc 1 226 3 is_stmt 1 view .LVU95
 226:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 331              		.loc 1 226 31 is_stmt 0 view .LVU96
 332 0036 A562     		str	r5, [r4, #40]
 227:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 333              		.loc 1 227 3 is_stmt 1 view .LVU97
 227:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 334              		.loc 1 227 35 is_stmt 0 view .LVU98
 335 0038 E562     		str	r5, [r4, #44]
 228:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 336              		.loc 1 228 3 is_stmt 1 view .LVU99
 228:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 337              		.loc 1 228 36 is_stmt 0 view .LVU100
 338 003a 84F83050 		strb	r5, [r4, #48]
 229:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 339              		.loc 1 229 3 is_stmt 1 view .LVU101
 229:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 340              		.loc 1 229 22 is_stmt 0 view .LVU102
 341 003e 6563     		str	r5, [r4, #52]
 230:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 342              		.loc 1 230 3 is_stmt 1 view .LVU103
 230:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 343              		.loc 1 230 31 is_stmt 0 view .LVU104
 344 0040 84F83850 		strb	r5, [r4, #56]
 231:Src/main.c    ****   {
 345              		.loc 1 231 3 is_stmt 1 view .LVU105
 231:Src/main.c    ****   {
 346              		.loc 1 231 7 is_stmt 0 view .LVU106
 347 0044 2046     		mov	r0, r4
ARM GAS  /tmp/ccxsxQn0.s 			page 16


 348 0046 FFF7FEFF 		bl	HAL_ADC_Init
 349              	.LVL6:
 237:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 350              		.loc 1 237 3 is_stmt 1 view .LVU107
 237:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 351              		.loc 1 237 19 is_stmt 0 view .LVU108
 352 004a 0C4B     		ldr	r3, .L15+8
 353 004c 0093     		str	r3, [sp]
 238:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_24CYCLES_5;
 354              		.loc 1 238 3 is_stmt 1 view .LVU109
 238:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_24CYCLES_5;
 355              		.loc 1 238 16 is_stmt 0 view .LVU110
 356 004e 0623     		movs	r3, #6
 357 0050 0193     		str	r3, [sp, #4]
 239:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 358              		.loc 1 239 3 is_stmt 1 view .LVU111
 239:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 359              		.loc 1 239 24 is_stmt 0 view .LVU112
 360 0052 0323     		movs	r3, #3
 361 0054 0293     		str	r3, [sp, #8]
 240:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 362              		.loc 1 240 3 is_stmt 1 view .LVU113
 240:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 363              		.loc 1 240 22 is_stmt 0 view .LVU114
 364 0056 7F23     		movs	r3, #127
 365 0058 0393     		str	r3, [sp, #12]
 241:Src/main.c    ****   sConfig.Offset = 0;
 366              		.loc 1 241 3 is_stmt 1 view .LVU115
 241:Src/main.c    ****   sConfig.Offset = 0;
 367              		.loc 1 241 24 is_stmt 0 view .LVU116
 368 005a 0423     		movs	r3, #4
 369 005c 0493     		str	r3, [sp, #16]
 242:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 370              		.loc 1 242 3 is_stmt 1 view .LVU117
 242:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 371              		.loc 1 242 18 is_stmt 0 view .LVU118
 372 005e 0595     		str	r5, [sp, #20]
 243:Src/main.c    ****   {
 373              		.loc 1 243 3 is_stmt 1 view .LVU119
 243:Src/main.c    ****   {
 374              		.loc 1 243 7 is_stmt 0 view .LVU120
 375 0060 6946     		mov	r1, sp
 376 0062 2046     		mov	r0, r4
 377 0064 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 378              	.LVL7:
 248:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 379              		.loc 1 248 3 is_stmt 1 view .LVU121
 248:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 380              		.loc 1 248 27 is_stmt 0 view .LVU122
 381 0068 6661     		str	r6, [r4, #20]
 249:Src/main.c    ****   {
 382              		.loc 1 249 3 is_stmt 1 view .LVU123
 249:Src/main.c    ****   {
 383              		.loc 1 249 7 is_stmt 0 view .LVU124
 384 006a 2046     		mov	r0, r4
 385 006c FFF7FEFF 		bl	HAL_ADC_Init
 386              	.LVL8:
ARM GAS  /tmp/ccxsxQn0.s 			page 17


 255:Src/main.c    **** 
 387              		.loc 1 255 1 view .LVU125
 388 0070 06B0     		add	sp, sp, #24
 389              	.LCFI9:
 390              		.cfi_def_cfa_offset 16
 391              		@ sp needed
 392 0072 70BD     		pop	{r4, r5, r6, pc}
 393              	.L16:
 394              		.align	2
 395              	.L15:
 396 0074 00000000 		.word	hadc1
 397 0078 00000450 		.word	1342439424
 398 007c 0004002A 		.word	704644096
 399              		.cfi_endproc
 400              	.LFE289:
 402              		.section	.text.MX_OPAMP1_Init,"ax",%progbits
 403              		.align	1
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	MX_OPAMP1_Init:
 410              	.LFB291:
 304:Src/main.c    **** 
 411              		.loc 1 304 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415 0000 08B5     		push	{r3, lr}
 416              	.LCFI10:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 3, -8
 419              		.cfi_offset 14, -4
 313:Src/main.c    ****   hopamp1.Init.PowerSupplyRange = OPAMP_POWERSUPPLY_LOW;
 420              		.loc 1 313 3 view .LVU127
 313:Src/main.c    ****   hopamp1.Init.PowerSupplyRange = OPAMP_POWERSUPPLY_LOW;
 421              		.loc 1 313 20 is_stmt 0 view .LVU128
 422 0002 0848     		ldr	r0, .L19
 423 0004 084B     		ldr	r3, .L19+4
 424 0006 0360     		str	r3, [r0]
 314:Src/main.c    ****   hopamp1.Init.Mode = OPAMP_PGA_MODE;
 425              		.loc 1 314 3 is_stmt 1 view .LVU129
 314:Src/main.c    ****   hopamp1.Init.Mode = OPAMP_PGA_MODE;
 426              		.loc 1 314 33 is_stmt 0 view .LVU130
 427 0008 0023     		movs	r3, #0
 428 000a 4360     		str	r3, [r0, #4]
 315:Src/main.c    ****   hopamp1.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
 429              		.loc 1 315 3 is_stmt 1 view .LVU131
 315:Src/main.c    ****   hopamp1.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
 430              		.loc 1 315 21 is_stmt 0 view .LVU132
 431 000c 0822     		movs	r2, #8
 432 000e C260     		str	r2, [r0, #12]
 316:Src/main.c    ****   hopamp1.Init.InvertingInput = OPAMP_INVERTINGINPUT_CONNECT_NO;
 433              		.loc 1 316 3 is_stmt 1 view .LVU133
 316:Src/main.c    ****   hopamp1.Init.InvertingInput = OPAMP_INVERTINGINPUT_CONNECT_NO;
 434              		.loc 1 316 34 is_stmt 0 view .LVU134
 435 0010 4361     		str	r3, [r0, #20]
ARM GAS  /tmp/ccxsxQn0.s 			page 18


 317:Src/main.c    ****   hopamp1.Init.PgaGain = OPAMP_PGA_GAIN_2;
 436              		.loc 1 317 3 is_stmt 1 view .LVU135
 317:Src/main.c    ****   hopamp1.Init.PgaGain = OPAMP_PGA_GAIN_2;
 437              		.loc 1 317 31 is_stmt 0 view .LVU136
 438 0012 4FF40072 		mov	r2, #512
 439 0016 0261     		str	r2, [r0, #16]
 318:Src/main.c    ****   hopamp1.Init.PowerMode = OPAMP_POWERMODE_NORMAL;
 440              		.loc 1 318 3 is_stmt 1 view .LVU137
 318:Src/main.c    ****   hopamp1.Init.PowerMode = OPAMP_POWERMODE_NORMAL;
 441              		.loc 1 318 24 is_stmt 0 view .LVU138
 442 0018 8361     		str	r3, [r0, #24]
 319:Src/main.c    ****   hopamp1.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
 443              		.loc 1 319 3 is_stmt 1 view .LVU139
 319:Src/main.c    ****   hopamp1.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
 444              		.loc 1 319 26 is_stmt 0 view .LVU140
 445 001a 8360     		str	r3, [r0, #8]
 320:Src/main.c    ****   if (HAL_OPAMP_Init(&hopamp1) != HAL_OK)
 446              		.loc 1 320 3 is_stmt 1 view .LVU141
 320:Src/main.c    ****   if (HAL_OPAMP_Init(&hopamp1) != HAL_OK)
 447              		.loc 1 320 29 is_stmt 0 view .LVU142
 448 001c C361     		str	r3, [r0, #28]
 321:Src/main.c    ****   {
 449              		.loc 1 321 3 is_stmt 1 view .LVU143
 321:Src/main.c    ****   {
 450              		.loc 1 321 7 is_stmt 0 view .LVU144
 451 001e FFF7FEFF 		bl	HAL_OPAMP_Init
 452              	.LVL9:
 329:Src/main.c    **** 
 453              		.loc 1 329 1 view .LVU145
 454 0022 08BD     		pop	{r3, pc}
 455              	.L20:
 456              		.align	2
 457              	.L19:
 458 0024 00000000 		.word	hopamp1
 459 0028 00780040 		.word	1073772544
 460              		.cfi_endproc
 461              	.LFE291:
 463              		.section	.text.MX_TIM2_Init,"ax",%progbits
 464              		.align	1
 465              		.syntax unified
 466              		.thumb
 467              		.thumb_func
 468              		.fpu fpv4-sp-d16
 470              	MX_TIM2_Init:
 471              	.LFB292:
 337:Src/main.c    **** 
 472              		.loc 1 337 1 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 32
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476 0000 30B5     		push	{r4, r5, lr}
 477              	.LCFI11:
 478              		.cfi_def_cfa_offset 12
 479              		.cfi_offset 4, -12
 480              		.cfi_offset 5, -8
 481              		.cfi_offset 14, -4
 482 0002 89B0     		sub	sp, sp, #36
ARM GAS  /tmp/ccxsxQn0.s 			page 19


 483              	.LCFI12:
 484              		.cfi_def_cfa_offset 48
 343:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 485              		.loc 1 343 3 view .LVU147
 343:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 486              		.loc 1 343 26 is_stmt 0 view .LVU148
 487 0004 0024     		movs	r4, #0
 488 0006 0494     		str	r4, [sp, #16]
 489 0008 0594     		str	r4, [sp, #20]
 490 000a 0694     		str	r4, [sp, #24]
 491 000c 0794     		str	r4, [sp, #28]
 344:Src/main.c    **** 
 492              		.loc 1 344 3 is_stmt 1 view .LVU149
 344:Src/main.c    **** 
 493              		.loc 1 344 27 is_stmt 0 view .LVU150
 494 000e 0194     		str	r4, [sp, #4]
 495 0010 0294     		str	r4, [sp, #8]
 496 0012 0394     		str	r4, [sp, #12]
 349:Src/main.c    ****   htim2.Init.Prescaler = 32;
 497              		.loc 1 349 3 is_stmt 1 view .LVU151
 349:Src/main.c    ****   htim2.Init.Prescaler = 32;
 498              		.loc 1 349 18 is_stmt 0 view .LVU152
 499 0014 0E4D     		ldr	r5, .L23
 500 0016 4FF08043 		mov	r3, #1073741824
 501 001a 2B60     		str	r3, [r5]
 350:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 502              		.loc 1 350 3 is_stmt 1 view .LVU153
 350:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 503              		.loc 1 350 24 is_stmt 0 view .LVU154
 504 001c 2023     		movs	r3, #32
 505 001e 6B60     		str	r3, [r5, #4]
 351:Src/main.c    ****   htim2.Init.Period = 10;
 506              		.loc 1 351 3 is_stmt 1 view .LVU155
 351:Src/main.c    ****   htim2.Init.Period = 10;
 507              		.loc 1 351 26 is_stmt 0 view .LVU156
 508 0020 AC60     		str	r4, [r5, #8]
 352:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 509              		.loc 1 352 3 is_stmt 1 view .LVU157
 352:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 510              		.loc 1 352 21 is_stmt 0 view .LVU158
 511 0022 0A23     		movs	r3, #10
 512 0024 EB60     		str	r3, [r5, #12]
 353:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 513              		.loc 1 353 3 is_stmt 1 view .LVU159
 353:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 514              		.loc 1 353 28 is_stmt 0 view .LVU160
 515 0026 2C61     		str	r4, [r5, #16]
 354:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 516              		.loc 1 354 3 is_stmt 1 view .LVU161
 354:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 517              		.loc 1 354 32 is_stmt 0 view .LVU162
 518 0028 AC61     		str	r4, [r5, #24]
 355:Src/main.c    ****   {
 519              		.loc 1 355 3 is_stmt 1 view .LVU163
 355:Src/main.c    ****   {
 520              		.loc 1 355 7 is_stmt 0 view .LVU164
 521 002a 2846     		mov	r0, r5
ARM GAS  /tmp/ccxsxQn0.s 			page 20


 522 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 523              	.LVL10:
 359:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 524              		.loc 1 359 3 is_stmt 1 view .LVU165
 359:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 525              		.loc 1 359 34 is_stmt 0 view .LVU166
 526 0030 4FF48053 		mov	r3, #4096
 527 0034 0493     		str	r3, [sp, #16]
 360:Src/main.c    ****   {
 528              		.loc 1 360 3 is_stmt 1 view .LVU167
 360:Src/main.c    ****   {
 529              		.loc 1 360 7 is_stmt 0 view .LVU168
 530 0036 04A9     		add	r1, sp, #16
 531 0038 2846     		mov	r0, r5
 532 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 533              	.LVL11:
 364:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 534              		.loc 1 364 3 is_stmt 1 view .LVU169
 364:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 535              		.loc 1 364 37 is_stmt 0 view .LVU170
 536 003e 0194     		str	r4, [sp, #4]
 365:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 537              		.loc 1 365 3 is_stmt 1 view .LVU171
 365:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 538              		.loc 1 365 33 is_stmt 0 view .LVU172
 539 0040 0394     		str	r4, [sp, #12]
 366:Src/main.c    ****   {
 540              		.loc 1 366 3 is_stmt 1 view .LVU173
 366:Src/main.c    ****   {
 541              		.loc 1 366 7 is_stmt 0 view .LVU174
 542 0042 01A9     		add	r1, sp, #4
 543 0044 2846     		mov	r0, r5
 544 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 545              	.LVL12:
 374:Src/main.c    **** 
 546              		.loc 1 374 1 view .LVU175
 547 004a 09B0     		add	sp, sp, #36
 548              	.LCFI13:
 549              		.cfi_def_cfa_offset 12
 550              		@ sp needed
 551 004c 30BD     		pop	{r4, r5, pc}
 552              	.L24:
 553 004e 00BF     		.align	2
 554              	.L23:
 555 0050 00000000 		.word	htim2
 556              		.cfi_endproc
 557              	.LFE292:
 559              		.section	.text.debugPrintln,"ax",%progbits
 560              		.align	1
 561              		.global	debugPrintln
 562              		.syntax unified
 563              		.thumb
 564              		.thumb_func
 565              		.fpu fpv4-sp-d16
 567              	debugPrintln:
 568              	.LVL13:
 569              	.LFB286:
ARM GAS  /tmp/ccxsxQn0.s 			page 21


  71:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) _out, strlen(_out), 10);
 570              		.loc 1 71 58 is_stmt 1 view -0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 8
 573              		@ frame_needed = 0, uses_anonymous_args = 0
  71:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) _out, strlen(_out), 10);
 574              		.loc 1 71 58 is_stmt 0 view .LVU177
 575 0000 30B5     		push	{r4, r5, lr}
 576              	.LCFI14:
 577              		.cfi_def_cfa_offset 12
 578              		.cfi_offset 4, -12
 579              		.cfi_offset 5, -8
 580              		.cfi_offset 14, -4
 581 0002 83B0     		sub	sp, sp, #12
 582              	.LCFI15:
 583              		.cfi_def_cfa_offset 24
 584 0004 0446     		mov	r4, r0
 585 0006 0D46     		mov	r5, r1
  72:Src/main.c    ****  char newline[4] = "\r\n";
 586              		.loc 1 72 2 is_stmt 1 view .LVU178
  72:Src/main.c    ****  char newline[4] = "\r\n";
 587              		.loc 1 72 45 is_stmt 0 view .LVU179
 588 0008 0846     		mov	r0, r1
 589              	.LVL14:
  72:Src/main.c    ****  char newline[4] = "\r\n";
 590              		.loc 1 72 45 view .LVU180
 591 000a FFF7FEFF 		bl	strlen
 592              	.LVL15:
  72:Src/main.c    ****  char newline[4] = "\r\n";
 593              		.loc 1 72 2 view .LVU181
 594 000e 0A23     		movs	r3, #10
 595 0010 82B2     		uxth	r2, r0
 596 0012 2946     		mov	r1, r5
 597 0014 2046     		mov	r0, r4
 598 0016 FFF7FEFF 		bl	HAL_UART_Transmit
 599              	.LVL16:
  73:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) newline, 2, 10);
 600              		.loc 1 73 2 is_stmt 1 view .LVU182
  73:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) newline, 2, 10);
 601              		.loc 1 73 7 is_stmt 0 view .LVU183
 602 001a 40F60D23 		movw	r3, #2573
 603 001e 0193     		str	r3, [sp, #4]
  74:Src/main.c    **** }
 604              		.loc 1 74 2 is_stmt 1 view .LVU184
 605 0020 0A23     		movs	r3, #10
 606 0022 0222     		movs	r2, #2
 607 0024 01A9     		add	r1, sp, #4
 608 0026 2046     		mov	r0, r4
 609 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 610              	.LVL17:
  75:Src/main.c    **** /* USER CODE END 0 */
 611              		.loc 1 75 1 is_stmt 0 view .LVU185
 612 002c 03B0     		add	sp, sp, #12
 613              	.LCFI16:
 614              		.cfi_def_cfa_offset 12
 615              		@ sp needed
 616 002e 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccxsxQn0.s 			page 22


  75:Src/main.c    **** /* USER CODE END 0 */
 617              		.loc 1 75 1 view .LVU186
 618              		.cfi_endproc
 619              	.LFE286:
 621              		.section	.text.SystemClock_Config,"ax",%progbits
 622              		.align	1
 623              		.global	SystemClock_Config
 624              		.syntax unified
 625              		.thumb
 626              		.thumb_func
 627              		.fpu fpv4-sp-d16
 629              	SystemClock_Config:
 630              	.LFB288:
 145:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 631              		.loc 1 145 1 is_stmt 1 view -0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 176
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635 0000 30B5     		push	{r4, r5, lr}
 636              	.LCFI17:
 637              		.cfi_def_cfa_offset 12
 638              		.cfi_offset 4, -12
 639              		.cfi_offset 5, -8
 640              		.cfi_offset 14, -4
 641 0002 ADB0     		sub	sp, sp, #180
 642              	.LCFI18:
 643              		.cfi_def_cfa_offset 192
 146:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 644              		.loc 1 146 3 view .LVU188
 146:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 645              		.loc 1 146 22 is_stmt 0 view .LVU189
 646 0004 4022     		movs	r2, #64
 647 0006 0021     		movs	r1, #0
 648 0008 1CA8     		add	r0, sp, #112
 649 000a FFF7FEFF 		bl	memset
 650              	.LVL18:
 147:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 651              		.loc 1 147 3 is_stmt 1 view .LVU190
 147:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 652              		.loc 1 147 22 is_stmt 0 view .LVU191
 653 000e 0024     		movs	r4, #0
 654 0010 1694     		str	r4, [sp, #88]
 655 0012 1794     		str	r4, [sp, #92]
 656 0014 1894     		str	r4, [sp, #96]
 657 0016 1994     		str	r4, [sp, #100]
 658 0018 1A94     		str	r4, [sp, #104]
 148:Src/main.c    **** 
 659              		.loc 1 148 3 is_stmt 1 view .LVU192
 148:Src/main.c    **** 
 660              		.loc 1 148 28 is_stmt 0 view .LVU193
 661 001a 5422     		movs	r2, #84
 662 001c 2146     		mov	r1, r4
 663 001e 01A8     		add	r0, sp, #4
 664 0020 FFF7FEFF 		bl	memset
 665              	.LVL19:
 152:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 666              		.loc 1 152 3 is_stmt 1 view .LVU194
ARM GAS  /tmp/ccxsxQn0.s 			page 23


 152:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 667              		.loc 1 152 36 is_stmt 0 view .LVU195
 668 0024 1023     		movs	r3, #16
 669 0026 1B93     		str	r3, [sp, #108]
 153:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 670              		.loc 1 153 3 is_stmt 1 view .LVU196
 153:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 671              		.loc 1 153 30 is_stmt 0 view .LVU197
 672 0028 0125     		movs	r5, #1
 673 002a 2195     		str	r5, [sp, #132]
 154:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_10;
 674              		.loc 1 154 3 is_stmt 1 view .LVU198
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 675              		.loc 1 155 3 view .LVU199
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 676              		.loc 1 155 35 is_stmt 0 view .LVU200
 677 002c A023     		movs	r3, #160
 678 002e 2393     		str	r3, [sp, #140]
 156:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 679              		.loc 1 156 3 is_stmt 1 view .LVU201
 157:Src/main.c    ****   {
 680              		.loc 1 157 3 view .LVU202
 157:Src/main.c    ****   {
 681              		.loc 1 157 7 is_stmt 0 view .LVU203
 682 0030 1BA8     		add	r0, sp, #108
 683 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 684              	.LVL20:
 163:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 685              		.loc 1 163 3 is_stmt 1 view .LVU204
 163:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 686              		.loc 1 163 31 is_stmt 0 view .LVU205
 687 0036 0F23     		movs	r3, #15
 688 0038 1693     		str	r3, [sp, #88]
 165:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 689              		.loc 1 165 3 is_stmt 1 view .LVU206
 165:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 690              		.loc 1 165 34 is_stmt 0 view .LVU207
 691 003a 1794     		str	r4, [sp, #92]
 166:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 692              		.loc 1 166 3 is_stmt 1 view .LVU208
 166:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 693              		.loc 1 166 35 is_stmt 0 view .LVU209
 694 003c 1894     		str	r4, [sp, #96]
 167:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 695              		.loc 1 167 3 is_stmt 1 view .LVU210
 167:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 696              		.loc 1 167 36 is_stmt 0 view .LVU211
 697 003e 1994     		str	r4, [sp, #100]
 168:Src/main.c    **** 
 698              		.loc 1 168 3 is_stmt 1 view .LVU212
 168:Src/main.c    **** 
 699              		.loc 1 168 36 is_stmt 0 view .LVU213
 700 0040 1A94     		str	r4, [sp, #104]
 170:Src/main.c    ****   {
 701              		.loc 1 170 3 is_stmt 1 view .LVU214
 170:Src/main.c    ****   {
 702              		.loc 1 170 7 is_stmt 0 view .LVU215
ARM GAS  /tmp/ccxsxQn0.s 			page 24


 703 0042 2946     		mov	r1, r5
 704 0044 16A8     		add	r0, sp, #88
 705 0046 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 706              	.LVL21:
 174:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 707              		.loc 1 174 3 is_stmt 1 view .LVU216
 174:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 708              		.loc 1 174 38 is_stmt 0 view .LVU217
 709 004a 44F20203 		movw	r3, #16386
 710 004e 0193     		str	r3, [sp, #4]
 175:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 711              		.loc 1 175 3 is_stmt 1 view .LVU218
 175:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 712              		.loc 1 175 38 is_stmt 0 view .LVU219
 713 0050 0A94     		str	r4, [sp, #40]
 176:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 714              		.loc 1 176 3 is_stmt 1 view .LVU220
 176:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 715              		.loc 1 176 35 is_stmt 0 view .LVU221
 716 0052 4FF08053 		mov	r3, #268435456
 717 0056 1393     		str	r3, [sp, #76]
 177:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 2;
 718              		.loc 1 177 3 is_stmt 1 view .LVU222
 177:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 2;
 719              		.loc 1 177 39 is_stmt 0 view .LVU223
 720 0058 0295     		str	r5, [sp, #8]
 178:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 8;
 721              		.loc 1 178 3 is_stmt 1 view .LVU224
 178:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 8;
 722              		.loc 1 178 34 is_stmt 0 view .LVU225
 723 005a 0223     		movs	r3, #2
 724 005c 0393     		str	r3, [sp, #12]
 179:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 725              		.loc 1 179 3 is_stmt 1 view .LVU226
 179:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 726              		.loc 1 179 34 is_stmt 0 view .LVU227
 727 005e 0822     		movs	r2, #8
 728 0060 0492     		str	r2, [sp, #16]
 180:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 729              		.loc 1 180 3 is_stmt 1 view .LVU228
 180:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 730              		.loc 1 180 34 is_stmt 0 view .LVU229
 731 0062 0722     		movs	r2, #7
 732 0064 0592     		str	r2, [sp, #20]
 181:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 733              		.loc 1 181 3 is_stmt 1 view .LVU230
 181:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 734              		.loc 1 181 34 is_stmt 0 view .LVU231
 735 0066 0693     		str	r3, [sp, #24]
 182:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 736              		.loc 1 182 3 is_stmt 1 view .LVU232
 182:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 737              		.loc 1 182 34 is_stmt 0 view .LVU233
 738 0068 0793     		str	r3, [sp, #28]
 183:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 739              		.loc 1 183 3 is_stmt 1 view .LVU234
 183:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
ARM GAS  /tmp/ccxsxQn0.s 			page 25


 740              		.loc 1 183 41 is_stmt 0 view .LVU235
 741 006a 4FF08073 		mov	r3, #16777216
 742 006e 0893     		str	r3, [sp, #32]
 184:Src/main.c    ****   {
 743              		.loc 1 184 3 is_stmt 1 view .LVU236
 184:Src/main.c    ****   {
 744              		.loc 1 184 7 is_stmt 0 view .LVU237
 745 0070 01A8     		add	r0, sp, #4
 746 0072 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 747              	.LVL22:
 190:Src/main.c    ****   {
 748              		.loc 1 190 3 is_stmt 1 view .LVU238
 190:Src/main.c    ****   {
 749              		.loc 1 190 7 is_stmt 0 view .LVU239
 750 0076 4FF40070 		mov	r0, #512
 751 007a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 752              	.LVL23:
 194:Src/main.c    **** 
 753              		.loc 1 194 1 view .LVU240
 754 007e 2DB0     		add	sp, sp, #180
 755              	.LCFI19:
 756              		.cfi_def_cfa_offset 12
 757              		@ sp needed
 758 0080 30BD     		pop	{r4, r5, pc}
 759              		.cfi_endproc
 760              	.LFE288:
 762              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 763              		.align	2
 764              	.LC0:
 765 0000 53657474 		.ascii	"Setting effects....\000"
 765      696E6720 
 765      65666665 
 765      6374732E 
 765      2E2E2E00 
 766              		.align	2
 767              	.LC1:
 768 0014 53657474 		.ascii	"Setting up HAL....\000"
 768      696E6720 
 768      75702048 
 768      414C2E2E 
 768      2E2E00
 769 0027 00       		.align	2
 770              	.LC2:
 771 0028 28414443 		.ascii	"(ADC IT)\000"
 771      20495429 
 771      00
 772 0031 000000   		.align	2
 773              	.LC3:
 774 0034 2854494D 		.ascii	"(TIM IT)\000"
 774      20495429 
 774      00
 775 003d 000000   		.align	2
 776              	.LC4:
 777 0040 646F6E65 		.ascii	"done!\000"
 777      2100
 778              		.section	.text.main,"ax",%progbits
 779              		.align	1
ARM GAS  /tmp/ccxsxQn0.s 			page 26


 780              		.global	main
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu fpv4-sp-d16
 786              	main:
 787              	.LFB287:
  83:Src/main.c    ****   /* USER CODE BEGIN 1 */
 788              		.loc 1 83 1 is_stmt 1 view -0
 789              		.cfi_startproc
 790              		@ Volatile: function does not return.
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793 0000 08B5     		push	{r3, lr}
 794              	.LCFI20:
 795              		.cfi_def_cfa_offset 8
 796              		.cfi_offset 3, -8
 797              		.cfi_offset 14, -4
  90:Src/main.c    **** 
 798              		.loc 1 90 3 view .LVU242
 799 0002 FFF7FEFF 		bl	HAL_Init
 800              	.LVL24:
  96:Src/main.c    **** 
 801              		.loc 1 96 3 view .LVU243
 802 0006 FFF7FEFF 		bl	SystemClock_Config
 803              	.LVL25:
 103:Src/main.c    ****   MX_USART2_UART_Init();
 804              		.loc 1 103 3 view .LVU244
 805 000a FFF7FEFF 		bl	MX_GPIO_Init
 806              	.LVL26:
 104:Src/main.c    ****   MX_DAC1_Init();
 807              		.loc 1 104 3 view .LVU245
 808 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 809              	.LVL27:
 105:Src/main.c    ****   MX_ADC1_Init();
 810              		.loc 1 105 3 view .LVU246
 811 0012 FFF7FEFF 		bl	MX_DAC1_Init
 812              	.LVL28:
 106:Src/main.c    ****   MX_OPAMP1_Init();
 813              		.loc 1 106 3 view .LVU247
 814 0016 FFF7FEFF 		bl	MX_ADC1_Init
 815              	.LVL29:
 107:Src/main.c    ****   MX_TIM2_Init();
 816              		.loc 1 107 3 view .LVU248
 817 001a FFF7FEFF 		bl	MX_OPAMP1_Init
 818              	.LVL30:
 108:Src/main.c    ****   /* USER CODE BEGIN 2 */
 819              		.loc 1 108 3 view .LVU249
 820 001e FFF7FEFF 		bl	MX_TIM2_Init
 821              	.LVL31:
 110:Src/main.c    ****   default_init_reverb(&r);
 822              		.loc 1 110 3 view .LVU250
 823 0022 164C     		ldr	r4, .L32
 824 0024 1649     		ldr	r1, .L32+4
 825 0026 2046     		mov	r0, r4
 826 0028 FFF7FEFF 		bl	debugPrintln
 827              	.LVL32:
ARM GAS  /tmp/ccxsxQn0.s 			page 27


 111:Src/main.c    ****   default_init_octave(&o);
 828              		.loc 1 111 3 view .LVU251
 829 002c 1548     		ldr	r0, .L32+8
 830 002e FFF7FEFF 		bl	default_init_reverb
 831              	.LVL33:
 112:Src/main.c    ****   default_init_fuzz(&f);
 832              		.loc 1 112 3 view .LVU252
 833 0032 1548     		ldr	r0, .L32+12
 834 0034 FFF7FEFF 		bl	default_init_octave
 835              	.LVL34:
 113:Src/main.c    ****   debugPrintln(&huart2, (char*) "Setting up HAL....");
 836              		.loc 1 113 3 view .LVU253
 837 0038 1448     		ldr	r0, .L32+16
 838 003a FFF7FEFF 		bl	default_init_fuzz
 839              	.LVL35:
 114:Src/main.c    ****   HAL_DAC_Start(&hdac1, DAC_CHANNEL_1);
 840              		.loc 1 114 3 view .LVU254
 841 003e 1449     		ldr	r1, .L32+20
 842 0040 2046     		mov	r0, r4
 843 0042 FFF7FEFF 		bl	debugPrintln
 844              	.LVL36:
 115:Src/main.c    ****   HAL_OPAMP_Start(&hopamp1);
 845              		.loc 1 115 3 view .LVU255
 846 0046 0021     		movs	r1, #0
 847 0048 1248     		ldr	r0, .L32+24
 848 004a FFF7FEFF 		bl	HAL_DAC_Start
 849              	.LVL37:
 116:Src/main.c    ****   debugPrintln(&huart2, (char*) "(ADC IT)");
 850              		.loc 1 116 3 view .LVU256
 851 004e 1248     		ldr	r0, .L32+28
 852 0050 FFF7FEFF 		bl	HAL_OPAMP_Start
 853              	.LVL38:
 117:Src/main.c    ****   //HAL_ADC_Start_DMA(&hadc1, (uint32_t*) adc_data, 1);
 854              		.loc 1 117 3 view .LVU257
 855 0054 1149     		ldr	r1, .L32+32
 856 0056 2046     		mov	r0, r4
 857 0058 FFF7FEFF 		bl	debugPrintln
 858              	.LVL39:
 120:Src/main.c    ****   debugPrintln(&huart2, (char*) "(TIM IT)");
 859              		.loc 1 120 3 view .LVU258
 860 005c 1048     		ldr	r0, .L32+36
 861 005e FFF7FEFF 		bl	HAL_ADC_Start_IT
 862              	.LVL40:
 121:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 863              		.loc 1 121 3 view .LVU259
 864 0062 1049     		ldr	r1, .L32+40
 865 0064 2046     		mov	r0, r4
 866 0066 FFF7FEFF 		bl	debugPrintln
 867              	.LVL41:
 122:Src/main.c    ****   debugPrintln(&huart2, (char*) "done!");
 868              		.loc 1 122 3 view .LVU260
 869 006a 0F48     		ldr	r0, .L32+44
 870 006c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 871              	.LVL42:
 123:Src/main.c    ****   /* USER CODE END 2 */
 872              		.loc 1 123 3 view .LVU261
 873 0070 0E49     		ldr	r1, .L32+48
ARM GAS  /tmp/ccxsxQn0.s 			page 28


 874 0072 2046     		mov	r0, r4
 875 0074 FFF7FEFF 		bl	debugPrintln
 876              	.LVL43:
 877              	.L30:
 128:Src/main.c    ****   {
 878              		.loc 1 128 3 discriminator 1 view .LVU262
 136:Src/main.c    ****   /* USER CODE END 3 */
 879              		.loc 1 136 3 discriminator 1 view .LVU263
 128:Src/main.c    ****   {
 880              		.loc 1 128 9 discriminator 1 view .LVU264
 881 0078 FEE7     		b	.L30
 882              	.L33:
 883 007a 00BF     		.align	2
 884              	.L32:
 885 007c 00000000 		.word	huart2
 886 0080 00000000 		.word	.LC0
 887 0084 00000000 		.word	r
 888 0088 00000000 		.word	o
 889 008c 00000000 		.word	f
 890 0090 14000000 		.word	.LC1
 891 0094 00000000 		.word	hdac1
 892 0098 00000000 		.word	hopamp1
 893 009c 28000000 		.word	.LC2
 894 00a0 00000000 		.word	hadc1
 895 00a4 34000000 		.word	.LC3
 896 00a8 00000000 		.word	htim2
 897 00ac 40000000 		.word	.LC4
 898              		.cfi_endproc
 899              	.LFE287:
 901              		.section	.text.Error_Handler,"ax",%progbits
 902              		.align	1
 903              		.global	Error_Handler
 904              		.syntax unified
 905              		.thumb
 906              		.thumb_func
 907              		.fpu fpv4-sp-d16
 909              	Error_Handler:
 910              	.LFB295:
 435:Src/main.c    **** 
 436:Src/main.c    **** /* USER CODE BEGIN 4 */
 437:Src/main.c    **** 
 438:Src/main.c    **** /* USER CODE END 4 */
 439:Src/main.c    **** 
 440:Src/main.c    **** /**
 441:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 442:Src/main.c    ****   * @retval None
 443:Src/main.c    ****   */
 444:Src/main.c    **** void Error_Handler(void)
 445:Src/main.c    **** {
 911              		.loc 1 445 1 view -0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915              		@ link register save eliminated.
 446:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 447:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 448:Src/main.c    **** 
ARM GAS  /tmp/ccxsxQn0.s 			page 29


 449:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 450:Src/main.c    **** }
 916              		.loc 1 450 1 view .LVU266
 917 0000 7047     		bx	lr
 918              		.cfi_endproc
 919              	.LFE295:
 921              		.comm	htim2,64,4
 922              		.comm	f,8,4
 923              		.comm	o,20,4
 924              		.comm	r,24,8
 925              		.comm	huart2,128,4
 926              		.comm	hopamp1,52,4
 927              		.comm	hdac1,20,4
 928              		.comm	hadc1,100,4
 929              		.comm	adc_data,2,4
 930              		.comm	value_dac,4,4
 931              		.comm	trig,4,4
 932              		.comm	value_adc,4,4
 933              		.text
 934              	.Letext0:
 935              		.file 2 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_typ
 936              		.file 3 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 937              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 938              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 939              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 940              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 941              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 942              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 943              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 944              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 945              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 946              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 947              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dac.h"
 948              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 949              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_opamp.h"
 950              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 951              		.file 18 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 952              		.file 19 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 953              		.file 20 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/lock.h"
 954              		.file 21 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_types.h"
 955              		.file 22 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/lib/gcc/arm-none-eabi/9.2.1/include/stdde
 956              		.file 23 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/reent.h"
 957              		.file 24 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/stdlib.h"
 958              		.file 25 "Inc/effects.h"
 959              		.file 26 "Inc/main.h"
 960              		.file 27 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 961              		.file 28 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 962              		.file 29 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/string.h"
 963              		.file 30 "<built-in>"
ARM GAS  /tmp/ccxsxQn0.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccxsxQn0.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccxsxQn0.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccxsxQn0.s:114    .text.MX_GPIO_Init:0000000000000058 $d
     /tmp/ccxsxQn0.s:120    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccxsxQn0.s:126    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccxsxQn0.s:181    .text.MX_USART2_UART_Init:0000000000000028 $d
                            *COM*:0000000000000080 huart2
     /tmp/ccxsxQn0.s:187    .text.MX_DAC1_Init:0000000000000000 $t
     /tmp/ccxsxQn0.s:193    .text.MX_DAC1_Init:0000000000000000 MX_DAC1_Init
     /tmp/ccxsxQn0.s:255    .text.MX_DAC1_Init:0000000000000034 $d
                            *COM*:0000000000000014 hdac1
     /tmp/ccxsxQn0.s:261    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccxsxQn0.s:267    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccxsxQn0.s:396    .text.MX_ADC1_Init:0000000000000074 $d
                            *COM*:0000000000000064 hadc1
     /tmp/ccxsxQn0.s:403    .text.MX_OPAMP1_Init:0000000000000000 $t
     /tmp/ccxsxQn0.s:409    .text.MX_OPAMP1_Init:0000000000000000 MX_OPAMP1_Init
     /tmp/ccxsxQn0.s:458    .text.MX_OPAMP1_Init:0000000000000024 $d
                            *COM*:0000000000000034 hopamp1
     /tmp/ccxsxQn0.s:464    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccxsxQn0.s:470    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccxsxQn0.s:555    .text.MX_TIM2_Init:0000000000000050 $d
                            *COM*:0000000000000040 htim2
     /tmp/ccxsxQn0.s:560    .text.debugPrintln:0000000000000000 $t
     /tmp/ccxsxQn0.s:567    .text.debugPrintln:0000000000000000 debugPrintln
     /tmp/ccxsxQn0.s:622    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccxsxQn0.s:629    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccxsxQn0.s:763    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccxsxQn0.s:779    .text.main:0000000000000000 $t
     /tmp/ccxsxQn0.s:786    .text.main:0000000000000000 main
     /tmp/ccxsxQn0.s:885    .text.main:000000000000007c $d
                            *COM*:0000000000000018 r
                            *COM*:0000000000000014 o
                            *COM*:0000000000000008 f
     /tmp/ccxsxQn0.s:902    .text.Error_Handler:0000000000000000 $t
     /tmp/ccxsxQn0.s:909    .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000002 adc_data
                            *COM*:0000000000000004 value_dac
                            *COM*:0000000000000004 trig
                            *COM*:0000000000000004 value_adc

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_OPAMP_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
strlen
ARM GAS  /tmp/ccxsxQn0.s 			page 31


HAL_UART_Transmit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_Init
default_init_reverb
default_init_octave
default_init_fuzz
HAL_DAC_Start
HAL_OPAMP_Start
HAL_ADC_Start_IT
HAL_TIM_Base_Start_IT
