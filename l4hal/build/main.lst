ARM GAS  /tmp/ccAIZsFN.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB292:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
ARM GAS  /tmp/ccAIZsFN.s 			page 2


  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** ADC_HandleTypeDef hadc1;
  45:Src/main.c    **** 
  46:Src/main.c    **** DAC_HandleTypeDef hdac1;
  47:Src/main.c    **** 
  48:Src/main.c    **** UART_HandleTypeDef huart2;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** /* USER CODE END PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  54:Src/main.c    **** void SystemClock_Config(void);
  55:Src/main.c    **** static void MX_GPIO_Init(void);
  56:Src/main.c    **** static void MX_USART2_UART_Init(void);
  57:Src/main.c    **** static void MX_DAC1_Init(void);
  58:Src/main.c    **** static void MX_ADC1_Init(void);
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** void debugPrintln(UART_HandleTypeDef *huart, char _out[]){
  66:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) _out, strlen(_out), 10);
  67:Src/main.c    ****  char newline[2] = "\r\n";
  68:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) newline, 2, 10);
  69:Src/main.c    **** }
  70:Src/main.c    **** /* USER CODE END 0 */
  71:Src/main.c    **** 
  72:Src/main.c    **** /**
  73:Src/main.c    ****   * @brief  The application entry point.
  74:Src/main.c    ****   * @retval int
  75:Src/main.c    ****   */
  76:Src/main.c    **** int main(void)
  77:Src/main.c    **** {
  78:Src/main.c    ****   /* USER CODE BEGIN 1 */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE END 1 */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Src/main.c    ****   HAL_Init();
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE BEGIN Init */
  88:Src/main.c    **** 
ARM GAS  /tmp/ccAIZsFN.s 			page 3


  89:Src/main.c    ****   /* USER CODE END Init */
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* Configure the system clock */
  92:Src/main.c    ****   SystemClock_Config();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END SysInit */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Initialize all configured peripherals */
  99:Src/main.c    ****   MX_GPIO_Init();
 100:Src/main.c    ****   MX_USART2_UART_Init();
 101:Src/main.c    ****   MX_DAC1_Init();
 102:Src/main.c    ****   MX_ADC1_Init();
 103:Src/main.c    ****   /* USER CODE BEGIN 2 */
 104:Src/main.c    ****   debugPrintln(&huart2, "Setting up....");
 105:Src/main.c    ****   HAL_DAC_Start(&hdac1, DAC_CHANNEL_1);
 106:Src/main.c    ****   //HAL_OPAMP_Start(&hopamp1);
 107:Src/main.c    ****   //HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED);
 108:Src/main.c    ****   HAL_ADC_Start_IT(&hadc1);
 109:Src/main.c    ****   debugPrintln(&huart2, "done!");
 110:Src/main.c    ****   /* USER CODE END 2 */
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* Infinite loop */
 113:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 114:Src/main.c    ****   while (1)
 115:Src/main.c    ****   {
 116:Src/main.c    ****     /*adc_value = HAL_ADC_GetValue(&hadc1);
 117:Src/main.c    ****     char buf[32];
 118:Src/main.c    ****     sprintf(buf, "%d", adc_value);
 119:Src/main.c    ****     debugPrintln(&huart2,buf);*/
 120:Src/main.c    ****     //value_adc = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5);
 121:Src/main.c    ****     //HAL_DAC_SetValue(&hdac1, DAC_CHANNEL_1, DAC_ALIGN_12B_R, value_adc);
 122:Src/main.c    ****     /*debugPrintln(&huart2,"----");
 123:Src/main.c    ****     if (HAL_ADC_PollForConversion(&hadc1, 1000000) == HAL_OK) {
 124:Src/main.c    ****         {
 125:Src/main.c    ****             value_adc = HAL_ADC_GetValue(&hadc1);
 126:Src/main.c    ****             HAL_DAC_SetValue(&hdac1, DAC_CHANNEL_1, DAC_ALIGN_12B_R, trig);
 127:Src/main.c    ****             trig = (trig != 0) ? 0 : 4095;
 128:Src/main.c    ****             char buf[32];
 129:Src/main.c    ****             sprintf(buf, "%d", trig);
 130:Src/main.c    ****             debugPrintln(&huart2,buf);
 131:Src/main.c    ****             HAL_ADC_Stop(&hadc1);
 132:Src/main.c    ****             HAL_ADC_Start(&hadc1);
 133:Src/main.c    ****         }
 134:Src/main.c    ****     }*/
 135:Src/main.c    ****     //debugPrintln(&huart2,"...");
 136:Src/main.c    ****     /*HAL_DAC_SetValue(&hadc1,DAC_CHANNEL_1,DAC_ALIGN_12B_R,value_dac);
 137:Src/main.c    ****     if(value_dac<2047) {
 138:Src/main.c    ****       value_dac++;
 139:Src/main.c    ****     } else {
 140:Src/main.c    ****       value_dac = 0;
 141:Src/main.c    ****     }
 142:Src/main.c    ****     HAL_Delay(10);*/
 143:Src/main.c    ****     /* USER CODE END WHILE */
 144:Src/main.c    **** 
 145:Src/main.c    ****     /* USER CODE BEGIN 3 */
ARM GAS  /tmp/ccAIZsFN.s 			page 4


 146:Src/main.c    ****   }
 147:Src/main.c    ****   /* USER CODE END 3 */
 148:Src/main.c    **** }
 149:Src/main.c    **** 
 150:Src/main.c    **** /**
 151:Src/main.c    ****   * @brief System Clock Configuration
 152:Src/main.c    ****   * @retval None
 153:Src/main.c    ****   */
 154:Src/main.c    **** void SystemClock_Config(void)
 155:Src/main.c    **** {
 156:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 157:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 158:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 159:Src/main.c    **** 
 160:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 161:Src/main.c    ****   */
 162:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 163:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 164:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 165:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 166:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 167:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 168:Src/main.c    ****   {
 169:Src/main.c    ****     Error_Handler();
 170:Src/main.c    ****   }
 171:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 172:Src/main.c    ****   */
 173:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 174:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 175:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 176:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 177:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 178:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 179:Src/main.c    **** 
 180:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 181:Src/main.c    ****   {
 182:Src/main.c    ****     Error_Handler();
 183:Src/main.c    ****   }
 184:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_ADC;
 185:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 186:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 187:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 188:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 189:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 190:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 191:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 192:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 193:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 194:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 195:Src/main.c    ****   {
 196:Src/main.c    ****     Error_Handler();
 197:Src/main.c    ****   }
 198:Src/main.c    ****   /** Configure the main internal regulator output voltage
 199:Src/main.c    ****   */
 200:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 201:Src/main.c    ****   {
 202:Src/main.c    ****     Error_Handler();
ARM GAS  /tmp/ccAIZsFN.s 			page 5


 203:Src/main.c    ****   }
 204:Src/main.c    **** }
 205:Src/main.c    **** 
 206:Src/main.c    **** /**
 207:Src/main.c    ****   * @brief ADC1 Initialization Function
 208:Src/main.c    ****   * @param None
 209:Src/main.c    ****   * @retval None
 210:Src/main.c    ****   */
 211:Src/main.c    **** static void MX_ADC1_Init(void)
 212:Src/main.c    **** {
 213:Src/main.c    **** 
 214:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 215:Src/main.c    **** 
 216:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 217:Src/main.c    **** 
 218:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 219:Src/main.c    **** 
 220:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 221:Src/main.c    **** 
 222:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 223:Src/main.c    ****   /** Common config
 224:Src/main.c    ****   */
 225:Src/main.c    ****   hadc1.Instance = ADC1;
 226:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 227:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 228:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 229:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 230:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 231:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 232:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 233:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 234:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 235:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 236:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 237:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 238:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 239:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 240:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 241:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 242:Src/main.c    ****   {
 243:Src/main.c    ****     Error_Handler();
 244:Src/main.c    ****   }
 245:Src/main.c    ****   /** Configure Regular Channel
 246:Src/main.c    ****   */
 247:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_10;
 248:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 249:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 250:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 251:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 252:Src/main.c    ****   sConfig.Offset = 0;
 253:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 254:Src/main.c    ****   {
 255:Src/main.c    ****     Error_Handler();
 256:Src/main.c    ****   }
 257:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 258:Src/main.c    ****   hadc1.Init.EOCSelection = EOC_SEQ_CONV;
 259:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
ARM GAS  /tmp/ccAIZsFN.s 			page 6


 260:Src/main.c    ****   {
 261:Src/main.c    ****     Error_Handler();
 262:Src/main.c    ****   }
 263:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 264:Src/main.c    **** 
 265:Src/main.c    **** }
 266:Src/main.c    **** 
 267:Src/main.c    **** /**
 268:Src/main.c    ****   * @brief DAC1 Initialization Function
 269:Src/main.c    ****   * @param None
 270:Src/main.c    ****   * @retval None
 271:Src/main.c    ****   */
 272:Src/main.c    **** static void MX_DAC1_Init(void)
 273:Src/main.c    **** {
 274:Src/main.c    **** 
 275:Src/main.c    ****   /* USER CODE BEGIN DAC1_Init 0 */
 276:Src/main.c    **** 
 277:Src/main.c    ****   /* USER CODE END DAC1_Init 0 */
 278:Src/main.c    **** 
 279:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 280:Src/main.c    **** 
 281:Src/main.c    ****   /* USER CODE BEGIN DAC1_Init 1 */
 282:Src/main.c    **** 
 283:Src/main.c    ****   /* USER CODE END DAC1_Init 1 */
 284:Src/main.c    ****   /** DAC Initialization
 285:Src/main.c    ****   */
 286:Src/main.c    ****   hdac1.Instance = DAC1;
 287:Src/main.c    ****   if (HAL_DAC_Init(&hdac1) != HAL_OK)
 288:Src/main.c    ****   {
 289:Src/main.c    ****     Error_Handler();
 290:Src/main.c    ****   }
 291:Src/main.c    ****   /** DAC channel OUT1 config
 292:Src/main.c    ****   */
 293:Src/main.c    ****   sConfig.DAC_SampleAndHold = DAC_SAMPLEANDHOLD_DISABLE;
 294:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 295:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 296:Src/main.c    ****   sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
 297:Src/main.c    ****   sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 298:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 299:Src/main.c    ****   {
 300:Src/main.c    ****     Error_Handler();
 301:Src/main.c    ****   }
 302:Src/main.c    ****   /* USER CODE BEGIN DAC1_Init 2 */
 303:Src/main.c    **** 
 304:Src/main.c    ****   /* USER CODE END DAC1_Init 2 */
 305:Src/main.c    **** 
 306:Src/main.c    **** }
 307:Src/main.c    **** 
 308:Src/main.c    **** /**
 309:Src/main.c    ****   * @brief USART2 Initialization Function
 310:Src/main.c    ****   * @param None
 311:Src/main.c    ****   * @retval None
 312:Src/main.c    ****   */
 313:Src/main.c    **** static void MX_USART2_UART_Init(void)
 314:Src/main.c    **** {
 315:Src/main.c    **** 
 316:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
ARM GAS  /tmp/ccAIZsFN.s 			page 7


 317:Src/main.c    **** 
 318:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 319:Src/main.c    **** 
 320:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 321:Src/main.c    **** 
 322:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 323:Src/main.c    ****   huart2.Instance = USART2;
 324:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 325:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 326:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 327:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 328:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 329:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 330:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 331:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 332:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 333:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 334:Src/main.c    ****   {
 335:Src/main.c    ****     Error_Handler();
 336:Src/main.c    ****   }
 337:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 338:Src/main.c    **** 
 339:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 340:Src/main.c    **** 
 341:Src/main.c    **** }
 342:Src/main.c    **** 
 343:Src/main.c    **** /**
 344:Src/main.c    ****   * @brief GPIO Initialization Function
 345:Src/main.c    ****   * @param None
 346:Src/main.c    ****   * @retval None
 347:Src/main.c    ****   */
 348:Src/main.c    **** static void MX_GPIO_Init(void)
 349:Src/main.c    **** {
  28              		.loc 1 349 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 350:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 350 3 view .LVU1
  42              		.loc 1 350 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 351:Src/main.c    **** 
 352:Src/main.c    ****   /* GPIO Ports Clock Enable */
ARM GAS  /tmp/ccAIZsFN.s 			page 8


 353:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 353 3 is_stmt 1 view .LVU3
  50              	.LBB2:
  51              		.loc 1 353 3 view .LVU4
  52              		.loc 1 353 3 view .LVU5
  53 0010 114B     		ldr	r3, .L3
  54 0012 DA6C     		ldr	r2, [r3, #76]
  55 0014 42F00102 		orr	r2, r2, #1
  56 0018 DA64     		str	r2, [r3, #76]
  57              		.loc 1 353 3 view .LVU6
  58 001a DA6C     		ldr	r2, [r3, #76]
  59 001c 02F00102 		and	r2, r2, #1
  60 0020 0192     		str	r2, [sp, #4]
  61              		.loc 1 353 3 view .LVU7
  62 0022 019A     		ldr	r2, [sp, #4]
  63              	.LBE2:
  64              		.loc 1 353 3 view .LVU8
 354:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 354 3 view .LVU9
  66              	.LBB3:
  67              		.loc 1 354 3 view .LVU10
  68              		.loc 1 354 3 view .LVU11
  69 0024 DA6C     		ldr	r2, [r3, #76]
  70 0026 42F00202 		orr	r2, r2, #2
  71 002a DA64     		str	r2, [r3, #76]
  72              		.loc 1 354 3 view .LVU12
  73 002c DB6C     		ldr	r3, [r3, #76]
  74 002e 03F00203 		and	r3, r3, #2
  75 0032 0293     		str	r3, [sp, #8]
  76              		.loc 1 354 3 view .LVU13
  77 0034 029B     		ldr	r3, [sp, #8]
  78              	.LBE3:
  79              		.loc 1 354 3 view .LVU14
 355:Src/main.c    **** 
 356:Src/main.c    ****   /*Configure GPIO pin Output Level */
 357:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
  80              		.loc 1 357 3 view .LVU15
  81 0036 094D     		ldr	r5, .L3+4
  82 0038 2246     		mov	r2, r4
  83 003a 0121     		movs	r1, #1
  84 003c 2846     		mov	r0, r5
  85 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL0:
 358:Src/main.c    **** 
 359:Src/main.c    ****   /*Configure GPIO pin : PB0 */
 360:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
  87              		.loc 1 360 3 view .LVU16
  88              		.loc 1 360 23 is_stmt 0 view .LVU17
  89 0042 0123     		movs	r3, #1
  90 0044 0393     		str	r3, [sp, #12]
 361:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 361 3 is_stmt 1 view .LVU18
  92              		.loc 1 361 24 is_stmt 0 view .LVU19
  93 0046 0493     		str	r3, [sp, #16]
 362:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  94              		.loc 1 362 3 is_stmt 1 view .LVU20
  95              		.loc 1 362 24 is_stmt 0 view .LVU21
ARM GAS  /tmp/ccAIZsFN.s 			page 9


  96 0048 0594     		str	r4, [sp, #20]
 363:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  97              		.loc 1 363 3 is_stmt 1 view .LVU22
  98              		.loc 1 363 25 is_stmt 0 view .LVU23
  99 004a 0694     		str	r4, [sp, #24]
 364:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 100              		.loc 1 364 3 is_stmt 1 view .LVU24
 101 004c 03A9     		add	r1, sp, #12
 102 004e 2846     		mov	r0, r5
 103 0050 FFF7FEFF 		bl	HAL_GPIO_Init
 104              	.LVL1:
 365:Src/main.c    **** 
 366:Src/main.c    **** }
 105              		.loc 1 366 1 is_stmt 0 view .LVU25
 106 0054 09B0     		add	sp, sp, #36
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 12
 109              		@ sp needed
 110 0056 30BD     		pop	{r4, r5, pc}
 111              	.L4:
 112              		.align	2
 113              	.L3:
 114 0058 00100240 		.word	1073876992
 115 005c 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE292:
 119              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 120              		.align	1
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv4-sp-d16
 126              	MX_USART2_UART_Init:
 127              	.LFB291:
 314:Src/main.c    **** 
 128              		.loc 1 314 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132 0000 08B5     		push	{r3, lr}
 133              	.LCFI3:
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 3, -8
 136              		.cfi_offset 14, -4
 323:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 137              		.loc 1 323 3 view .LVU27
 323:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 138              		.loc 1 323 19 is_stmt 0 view .LVU28
 139 0002 0948     		ldr	r0, .L7
 140 0004 094B     		ldr	r3, .L7+4
 141 0006 0360     		str	r3, [r0]
 324:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 142              		.loc 1 324 3 is_stmt 1 view .LVU29
 324:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 143              		.loc 1 324 24 is_stmt 0 view .LVU30
 144 0008 4FF4E133 		mov	r3, #115200
 145 000c 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/ccAIZsFN.s 			page 10


 325:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 146              		.loc 1 325 3 is_stmt 1 view .LVU31
 325:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 147              		.loc 1 325 26 is_stmt 0 view .LVU32
 148 000e 0023     		movs	r3, #0
 149 0010 8360     		str	r3, [r0, #8]
 326:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 150              		.loc 1 326 3 is_stmt 1 view .LVU33
 326:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 151              		.loc 1 326 24 is_stmt 0 view .LVU34
 152 0012 C360     		str	r3, [r0, #12]
 327:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 153              		.loc 1 327 3 is_stmt 1 view .LVU35
 327:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 154              		.loc 1 327 22 is_stmt 0 view .LVU36
 155 0014 0361     		str	r3, [r0, #16]
 328:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 156              		.loc 1 328 3 is_stmt 1 view .LVU37
 328:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 157              		.loc 1 328 20 is_stmt 0 view .LVU38
 158 0016 0C22     		movs	r2, #12
 159 0018 4261     		str	r2, [r0, #20]
 329:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 160              		.loc 1 329 3 is_stmt 1 view .LVU39
 329:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 161              		.loc 1 329 25 is_stmt 0 view .LVU40
 162 001a 8361     		str	r3, [r0, #24]
 330:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 163              		.loc 1 330 3 is_stmt 1 view .LVU41
 330:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 164              		.loc 1 330 28 is_stmt 0 view .LVU42
 165 001c C361     		str	r3, [r0, #28]
 331:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 166              		.loc 1 331 3 is_stmt 1 view .LVU43
 331:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 167              		.loc 1 331 30 is_stmt 0 view .LVU44
 168 001e 0362     		str	r3, [r0, #32]
 332:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 169              		.loc 1 332 3 is_stmt 1 view .LVU45
 332:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 170              		.loc 1 332 38 is_stmt 0 view .LVU46
 171 0020 4362     		str	r3, [r0, #36]
 333:Src/main.c    ****   {
 172              		.loc 1 333 3 is_stmt 1 view .LVU47
 333:Src/main.c    ****   {
 173              		.loc 1 333 7 is_stmt 0 view .LVU48
 174 0022 FFF7FEFF 		bl	HAL_UART_Init
 175              	.LVL2:
 341:Src/main.c    **** 
 176              		.loc 1 341 1 view .LVU49
 177 0026 08BD     		pop	{r3, pc}
 178              	.L8:
 179              		.align	2
 180              	.L7:
 181 0028 00000000 		.word	huart2
 182 002c 00440040 		.word	1073759232
 183              		.cfi_endproc
ARM GAS  /tmp/ccAIZsFN.s 			page 11


 184              	.LFE291:
 186              		.section	.text.MX_DAC1_Init,"ax",%progbits
 187              		.align	1
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu fpv4-sp-d16
 193              	MX_DAC1_Init:
 194              	.LFB290:
 273:Src/main.c    **** 
 195              		.loc 1 273 1 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 40
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 10B5     		push	{r4, lr}
 200              	.LCFI4:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 4, -8
 203              		.cfi_offset 14, -4
 204 0002 8AB0     		sub	sp, sp, #40
 205              	.LCFI5:
 206              		.cfi_def_cfa_offset 48
 279:Src/main.c    **** 
 207              		.loc 1 279 3 view .LVU51
 279:Src/main.c    **** 
 208              		.loc 1 279 26 is_stmt 0 view .LVU52
 209 0004 2422     		movs	r2, #36
 210 0006 0021     		movs	r1, #0
 211 0008 01A8     		add	r0, sp, #4
 212 000a FFF7FEFF 		bl	memset
 213              	.LVL3:
 286:Src/main.c    ****   if (HAL_DAC_Init(&hdac1) != HAL_OK)
 214              		.loc 1 286 3 is_stmt 1 view .LVU53
 286:Src/main.c    ****   if (HAL_DAC_Init(&hdac1) != HAL_OK)
 215              		.loc 1 286 18 is_stmt 0 view .LVU54
 216 000e 094C     		ldr	r4, .L11
 217 0010 094B     		ldr	r3, .L11+4
 218 0012 2360     		str	r3, [r4]
 287:Src/main.c    ****   {
 219              		.loc 1 287 3 is_stmt 1 view .LVU55
 287:Src/main.c    ****   {
 220              		.loc 1 287 7 is_stmt 0 view .LVU56
 221 0014 2046     		mov	r0, r4
 222 0016 FFF7FEFF 		bl	HAL_DAC_Init
 223              	.LVL4:
 293:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 224              		.loc 1 293 3 is_stmt 1 view .LVU57
 293:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 225              		.loc 1 293 29 is_stmt 0 view .LVU58
 226 001a 0022     		movs	r2, #0
 227 001c 0192     		str	r2, [sp, #4]
 294:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 228              		.loc 1 294 3 is_stmt 1 view .LVU59
 294:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 229              		.loc 1 294 23 is_stmt 0 view .LVU60
 230 001e 0292     		str	r2, [sp, #8]
 295:Src/main.c    ****   sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
ARM GAS  /tmp/ccAIZsFN.s 			page 12


 231              		.loc 1 295 3 is_stmt 1 view .LVU61
 295:Src/main.c    ****   sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
 232              		.loc 1 295 28 is_stmt 0 view .LVU62
 233 0020 0392     		str	r2, [sp, #12]
 296:Src/main.c    ****   sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 234              		.loc 1 296 3 is_stmt 1 view .LVU63
 296:Src/main.c    ****   sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 235              		.loc 1 296 39 is_stmt 0 view .LVU64
 236 0022 0492     		str	r2, [sp, #16]
 297:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 237              		.loc 1 297 3 is_stmt 1 view .LVU65
 297:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 238              		.loc 1 297 28 is_stmt 0 view .LVU66
 239 0024 0592     		str	r2, [sp, #20]
 298:Src/main.c    ****   {
 240              		.loc 1 298 3 is_stmt 1 view .LVU67
 298:Src/main.c    ****   {
 241              		.loc 1 298 7 is_stmt 0 view .LVU68
 242 0026 01A9     		add	r1, sp, #4
 243 0028 2046     		mov	r0, r4
 244 002a FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 245              	.LVL5:
 306:Src/main.c    **** 
 246              		.loc 1 306 1 view .LVU69
 247 002e 0AB0     		add	sp, sp, #40
 248              	.LCFI6:
 249              		.cfi_def_cfa_offset 8
 250              		@ sp needed
 251 0030 10BD     		pop	{r4, pc}
 252              	.L12:
 253 0032 00BF     		.align	2
 254              	.L11:
 255 0034 00000000 		.word	hdac1
 256 0038 00740040 		.word	1073771520
 257              		.cfi_endproc
 258              	.LFE290:
 260              		.section	.text.MX_ADC1_Init,"ax",%progbits
 261              		.align	1
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	MX_ADC1_Init:
 268              	.LFB289:
 212:Src/main.c    **** 
 269              		.loc 1 212 1 is_stmt 1 view -0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 24
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273 0000 70B5     		push	{r4, r5, r6, lr}
 274              	.LCFI7:
 275              		.cfi_def_cfa_offset 16
 276              		.cfi_offset 4, -16
 277              		.cfi_offset 5, -12
 278              		.cfi_offset 6, -8
 279              		.cfi_offset 14, -4
 280 0002 86B0     		sub	sp, sp, #24
ARM GAS  /tmp/ccAIZsFN.s 			page 13


 281              	.LCFI8:
 282              		.cfi_def_cfa_offset 40
 218:Src/main.c    **** 
 283              		.loc 1 218 3 view .LVU71
 218:Src/main.c    **** 
 284              		.loc 1 218 26 is_stmt 0 view .LVU72
 285 0004 0025     		movs	r5, #0
 286 0006 0095     		str	r5, [sp]
 287 0008 0195     		str	r5, [sp, #4]
 288 000a 0295     		str	r5, [sp, #8]
 289 000c 0395     		str	r5, [sp, #12]
 290 000e 0495     		str	r5, [sp, #16]
 291 0010 0595     		str	r5, [sp, #20]
 225:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 292              		.loc 1 225 3 is_stmt 1 view .LVU73
 225:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 293              		.loc 1 225 18 is_stmt 0 view .LVU74
 294 0012 184C     		ldr	r4, .L15
 295 0014 184B     		ldr	r3, .L15+4
 296 0016 2360     		str	r3, [r4]
 226:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 297              		.loc 1 226 3 is_stmt 1 view .LVU75
 226:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 298              		.loc 1 226 29 is_stmt 0 view .LVU76
 299 0018 4FF48033 		mov	r3, #65536
 300 001c 6360     		str	r3, [r4, #4]
 227:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 301              		.loc 1 227 3 is_stmt 1 view .LVU77
 227:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 302              		.loc 1 227 25 is_stmt 0 view .LVU78
 303 001e A560     		str	r5, [r4, #8]
 228:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 304              		.loc 1 228 3 is_stmt 1 view .LVU79
 228:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 305              		.loc 1 228 24 is_stmt 0 view .LVU80
 306 0020 E560     		str	r5, [r4, #12]
 229:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 307              		.loc 1 229 3 is_stmt 1 view .LVU81
 229:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 308              		.loc 1 229 27 is_stmt 0 view .LVU82
 309 0022 2561     		str	r5, [r4, #16]
 230:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 310              		.loc 1 230 3 is_stmt 1 view .LVU83
 230:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 311              		.loc 1 230 27 is_stmt 0 view .LVU84
 312 0024 0826     		movs	r6, #8
 313 0026 6661     		str	r6, [r4, #20]
 231:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 314              		.loc 1 231 3 is_stmt 1 view .LVU85
 231:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 315              		.loc 1 231 31 is_stmt 0 view .LVU86
 316 0028 2576     		strb	r5, [r4, #24]
 232:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 317              		.loc 1 232 3 is_stmt 1 view .LVU87
 232:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 318              		.loc 1 232 33 is_stmt 0 view .LVU88
 319 002a 0123     		movs	r3, #1
ARM GAS  /tmp/ccAIZsFN.s 			page 14


 320 002c 6376     		strb	r3, [r4, #25]
 233:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 321              		.loc 1 233 3 is_stmt 1 view .LVU89
 233:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 322              		.loc 1 233 30 is_stmt 0 view .LVU90
 323 002e E361     		str	r3, [r4, #28]
 234:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 324              		.loc 1 234 3 is_stmt 1 view .LVU91
 234:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 325              		.loc 1 234 36 is_stmt 0 view .LVU92
 326 0030 84F82050 		strb	r5, [r4, #32]
 235:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 327              		.loc 1 235 3 is_stmt 1 view .LVU93
 235:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 328              		.loc 1 235 34 is_stmt 0 view .LVU94
 329 0034 6362     		str	r3, [r4, #36]
 236:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 330              		.loc 1 236 3 is_stmt 1 view .LVU95
 236:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 331              		.loc 1 236 31 is_stmt 0 view .LVU96
 332 0036 A562     		str	r5, [r4, #40]
 237:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 333              		.loc 1 237 3 is_stmt 1 view .LVU97
 237:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 334              		.loc 1 237 35 is_stmt 0 view .LVU98
 335 0038 E562     		str	r5, [r4, #44]
 238:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 336              		.loc 1 238 3 is_stmt 1 view .LVU99
 238:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 337              		.loc 1 238 36 is_stmt 0 view .LVU100
 338 003a 84F83050 		strb	r5, [r4, #48]
 239:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 339              		.loc 1 239 3 is_stmt 1 view .LVU101
 239:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 340              		.loc 1 239 22 is_stmt 0 view .LVU102
 341 003e 6563     		str	r5, [r4, #52]
 240:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 342              		.loc 1 240 3 is_stmt 1 view .LVU103
 240:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 343              		.loc 1 240 31 is_stmt 0 view .LVU104
 344 0040 84F83850 		strb	r5, [r4, #56]
 241:Src/main.c    ****   {
 345              		.loc 1 241 3 is_stmt 1 view .LVU105
 241:Src/main.c    ****   {
 346              		.loc 1 241 7 is_stmt 0 view .LVU106
 347 0044 2046     		mov	r0, r4
 348 0046 FFF7FEFF 		bl	HAL_ADC_Init
 349              	.LVL6:
 247:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 350              		.loc 1 247 3 is_stmt 1 view .LVU107
 247:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 351              		.loc 1 247 19 is_stmt 0 view .LVU108
 352 004a 0C4B     		ldr	r3, .L15+8
 353 004c 0093     		str	r3, [sp]
 248:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 354              		.loc 1 248 3 is_stmt 1 view .LVU109
 248:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
ARM GAS  /tmp/ccAIZsFN.s 			page 15


 355              		.loc 1 248 16 is_stmt 0 view .LVU110
 356 004e 0623     		movs	r3, #6
 357 0050 0193     		str	r3, [sp, #4]
 249:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 358              		.loc 1 249 3 is_stmt 1 view .LVU111
 249:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 359              		.loc 1 249 24 is_stmt 0 view .LVU112
 360 0052 0295     		str	r5, [sp, #8]
 250:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 361              		.loc 1 250 3 is_stmt 1 view .LVU113
 250:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 362              		.loc 1 250 22 is_stmt 0 view .LVU114
 363 0054 7F23     		movs	r3, #127
 364 0056 0393     		str	r3, [sp, #12]
 251:Src/main.c    ****   sConfig.Offset = 0;
 365              		.loc 1 251 3 is_stmt 1 view .LVU115
 251:Src/main.c    ****   sConfig.Offset = 0;
 366              		.loc 1 251 24 is_stmt 0 view .LVU116
 367 0058 0423     		movs	r3, #4
 368 005a 0493     		str	r3, [sp, #16]
 252:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 369              		.loc 1 252 3 is_stmt 1 view .LVU117
 252:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 370              		.loc 1 252 18 is_stmt 0 view .LVU118
 371 005c 0595     		str	r5, [sp, #20]
 253:Src/main.c    ****   {
 372              		.loc 1 253 3 is_stmt 1 view .LVU119
 253:Src/main.c    ****   {
 373              		.loc 1 253 7 is_stmt 0 view .LVU120
 374 005e 6946     		mov	r1, sp
 375 0060 2046     		mov	r0, r4
 376 0062 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 377              	.LVL7:
 258:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 378              		.loc 1 258 3 is_stmt 1 view .LVU121
 258:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 379              		.loc 1 258 27 is_stmt 0 view .LVU122
 380 0066 6661     		str	r6, [r4, #20]
 259:Src/main.c    ****   {
 381              		.loc 1 259 3 is_stmt 1 view .LVU123
 259:Src/main.c    ****   {
 382              		.loc 1 259 7 is_stmt 0 view .LVU124
 383 0068 2046     		mov	r0, r4
 384 006a FFF7FEFF 		bl	HAL_ADC_Init
 385              	.LVL8:
 265:Src/main.c    **** 
 386              		.loc 1 265 1 view .LVU125
 387 006e 06B0     		add	sp, sp, #24
 388              	.LCFI9:
 389              		.cfi_def_cfa_offset 16
 390              		@ sp needed
 391 0070 70BD     		pop	{r4, r5, r6, pc}
 392              	.L16:
 393 0072 00BF     		.align	2
 394              	.L15:
 395 0074 00000000 		.word	hadc1
 396 0078 00000450 		.word	1342439424
ARM GAS  /tmp/ccAIZsFN.s 			page 16


 397 007c 0004002A 		.word	704644096
 398              		.cfi_endproc
 399              	.LFE289:
 401              		.section	.text.debugPrintln,"ax",%progbits
 402              		.align	1
 403              		.global	debugPrintln
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	debugPrintln:
 410              	.LVL9:
 411              	.LFB286:
  65:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) _out, strlen(_out), 10);
 412              		.loc 1 65 58 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 8
 415              		@ frame_needed = 0, uses_anonymous_args = 0
  65:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) _out, strlen(_out), 10);
 416              		.loc 1 65 58 is_stmt 0 view .LVU127
 417 0000 30B5     		push	{r4, r5, lr}
 418              	.LCFI10:
 419              		.cfi_def_cfa_offset 12
 420              		.cfi_offset 4, -12
 421              		.cfi_offset 5, -8
 422              		.cfi_offset 14, -4
 423 0002 83B0     		sub	sp, sp, #12
 424              	.LCFI11:
 425              		.cfi_def_cfa_offset 24
 426 0004 0446     		mov	r4, r0
 427 0006 0D46     		mov	r5, r1
  66:Src/main.c    ****  char newline[2] = "\r\n";
 428              		.loc 1 66 2 is_stmt 1 view .LVU128
  66:Src/main.c    ****  char newline[2] = "\r\n";
 429              		.loc 1 66 45 is_stmt 0 view .LVU129
 430 0008 0846     		mov	r0, r1
 431              	.LVL10:
  66:Src/main.c    ****  char newline[2] = "\r\n";
 432              		.loc 1 66 45 view .LVU130
 433 000a FFF7FEFF 		bl	strlen
 434              	.LVL11:
  66:Src/main.c    ****  char newline[2] = "\r\n";
 435              		.loc 1 66 2 view .LVU131
 436 000e 0A23     		movs	r3, #10
 437 0010 82B2     		uxth	r2, r0
 438 0012 2946     		mov	r1, r5
 439 0014 2046     		mov	r0, r4
 440 0016 FFF7FEFF 		bl	HAL_UART_Transmit
 441              	.LVL12:
  67:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) newline, 2, 10);
 442              		.loc 1 67 2 is_stmt 1 view .LVU132
  67:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) newline, 2, 10);
 443              		.loc 1 67 7 is_stmt 0 view .LVU133
 444 001a 40F60D23 		movw	r3, #2573
 445 001e ADF80430 		strh	r3, [sp, #4]	@ movhi
  68:Src/main.c    **** }
 446              		.loc 1 68 2 is_stmt 1 view .LVU134
ARM GAS  /tmp/ccAIZsFN.s 			page 17


 447 0022 0A23     		movs	r3, #10
 448 0024 0222     		movs	r2, #2
 449 0026 01A9     		add	r1, sp, #4
 450 0028 2046     		mov	r0, r4
 451 002a FFF7FEFF 		bl	HAL_UART_Transmit
 452              	.LVL13:
  69:Src/main.c    **** /* USER CODE END 0 */
 453              		.loc 1 69 1 is_stmt 0 view .LVU135
 454 002e 03B0     		add	sp, sp, #12
 455              	.LCFI12:
 456              		.cfi_def_cfa_offset 12
 457              		@ sp needed
 458 0030 30BD     		pop	{r4, r5, pc}
  69:Src/main.c    **** /* USER CODE END 0 */
 459              		.loc 1 69 1 view .LVU136
 460              		.cfi_endproc
 461              	.LFE286:
 463              		.section	.text.SystemClock_Config,"ax",%progbits
 464              		.align	1
 465              		.global	SystemClock_Config
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 469              		.fpu fpv4-sp-d16
 471              	SystemClock_Config:
 472              	.LFB288:
 155:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 473              		.loc 1 155 1 is_stmt 1 view -0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 176
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477 0000 70B5     		push	{r4, r5, r6, lr}
 478              	.LCFI13:
 479              		.cfi_def_cfa_offset 16
 480              		.cfi_offset 4, -16
 481              		.cfi_offset 5, -12
 482              		.cfi_offset 6, -8
 483              		.cfi_offset 14, -4
 484 0002 ACB0     		sub	sp, sp, #176
 485              	.LCFI14:
 486              		.cfi_def_cfa_offset 192
 156:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 487              		.loc 1 156 3 view .LVU138
 156:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 488              		.loc 1 156 22 is_stmt 0 view .LVU139
 489 0004 4022     		movs	r2, #64
 490 0006 0021     		movs	r1, #0
 491 0008 1CA8     		add	r0, sp, #112
 492 000a FFF7FEFF 		bl	memset
 493              	.LVL14:
 157:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 494              		.loc 1 157 3 is_stmt 1 view .LVU140
 157:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 495              		.loc 1 157 22 is_stmt 0 view .LVU141
 496 000e 0024     		movs	r4, #0
 497 0010 1694     		str	r4, [sp, #88]
 498 0012 1794     		str	r4, [sp, #92]
ARM GAS  /tmp/ccAIZsFN.s 			page 18


 499 0014 1894     		str	r4, [sp, #96]
 500 0016 1994     		str	r4, [sp, #100]
 501 0018 1A94     		str	r4, [sp, #104]
 158:Src/main.c    **** 
 502              		.loc 1 158 3 is_stmt 1 view .LVU142
 158:Src/main.c    **** 
 503              		.loc 1 158 28 is_stmt 0 view .LVU143
 504 001a 5422     		movs	r2, #84
 505 001c 2146     		mov	r1, r4
 506 001e 01A8     		add	r0, sp, #4
 507 0020 FFF7FEFF 		bl	memset
 508              	.LVL15:
 162:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 509              		.loc 1 162 3 is_stmt 1 view .LVU144
 162:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 510              		.loc 1 162 36 is_stmt 0 view .LVU145
 511 0024 1026     		movs	r6, #16
 512 0026 1B96     		str	r6, [sp, #108]
 163:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 513              		.loc 1 163 3 is_stmt 1 view .LVU146
 163:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 514              		.loc 1 163 30 is_stmt 0 view .LVU147
 515 0028 0125     		movs	r5, #1
 516 002a 2195     		str	r5, [sp, #132]
 164:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 517              		.loc 1 164 3 is_stmt 1 view .LVU148
 165:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 518              		.loc 1 165 3 view .LVU149
 165:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 519              		.loc 1 165 35 is_stmt 0 view .LVU150
 520 002c 6023     		movs	r3, #96
 521 002e 2393     		str	r3, [sp, #140]
 166:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 522              		.loc 1 166 3 is_stmt 1 view .LVU151
 167:Src/main.c    ****   {
 523              		.loc 1 167 3 view .LVU152
 167:Src/main.c    ****   {
 524              		.loc 1 167 7 is_stmt 0 view .LVU153
 525 0030 1BA8     		add	r0, sp, #108
 526 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 527              	.LVL16:
 173:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 528              		.loc 1 173 3 is_stmt 1 view .LVU154
 173:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 529              		.loc 1 173 31 is_stmt 0 view .LVU155
 530 0036 0F23     		movs	r3, #15
 531 0038 1693     		str	r3, [sp, #88]
 175:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 532              		.loc 1 175 3 is_stmt 1 view .LVU156
 175:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 533              		.loc 1 175 34 is_stmt 0 view .LVU157
 534 003a 1794     		str	r4, [sp, #92]
 176:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 535              		.loc 1 176 3 is_stmt 1 view .LVU158
 176:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 536              		.loc 1 176 35 is_stmt 0 view .LVU159
 537 003c 1894     		str	r4, [sp, #96]
ARM GAS  /tmp/ccAIZsFN.s 			page 19


 177:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 538              		.loc 1 177 3 is_stmt 1 view .LVU160
 177:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 539              		.loc 1 177 36 is_stmt 0 view .LVU161
 540 003e 1994     		str	r4, [sp, #100]
 178:Src/main.c    **** 
 541              		.loc 1 178 3 is_stmt 1 view .LVU162
 178:Src/main.c    **** 
 542              		.loc 1 178 36 is_stmt 0 view .LVU163
 543 0040 1A94     		str	r4, [sp, #104]
 180:Src/main.c    ****   {
 544              		.loc 1 180 3 is_stmt 1 view .LVU164
 180:Src/main.c    ****   {
 545              		.loc 1 180 7 is_stmt 0 view .LVU165
 546 0042 2146     		mov	r1, r4
 547 0044 16A8     		add	r0, sp, #88
 548 0046 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 549              	.LVL17:
 184:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 550              		.loc 1 184 3 is_stmt 1 view .LVU166
 184:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 551              		.loc 1 184 38 is_stmt 0 view .LVU167
 552 004a 44F20203 		movw	r3, #16386
 553 004e 0193     		str	r3, [sp, #4]
 185:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 554              		.loc 1 185 3 is_stmt 1 view .LVU168
 185:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 555              		.loc 1 185 38 is_stmt 0 view .LVU169
 556 0050 0A94     		str	r4, [sp, #40]
 186:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 557              		.loc 1 186 3 is_stmt 1 view .LVU170
 186:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 558              		.loc 1 186 35 is_stmt 0 view .LVU171
 559 0052 4FF08053 		mov	r3, #268435456
 560 0056 1393     		str	r3, [sp, #76]
 187:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 561              		.loc 1 187 3 is_stmt 1 view .LVU172
 187:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 562              		.loc 1 187 39 is_stmt 0 view .LVU173
 563 0058 0295     		str	r5, [sp, #8]
 188:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 564              		.loc 1 188 3 is_stmt 1 view .LVU174
 188:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 565              		.loc 1 188 34 is_stmt 0 view .LVU175
 566 005a 0395     		str	r5, [sp, #12]
 189:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 567              		.loc 1 189 3 is_stmt 1 view .LVU176
 189:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 568              		.loc 1 189 34 is_stmt 0 view .LVU177
 569 005c 0496     		str	r6, [sp, #16]
 190:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 570              		.loc 1 190 3 is_stmt 1 view .LVU178
 190:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 571              		.loc 1 190 34 is_stmt 0 view .LVU179
 572 005e 0723     		movs	r3, #7
 573 0060 0593     		str	r3, [sp, #20]
 191:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
ARM GAS  /tmp/ccAIZsFN.s 			page 20


 574              		.loc 1 191 3 is_stmt 1 view .LVU180
 191:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 575              		.loc 1 191 34 is_stmt 0 view .LVU181
 576 0062 0223     		movs	r3, #2
 577 0064 0693     		str	r3, [sp, #24]
 192:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 578              		.loc 1 192 3 is_stmt 1 view .LVU182
 192:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 579              		.loc 1 192 34 is_stmt 0 view .LVU183
 580 0066 0793     		str	r3, [sp, #28]
 193:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 581              		.loc 1 193 3 is_stmt 1 view .LVU184
 193:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 582              		.loc 1 193 41 is_stmt 0 view .LVU185
 583 0068 4FF08073 		mov	r3, #16777216
 584 006c 0893     		str	r3, [sp, #32]
 194:Src/main.c    ****   {
 585              		.loc 1 194 3 is_stmt 1 view .LVU186
 194:Src/main.c    ****   {
 586              		.loc 1 194 7 is_stmt 0 view .LVU187
 587 006e 01A8     		add	r0, sp, #4
 588 0070 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 589              	.LVL18:
 200:Src/main.c    ****   {
 590              		.loc 1 200 3 is_stmt 1 view .LVU188
 200:Src/main.c    ****   {
 591              		.loc 1 200 7 is_stmt 0 view .LVU189
 592 0074 4FF40070 		mov	r0, #512
 593 0078 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 594              	.LVL19:
 204:Src/main.c    **** 
 595              		.loc 1 204 1 view .LVU190
 596 007c 2CB0     		add	sp, sp, #176
 597              	.LCFI15:
 598              		.cfi_def_cfa_offset 16
 599              		@ sp needed
 600 007e 70BD     		pop	{r4, r5, r6, pc}
 601              		.cfi_endproc
 602              	.LFE288:
 604              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 605              		.align	2
 606              	.LC0:
 607 0000 53657474 		.ascii	"Setting up....\000"
 607      696E6720 
 607      75702E2E 
 607      2E2E00
 608 000f 00       		.align	2
 609              	.LC1:
 610 0010 646F6E65 		.ascii	"done!\000"
 610      2100
 611              		.section	.text.main,"ax",%progbits
 612              		.align	1
 613              		.global	main
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 617              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccAIZsFN.s 			page 21


 619              	main:
 620              	.LFB287:
  77:Src/main.c    ****   /* USER CODE BEGIN 1 */
 621              		.loc 1 77 1 is_stmt 1 view -0
 622              		.cfi_startproc
 623              		@ Volatile: function does not return.
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626 0000 08B5     		push	{r3, lr}
 627              	.LCFI16:
 628              		.cfi_def_cfa_offset 8
 629              		.cfi_offset 3, -8
 630              		.cfi_offset 14, -4
  85:Src/main.c    **** 
 631              		.loc 1 85 3 view .LVU192
 632 0002 FFF7FEFF 		bl	HAL_Init
 633              	.LVL20:
  92:Src/main.c    **** 
 634              		.loc 1 92 3 view .LVU193
 635 0006 FFF7FEFF 		bl	SystemClock_Config
 636              	.LVL21:
  99:Src/main.c    ****   MX_USART2_UART_Init();
 637              		.loc 1 99 3 view .LVU194
 638 000a FFF7FEFF 		bl	MX_GPIO_Init
 639              	.LVL22:
 100:Src/main.c    ****   MX_DAC1_Init();
 640              		.loc 1 100 3 view .LVU195
 641 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 642              	.LVL23:
 101:Src/main.c    ****   MX_ADC1_Init();
 643              		.loc 1 101 3 view .LVU196
 644 0012 FFF7FEFF 		bl	MX_DAC1_Init
 645              	.LVL24:
 102:Src/main.c    ****   /* USER CODE BEGIN 2 */
 646              		.loc 1 102 3 view .LVU197
 647 0016 FFF7FEFF 		bl	MX_ADC1_Init
 648              	.LVL25:
 104:Src/main.c    ****   HAL_DAC_Start(&hdac1, DAC_CHANNEL_1);
 649              		.loc 1 104 3 view .LVU198
 650 001a 084C     		ldr	r4, .L24
 651 001c 0849     		ldr	r1, .L24+4
 652 001e 2046     		mov	r0, r4
 653 0020 FFF7FEFF 		bl	debugPrintln
 654              	.LVL26:
 105:Src/main.c    ****   //HAL_OPAMP_Start(&hopamp1);
 655              		.loc 1 105 3 view .LVU199
 656 0024 0021     		movs	r1, #0
 657 0026 0748     		ldr	r0, .L24+8
 658 0028 FFF7FEFF 		bl	HAL_DAC_Start
 659              	.LVL27:
 108:Src/main.c    ****   debugPrintln(&huart2, "done!");
 660              		.loc 1 108 3 view .LVU200
 661 002c 0648     		ldr	r0, .L24+12
 662 002e FFF7FEFF 		bl	HAL_ADC_Start_IT
 663              	.LVL28:
 109:Src/main.c    ****   /* USER CODE END 2 */
 664              		.loc 1 109 3 view .LVU201
ARM GAS  /tmp/ccAIZsFN.s 			page 22


 665 0032 0649     		ldr	r1, .L24+16
 666 0034 2046     		mov	r0, r4
 667 0036 FFF7FEFF 		bl	debugPrintln
 668              	.LVL29:
 669              	.L22:
 114:Src/main.c    ****   {
 670              		.loc 1 114 3 discriminator 1 view .LVU202
 146:Src/main.c    ****   /* USER CODE END 3 */
 671              		.loc 1 146 3 discriminator 1 view .LVU203
 114:Src/main.c    ****   {
 672              		.loc 1 114 9 discriminator 1 view .LVU204
 673 003a FEE7     		b	.L22
 674              	.L25:
 675              		.align	2
 676              	.L24:
 677 003c 00000000 		.word	huart2
 678 0040 00000000 		.word	.LC0
 679 0044 00000000 		.word	hdac1
 680 0048 00000000 		.word	hadc1
 681 004c 10000000 		.word	.LC1
 682              		.cfi_endproc
 683              	.LFE287:
 685              		.section	.text.Error_Handler,"ax",%progbits
 686              		.align	1
 687              		.global	Error_Handler
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv4-sp-d16
 693              	Error_Handler:
 694              	.LFB293:
 367:Src/main.c    **** 
 368:Src/main.c    **** /* USER CODE BEGIN 4 */
 369:Src/main.c    **** 
 370:Src/main.c    **** /* USER CODE END 4 */
 371:Src/main.c    **** 
 372:Src/main.c    **** /**
 373:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 374:Src/main.c    ****   * @retval None
 375:Src/main.c    ****   */
 376:Src/main.c    **** void Error_Handler(void)
 377:Src/main.c    **** {
 695              		.loc 1 377 1 view -0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 378:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 379:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 380:Src/main.c    **** 
 381:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 382:Src/main.c    **** }
 700              		.loc 1 382 1 view .LVU206
 701 0000 7047     		bx	lr
 702              		.cfi_endproc
 703              	.LFE293:
 705              		.comm	hdac1,20,4
ARM GAS  /tmp/ccAIZsFN.s 			page 23


 706              		.comm	hadc1,100,4
 707              		.comm	huart2,128,4
 708              		.comm	value_dac,4,4
 709              		.comm	trig,4,4
 710              		.comm	value_adc,4,4
 711              		.text
 712              	.Letext0:
 713              		.file 2 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_typ
 714              		.file 3 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 715              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 716              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 717              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 718              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 719              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 720              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 721              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 722              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 723              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 724              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 725              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dac.h"
 726              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 727              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 728              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 729              		.file 18 "Inc/main.h"
 730              		.file 19 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 731              		.file 20 "<built-in>"
ARM GAS  /tmp/ccAIZsFN.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccAIZsFN.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccAIZsFN.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccAIZsFN.s:114    .text.MX_GPIO_Init:0000000000000058 $d
     /tmp/ccAIZsFN.s:120    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccAIZsFN.s:126    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccAIZsFN.s:181    .text.MX_USART2_UART_Init:0000000000000028 $d
                            *COM*:0000000000000080 huart2
     /tmp/ccAIZsFN.s:187    .text.MX_DAC1_Init:0000000000000000 $t
     /tmp/ccAIZsFN.s:193    .text.MX_DAC1_Init:0000000000000000 MX_DAC1_Init
     /tmp/ccAIZsFN.s:255    .text.MX_DAC1_Init:0000000000000034 $d
                            *COM*:0000000000000014 hdac1
     /tmp/ccAIZsFN.s:261    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccAIZsFN.s:267    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccAIZsFN.s:395    .text.MX_ADC1_Init:0000000000000074 $d
                            *COM*:0000000000000064 hadc1
     /tmp/ccAIZsFN.s:402    .text.debugPrintln:0000000000000000 $t
     /tmp/ccAIZsFN.s:409    .text.debugPrintln:0000000000000000 debugPrintln
     /tmp/ccAIZsFN.s:464    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccAIZsFN.s:471    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccAIZsFN.s:605    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccAIZsFN.s:612    .text.main:0000000000000000 $t
     /tmp/ccAIZsFN.s:619    .text.main:0000000000000000 main
     /tmp/ccAIZsFN.s:677    .text.main:000000000000003c $d
     /tmp/ccAIZsFN.s:686    .text.Error_Handler:0000000000000000 $t
     /tmp/ccAIZsFN.s:693    .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000004 value_dac
                            *COM*:0000000000000004 trig
                            *COM*:0000000000000004 value_adc

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_ADC_Init
HAL_ADC_ConfigChannel
strlen
HAL_UART_Transmit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_Init
HAL_DAC_Start
HAL_ADC_Start_IT
