ARM GAS  /tmp/ccdfat9u.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB297:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include <string.h>
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
ARM GAS  /tmp/ccdfat9u.s 			page 2


  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** ADC_HandleTypeDef hadc1;
  45:Src/main.c    **** DMA_HandleTypeDef hdma_adc1;
  46:Src/main.c    **** 
  47:Src/main.c    **** DAC_HandleTypeDef hdac1;
  48:Src/main.c    **** 
  49:Src/main.c    **** TIM_HandleTypeDef htim2;
  50:Src/main.c    **** TIM_HandleTypeDef htim15;
  51:Src/main.c    **** 
  52:Src/main.c    **** UART_HandleTypeDef huart2;
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** /* USER CODE END PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** static void MX_GPIO_Init(void);
  60:Src/main.c    **** static void MX_DMA_Init(void);
  61:Src/main.c    **** static void MX_ADC1_Init(void);
  62:Src/main.c    **** static void MX_DAC1_Init(void);
  63:Src/main.c    **** static void MX_USART2_UART_Init(void);
  64:Src/main.c    **** static void MX_TIM2_Init(void);
  65:Src/main.c    **** static void MX_TIM15_Init(void);
  66:Src/main.c    **** /* USER CODE BEGIN PFP */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PFP */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  71:Src/main.c    **** /* USER CODE BEGIN 0 */
  72:Src/main.c    **** void debugPrintln(UART_HandleTypeDef *huart, char _out[]){
  73:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) _out, strlen(_out), 10);
  74:Src/main.c    ****  char newline[4] = "\r\n";
  75:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) newline, 2, 10);
  76:Src/main.c    **** }
  77:Src/main.c    **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
  78:Src/main.c    **** {
  79:Src/main.c    ****   value_adc = ADC_BUF[0];
  80:Src/main.c    **** }
  81:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
  82:Src/main.c    **** {
  83:Src/main.c    ****   value_adc = ADC_BUF[3];
  84:Src/main.c    **** }
  85:Src/main.c    **** /* USER CODE END 0 */
  86:Src/main.c    **** 
  87:Src/main.c    **** /**
  88:Src/main.c    ****   * @brief  The application entry point.
ARM GAS  /tmp/ccdfat9u.s 			page 3


  89:Src/main.c    ****   * @retval int
  90:Src/main.c    ****   */
  91:Src/main.c    **** int main(void)
  92:Src/main.c    **** {
  93:Src/main.c    ****   /* USER CODE BEGIN 1 */
  94:Src/main.c    ****   /* USER CODE END 1 */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  99:Src/main.c    ****   HAL_Init();
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* USER CODE BEGIN Init */
 102:Src/main.c    ****   /* USER CODE END Init */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Configure the system clock */
 105:Src/main.c    ****   SystemClock_Config();
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE END SysInit */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* Initialize all configured peripherals */
 112:Src/main.c    ****   MX_GPIO_Init();
 113:Src/main.c    ****   MX_DMA_Init();
 114:Src/main.c    ****   MX_ADC1_Init();
 115:Src/main.c    ****   MX_DAC1_Init();
 116:Src/main.c    ****   MX_USART2_UART_Init();
 117:Src/main.c    ****   MX_TIM2_Init();
 118:Src/main.c    ****   MX_TIM15_Init();
 119:Src/main.c    ****   /* USER CODE BEGIN 2 */
 120:Src/main.c    ****   debugPrintln(&huart2, (char*) "Setting effects....");
 121:Src/main.c    ****   default_init_reverb(&r);
 122:Src/main.c    ****   default_init_antinoise(&a);
 123:Src/main.c    ****   default_init_chorus(&c);
 124:Src/main.c    ****   debugPrintln(&huart2, (char*) "Setting up HAL....");
 125:Src/main.c    ****   HAL_DAC_Start(&hdac1, DAC_CHANNEL_1);
 126:Src/main.c    ****   debugPrintln(&huart2, (char*) "(ADC IT)");
 127:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&ADC_BUF, ADC_BUF_LEN);
 128:Src/main.c    ****   //HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED);
 129:Src/main.c    ****   //HAL_ADC_Start_IT(&hadc1);
 130:Src/main.c    ****   debugPrintln(&huart2, (char*) "(TIM IT)");
 131:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 132:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim15);
 133:Src/main.c    ****   debugPrintln(&huart2, (char*) "done.");
 134:Src/main.c    ****   /* USER CODE END 2 */
 135:Src/main.c    **** 
 136:Src/main.c    ****   /* Infinite loop */
 137:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 138:Src/main.c    ****   //c.freq = 0.01;
 139:Src/main.c    ****   while (1)
 140:Src/main.c    ****   {
 141:Src/main.c    **** 
 142:Src/main.c    ****     uint16_t POT1 = ADC_BUF[1]; //A5
 143:Src/main.c    ****     uint16_t POT2 = ADC_BUF[2]; //A6
 144:Src/main.c    ****     uint16_t POT3 = ADC_BUF[4]; //D3
 145:Src/main.c    ****     uint16_t POT4 = ADC_BUF[5]; //D6
ARM GAS  /tmp/ccdfat9u.s 			page 4


 146:Src/main.c    **** 
 147:Src/main.c    ****     //c.amp = 0.1;
 148:Src/main.c    ****     c.amp = 1-(atan((float)POT1/50)*(2/PI));
 149:Src/main.c    ****     //c.wet = ((double)POT2/4095);
 150:Src/main.c    ****     c.freq = 10-(atan((float)POT2/250)*(2/PI)*10);
 151:Src/main.c    ****     r.fade = ((float)POT3/4095)*0.5;
 152:Src/main.c    ****     int rawBuff = (((float)POT4/4095)*r.maxBufferSize);
 153:Src/main.c    ****     rawBuff = (floor(rawBuff / 100) * 100);
 154:Src/main.c    ****     r.bufferSize = rawBuff+1;
 155:Src/main.c    **** 
 156:Src/main.c    ****     char buf [100];
 157:Src/main.c    ****     //sprintf(buf, "ADC: %f", c.velocity);
 158:Src/main.c    ****     //sprintf(buf, "ADC: (%d) %d %d %d %d", value_adc, POT1, POT2, POT3, POT4);
 159:Src/main.c    ****     //sprintf(buf, "ADC: %04f %04f %04f %d", c.amp, c.freq, r.fade, r.bufferSize);
 160:Src/main.c    ****     //debugPrintln(&huart2, buf);
 161:Src/main.c    ****     //HAL_Delay(500);
 162:Src/main.c    ****     //c.amp = ((double)ADC_BUF[2]/4095)*0.05;
 163:Src/main.c    ****     //c.freq = (((float)ADC_BUF[1]/4095)*4)+1;
 164:Src/main.c    ****     //r.fade = ((float)ADC_BUF[3]/4095);
 165:Src/main.c    ****     //r.bufferSize = (((float)ADC_BUF[4]/4095)*r.maxBufferSize)+1;
 166:Src/main.c    ****     //char buf[32];
 167:Src/main.c    ****     //sprintf(buf, "ADC: %f %f", (float)c.freq);
 168:Src/main.c    ****     //debugPrintln(&huart2,buf);
 169:Src/main.c    ****     //HAL_Delay(100);
 170:Src/main.c    ****     /* USER CODE END WHILE */
 171:Src/main.c    **** 
 172:Src/main.c    ****     /* USER CODE BEGIN 3 */
 173:Src/main.c    ****   }
 174:Src/main.c    ****   /* USER CODE END 3 */
 175:Src/main.c    **** }
 176:Src/main.c    **** 
 177:Src/main.c    **** /**
 178:Src/main.c    ****   * @brief System Clock Configuration
 179:Src/main.c    ****   * @retval None
 180:Src/main.c    ****   */
 181:Src/main.c    **** void SystemClock_Config(void)
 182:Src/main.c    **** {
 183:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 184:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 185:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 186:Src/main.c    **** 
 187:Src/main.c    ****   /** Configure LSE Drive Capability 
 188:Src/main.c    ****   */
 189:Src/main.c    ****   HAL_PWR_EnableBkUpAccess();
 190:Src/main.c    ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 191:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 192:Src/main.c    ****   */
 193:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
 194:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 195:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 196:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 197:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 16;
 202:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
ARM GAS  /tmp/ccdfat9u.s 			page 5


 203:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 204:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 205:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 206:Src/main.c    ****   {
 207:Src/main.c    ****     Error_Handler();
 208:Src/main.c    ****   }
 209:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 210:Src/main.c    ****   */
 211:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 212:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 213:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 214:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 215:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 216:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 217:Src/main.c    **** 
 218:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 219:Src/main.c    ****   {
 220:Src/main.c    ****     Error_Handler();
 221:Src/main.c    ****   }
 222:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_ADC;
 223:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 224:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 225:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 226:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 227:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 228:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 229:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 230:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 231:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 232:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 233:Src/main.c    ****   {
 234:Src/main.c    ****     Error_Handler();
 235:Src/main.c    ****   }
 236:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 237:Src/main.c    ****   */
 238:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 239:Src/main.c    ****   {
 240:Src/main.c    ****     Error_Handler();
 241:Src/main.c    ****   }
 242:Src/main.c    ****   /** Enable MSI Auto calibration 
 243:Src/main.c    ****   */
 244:Src/main.c    ****   HAL_RCCEx_EnableMSIPLLMode();
 245:Src/main.c    **** }
 246:Src/main.c    **** 
 247:Src/main.c    **** /**
 248:Src/main.c    ****   * @brief ADC1 Initialization Function
 249:Src/main.c    ****   * @param None
 250:Src/main.c    ****   * @retval None
 251:Src/main.c    ****   */
 252:Src/main.c    **** static void MX_ADC1_Init(void)
 253:Src/main.c    **** {
 254:Src/main.c    **** 
 255:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 256:Src/main.c    **** 
 257:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 258:Src/main.c    **** 
 259:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
ARM GAS  /tmp/ccdfat9u.s 			page 6


 260:Src/main.c    **** 
 261:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 262:Src/main.c    **** 
 263:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 264:Src/main.c    ****   /** Common config 
 265:Src/main.c    ****   */
 266:Src/main.c    ****   hadc1.Instance = ADC1;
 267:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV4;
 268:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 269:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 270:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 271:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 272:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 273:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 274:Src/main.c    ****   hadc1.Init.NbrOfConversion = 6;
 275:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 276:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 277:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 278:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 279:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 280:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 281:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 282:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 283:Src/main.c    ****   {
 284:Src/main.c    ****     Error_Handler();
 285:Src/main.c    ****   }
 286:Src/main.c    ****   /** Configure Regular Channel 
 287:Src/main.c    ****   */
 288:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_10;
 289:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 290:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_47CYCLES_5;
 291:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 292:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 293:Src/main.c    ****   sConfig.Offset = 0;
 294:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 295:Src/main.c    ****   {
 296:Src/main.c    ****     Error_Handler();
 297:Src/main.c    ****   }
 298:Src/main.c    ****   /** Configure Regular Channel 
 299:Src/main.c    ****   */
 300:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_11;
 301:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 302:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 303:Src/main.c    ****   {
 304:Src/main.c    ****     Error_Handler();
 305:Src/main.c    ****   }
 306:Src/main.c    ****   /** Configure Regular Channel 
 307:Src/main.c    ****   */
 308:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_12;
 309:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 310:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 311:Src/main.c    ****   {
 312:Src/main.c    ****     Error_Handler();
 313:Src/main.c    ****   }
 314:Src/main.c    ****   /** Configure Regular Channel 
 315:Src/main.c    ****   */
 316:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_10;
ARM GAS  /tmp/ccdfat9u.s 			page 7


 317:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 318:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 319:Src/main.c    ****   {
 320:Src/main.c    ****     Error_Handler();
 321:Src/main.c    ****   }
 322:Src/main.c    ****   /** Configure Regular Channel 
 323:Src/main.c    ****   */
 324:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_15;
 325:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 326:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 327:Src/main.c    ****   {
 328:Src/main.c    ****     Error_Handler();
 329:Src/main.c    ****   }
 330:Src/main.c    ****   /** Configure Regular Channel 
 331:Src/main.c    ****   */
 332:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_16;
 333:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 334:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 335:Src/main.c    ****   {
 336:Src/main.c    ****     Error_Handler();
 337:Src/main.c    ****   }
 338:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 339:Src/main.c    ****   hadc1.Init.EOCSelection = EOC_SEQ_CONV;
 340:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 341:Src/main.c    ****   {
 342:Src/main.c    ****     Error_Handler();
 343:Src/main.c    ****   }
 344:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 345:Src/main.c    **** 
 346:Src/main.c    **** }
 347:Src/main.c    **** 
 348:Src/main.c    **** /**
 349:Src/main.c    ****   * @brief DAC1 Initialization Function
 350:Src/main.c    ****   * @param None
 351:Src/main.c    ****   * @retval None
 352:Src/main.c    ****   */
 353:Src/main.c    **** static void MX_DAC1_Init(void)
 354:Src/main.c    **** {
 355:Src/main.c    **** 
 356:Src/main.c    ****   /* USER CODE BEGIN DAC1_Init 0 */
 357:Src/main.c    **** 
 358:Src/main.c    ****   /* USER CODE END DAC1_Init 0 */
 359:Src/main.c    **** 
 360:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 361:Src/main.c    **** 
 362:Src/main.c    ****   /* USER CODE BEGIN DAC1_Init 1 */
 363:Src/main.c    **** 
 364:Src/main.c    ****   /* USER CODE END DAC1_Init 1 */
 365:Src/main.c    ****   /** DAC Initialization 
 366:Src/main.c    ****   */
 367:Src/main.c    ****   hdac1.Instance = DAC1;
 368:Src/main.c    ****   if (HAL_DAC_Init(&hdac1) != HAL_OK)
 369:Src/main.c    ****   {
 370:Src/main.c    ****     Error_Handler();
 371:Src/main.c    ****   }
 372:Src/main.c    ****   /** DAC channel OUT1 config 
 373:Src/main.c    ****   */
ARM GAS  /tmp/ccdfat9u.s 			page 8


 374:Src/main.c    ****   sConfig.DAC_SampleAndHold = DAC_SAMPLEANDHOLD_DISABLE;
 375:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 376:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 377:Src/main.c    ****   sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
 378:Src/main.c    ****   sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 379:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 380:Src/main.c    ****   {
 381:Src/main.c    ****     Error_Handler();
 382:Src/main.c    ****   }
 383:Src/main.c    ****   /* USER CODE BEGIN DAC1_Init 2 */
 384:Src/main.c    **** 
 385:Src/main.c    ****   /* USER CODE END DAC1_Init 2 */
 386:Src/main.c    **** 
 387:Src/main.c    **** }
 388:Src/main.c    **** 
 389:Src/main.c    **** /**
 390:Src/main.c    ****   * @brief TIM2 Initialization Function
 391:Src/main.c    ****   * @param None
 392:Src/main.c    ****   * @retval None
 393:Src/main.c    ****   */
 394:Src/main.c    **** static void MX_TIM2_Init(void)
 395:Src/main.c    **** {
 396:Src/main.c    **** 
 397:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 398:Src/main.c    **** 
 399:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 400:Src/main.c    **** 
 401:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 402:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 403:Src/main.c    **** 
 404:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 405:Src/main.c    **** 
 406:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 407:Src/main.c    ****   htim2.Instance = TIM2;
 408:Src/main.c    ****   htim2.Init.Prescaler = 200;
 409:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 410:Src/main.c    ****   htim2.Init.Period = 10;
 411:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 412:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 413:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 414:Src/main.c    ****   {
 415:Src/main.c    ****     Error_Handler();
 416:Src/main.c    ****   }
 417:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 418:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 419:Src/main.c    ****   {
 420:Src/main.c    ****     Error_Handler();
 421:Src/main.c    ****   }
 422:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 423:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 424:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 425:Src/main.c    ****   {
 426:Src/main.c    ****     Error_Handler();
 427:Src/main.c    ****   }
 428:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 429:Src/main.c    **** 
 430:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
ARM GAS  /tmp/ccdfat9u.s 			page 9


 431:Src/main.c    **** 
 432:Src/main.c    **** }
 433:Src/main.c    **** 
 434:Src/main.c    **** /**
 435:Src/main.c    ****   * @brief TIM15 Initialization Function
 436:Src/main.c    ****   * @param None
 437:Src/main.c    ****   * @retval None
 438:Src/main.c    ****   */
 439:Src/main.c    **** static void MX_TIM15_Init(void)
 440:Src/main.c    **** {
 441:Src/main.c    **** 
 442:Src/main.c    ****   /* USER CODE BEGIN TIM15_Init 0 */
 443:Src/main.c    **** 
 444:Src/main.c    ****   /* USER CODE END TIM15_Init 0 */
 445:Src/main.c    **** 
 446:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 447:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 448:Src/main.c    **** 
 449:Src/main.c    ****   /* USER CODE BEGIN TIM15_Init 1 */
 450:Src/main.c    **** 
 451:Src/main.c    ****   /* USER CODE END TIM15_Init 1 */
 452:Src/main.c    ****   htim15.Instance = TIM15;
 453:Src/main.c    ****   htim15.Init.Prescaler = 128;
 454:Src/main.c    ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 455:Src/main.c    ****   htim15.Init.Period = 10;
 456:Src/main.c    ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 457:Src/main.c    ****   htim15.Init.RepetitionCounter = 0;
 458:Src/main.c    ****   htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 459:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 460:Src/main.c    ****   {
 461:Src/main.c    ****     Error_Handler();
 462:Src/main.c    ****   }
 463:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 464:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 465:Src/main.c    ****   {
 466:Src/main.c    ****     Error_Handler();
 467:Src/main.c    ****   }
 468:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 469:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 470:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 471:Src/main.c    ****   {
 472:Src/main.c    ****     Error_Handler();
 473:Src/main.c    ****   }
 474:Src/main.c    ****   /* USER CODE BEGIN TIM15_Init 2 */
 475:Src/main.c    **** 
 476:Src/main.c    ****   /* USER CODE END TIM15_Init 2 */
 477:Src/main.c    **** 
 478:Src/main.c    **** }
 479:Src/main.c    **** 
 480:Src/main.c    **** /**
 481:Src/main.c    ****   * @brief USART2 Initialization Function
 482:Src/main.c    ****   * @param None
 483:Src/main.c    ****   * @retval None
 484:Src/main.c    ****   */
 485:Src/main.c    **** static void MX_USART2_UART_Init(void)
 486:Src/main.c    **** {
 487:Src/main.c    **** 
ARM GAS  /tmp/ccdfat9u.s 			page 10


 488:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 489:Src/main.c    **** 
 490:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 491:Src/main.c    **** 
 492:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 493:Src/main.c    **** 
 494:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 495:Src/main.c    ****   huart2.Instance = USART2;
 496:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 497:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 498:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 499:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 500:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 501:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 502:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 503:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 504:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 505:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 506:Src/main.c    ****   {
 507:Src/main.c    ****     Error_Handler();
 508:Src/main.c    ****   }
 509:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 510:Src/main.c    **** 
 511:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 512:Src/main.c    **** 
 513:Src/main.c    **** }
 514:Src/main.c    **** 
 515:Src/main.c    **** /** 
 516:Src/main.c    ****   * Enable DMA controller clock
 517:Src/main.c    ****   */
 518:Src/main.c    **** static void MX_DMA_Init(void) 
 519:Src/main.c    **** {
 520:Src/main.c    **** 
 521:Src/main.c    ****   /* DMA controller clock enable */
 522:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 523:Src/main.c    **** 
 524:Src/main.c    ****   /* DMA interrupt init */
 525:Src/main.c    ****   /* DMA2_Channel3_IRQn interrupt configuration */
 526:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Channel3_IRQn, 0, 0);
 527:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Channel3_IRQn);
 528:Src/main.c    **** 
 529:Src/main.c    **** }
 530:Src/main.c    **** 
 531:Src/main.c    **** /**
 532:Src/main.c    ****   * @brief GPIO Initialization Function
 533:Src/main.c    ****   * @param None
 534:Src/main.c    ****   * @retval None
 535:Src/main.c    ****   */
 536:Src/main.c    **** static void MX_GPIO_Init(void)
 537:Src/main.c    **** {
  28              		.loc 1 537 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccdfat9u.s 			page 11


  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
 538:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 538 3 view .LVU1
  43              		.loc 1 538 20 is_stmt 0 view .LVU2
  44 0004 0024     		movs	r4, #0
  45 0006 0394     		str	r4, [sp, #12]
  46 0008 0494     		str	r4, [sp, #16]
  47 000a 0594     		str	r4, [sp, #20]
  48 000c 0694     		str	r4, [sp, #24]
  49 000e 0794     		str	r4, [sp, #28]
 539:Src/main.c    **** 
 540:Src/main.c    ****   /* GPIO Ports Clock Enable */
 541:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 541 3 is_stmt 1 view .LVU3
  51              	.LBB2:
  52              		.loc 1 541 3 view .LVU4
  53              		.loc 1 541 3 view .LVU5
  54 0010 1F4B     		ldr	r3, .L3
  55 0012 DA6C     		ldr	r2, [r3, #76]
  56 0014 42F00402 		orr	r2, r2, #4
  57 0018 DA64     		str	r2, [r3, #76]
  58              		.loc 1 541 3 view .LVU6
  59 001a DA6C     		ldr	r2, [r3, #76]
  60 001c 02F00402 		and	r2, r2, #4
  61 0020 0092     		str	r2, [sp]
  62              		.loc 1 541 3 view .LVU7
  63 0022 009A     		ldr	r2, [sp]
  64              	.LBE2:
  65              		.loc 1 541 3 view .LVU8
 542:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 542 3 view .LVU9
  67              	.LBB3:
  68              		.loc 1 542 3 view .LVU10
  69              		.loc 1 542 3 view .LVU11
  70 0024 DA6C     		ldr	r2, [r3, #76]
  71 0026 42F00102 		orr	r2, r2, #1
  72 002a DA64     		str	r2, [r3, #76]
  73              		.loc 1 542 3 view .LVU12
  74 002c DA6C     		ldr	r2, [r3, #76]
  75 002e 02F00102 		and	r2, r2, #1
  76 0032 0192     		str	r2, [sp, #4]
  77              		.loc 1 542 3 view .LVU13
  78 0034 019A     		ldr	r2, [sp, #4]
  79              	.LBE3:
  80              		.loc 1 542 3 view .LVU14
 543:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  81              		.loc 1 543 3 view .LVU15
  82              	.LBB4:
  83              		.loc 1 543 3 view .LVU16
  84              		.loc 1 543 3 view .LVU17
  85 0036 DA6C     		ldr	r2, [r3, #76]
ARM GAS  /tmp/ccdfat9u.s 			page 12


  86 0038 42F00202 		orr	r2, r2, #2
  87 003c DA64     		str	r2, [r3, #76]
  88              		.loc 1 543 3 view .LVU18
  89 003e DB6C     		ldr	r3, [r3, #76]
  90 0040 03F00203 		and	r3, r3, #2
  91 0044 0293     		str	r3, [sp, #8]
  92              		.loc 1 543 3 view .LVU19
  93 0046 029B     		ldr	r3, [sp, #8]
  94              	.LBE4:
  95              		.loc 1 543 3 view .LVU20
 544:Src/main.c    **** 
 545:Src/main.c    ****   /*Configure GPIO pin Output Level */
 546:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
  96              		.loc 1 546 3 view .LVU21
  97 0048 2246     		mov	r2, r4
  98 004a 4FF48071 		mov	r1, #256
  99 004e 4FF09040 		mov	r0, #1207959552
 100 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 547:Src/main.c    **** 
 548:Src/main.c    ****   /*Configure GPIO pin Output Level */
 549:Src/main.c    ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 102              		.loc 1 549 3 view .LVU22
 103 0056 0F4D     		ldr	r5, .L3+4
 104 0058 2246     		mov	r2, r4
 105 005a 0821     		movs	r1, #8
 106 005c 2846     		mov	r0, r5
 107 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL1:
 550:Src/main.c    **** 
 551:Src/main.c    ****   /*Configure GPIO pin : PA8 */
 552:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 109              		.loc 1 552 3 view .LVU23
 110              		.loc 1 552 23 is_stmt 0 view .LVU24
 111 0062 4FF48073 		mov	r3, #256
 112 0066 0393     		str	r3, [sp, #12]
 553:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 113              		.loc 1 553 3 is_stmt 1 view .LVU25
 114              		.loc 1 553 24 is_stmt 0 view .LVU26
 115 0068 0126     		movs	r6, #1
 116 006a 0496     		str	r6, [sp, #16]
 554:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 117              		.loc 1 554 3 is_stmt 1 view .LVU27
 118              		.loc 1 554 24 is_stmt 0 view .LVU28
 119 006c 0594     		str	r4, [sp, #20]
 555:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 120              		.loc 1 555 3 is_stmt 1 view .LVU29
 121              		.loc 1 555 25 is_stmt 0 view .LVU30
 122 006e 0694     		str	r4, [sp, #24]
 556:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 123              		.loc 1 556 3 is_stmt 1 view .LVU31
 124 0070 03A9     		add	r1, sp, #12
 125 0072 4FF09040 		mov	r0, #1207959552
 126 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 127              	.LVL2:
 557:Src/main.c    **** 
 558:Src/main.c    ****   /*Configure GPIO pin : LD3_Pin */
ARM GAS  /tmp/ccdfat9u.s 			page 13


 559:Src/main.c    ****   GPIO_InitStruct.Pin = LD3_Pin;
 128              		.loc 1 559 3 view .LVU32
 129              		.loc 1 559 23 is_stmt 0 view .LVU33
 130 007a 0823     		movs	r3, #8
 131 007c 0393     		str	r3, [sp, #12]
 560:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 560 3 is_stmt 1 view .LVU34
 133              		.loc 1 560 24 is_stmt 0 view .LVU35
 134 007e 0496     		str	r6, [sp, #16]
 561:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 135              		.loc 1 561 3 is_stmt 1 view .LVU36
 136              		.loc 1 561 24 is_stmt 0 view .LVU37
 137 0080 0594     		str	r4, [sp, #20]
 562:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 138              		.loc 1 562 3 is_stmt 1 view .LVU38
 139              		.loc 1 562 25 is_stmt 0 view .LVU39
 140 0082 0694     		str	r4, [sp, #24]
 563:Src/main.c    ****   HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 141              		.loc 1 563 3 is_stmt 1 view .LVU40
 142 0084 03A9     		add	r1, sp, #12
 143 0086 2846     		mov	r0, r5
 144 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 145              	.LVL3:
 564:Src/main.c    **** 
 565:Src/main.c    **** }
 146              		.loc 1 565 1 is_stmt 0 view .LVU41
 147 008c 08B0     		add	sp, sp, #32
 148              	.LCFI2:
 149              		.cfi_def_cfa_offset 16
 150              		@ sp needed
 151 008e 70BD     		pop	{r4, r5, r6, pc}
 152              	.L4:
 153              		.align	2
 154              	.L3:
 155 0090 00100240 		.word	1073876992
 156 0094 00040048 		.word	1207960576
 157              		.cfi_endproc
 158              	.LFE297:
 160              		.section	.text.MX_DMA_Init,"ax",%progbits
 161              		.align	1
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	MX_DMA_Init:
 168              	.LFB296:
 519:Src/main.c    **** 
 169              		.loc 1 519 1 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 8
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 00B5     		push	{lr}
 174              	.LCFI3:
 175              		.cfi_def_cfa_offset 4
 176              		.cfi_offset 14, -4
 177 0002 83B0     		sub	sp, sp, #12
 178              	.LCFI4:
ARM GAS  /tmp/ccdfat9u.s 			page 14


 179              		.cfi_def_cfa_offset 16
 522:Src/main.c    **** 
 180              		.loc 1 522 3 view .LVU43
 181              	.LBB5:
 522:Src/main.c    **** 
 182              		.loc 1 522 3 view .LVU44
 522:Src/main.c    **** 
 183              		.loc 1 522 3 view .LVU45
 184 0004 0A4B     		ldr	r3, .L7
 185 0006 9A6C     		ldr	r2, [r3, #72]
 186 0008 42F00202 		orr	r2, r2, #2
 187 000c 9A64     		str	r2, [r3, #72]
 522:Src/main.c    **** 
 188              		.loc 1 522 3 view .LVU46
 189 000e 9B6C     		ldr	r3, [r3, #72]
 190 0010 03F00203 		and	r3, r3, #2
 191 0014 0193     		str	r3, [sp, #4]
 522:Src/main.c    **** 
 192              		.loc 1 522 3 view .LVU47
 193 0016 019B     		ldr	r3, [sp, #4]
 194              	.LBE5:
 522:Src/main.c    **** 
 195              		.loc 1 522 3 view .LVU48
 526:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Channel3_IRQn);
 196              		.loc 1 526 3 view .LVU49
 197 0018 0022     		movs	r2, #0
 198 001a 1146     		mov	r1, r2
 199 001c 3A20     		movs	r0, #58
 200 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 201              	.LVL4:
 527:Src/main.c    **** 
 202              		.loc 1 527 3 view .LVU50
 203 0022 3A20     		movs	r0, #58
 204 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 205              	.LVL5:
 529:Src/main.c    **** 
 206              		.loc 1 529 1 is_stmt 0 view .LVU51
 207 0028 03B0     		add	sp, sp, #12
 208              	.LCFI5:
 209              		.cfi_def_cfa_offset 4
 210              		@ sp needed
 211 002a 5DF804FB 		ldr	pc, [sp], #4
 212              	.L8:
 213 002e 00BF     		.align	2
 214              	.L7:
 215 0030 00100240 		.word	1073876992
 216              		.cfi_endproc
 217              	.LFE296:
 219              		.section	.text.MX_ADC1_Init,"ax",%progbits
 220              		.align	1
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv4-sp-d16
 226              	MX_ADC1_Init:
 227              	.LFB291:
 253:Src/main.c    **** 
ARM GAS  /tmp/ccdfat9u.s 			page 15


 228              		.loc 1 253 1 is_stmt 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 24
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 233              	.LCFI6:
 234              		.cfi_def_cfa_offset 24
 235              		.cfi_offset 4, -24
 236              		.cfi_offset 5, -20
 237              		.cfi_offset 6, -16
 238              		.cfi_offset 7, -12
 239              		.cfi_offset 8, -8
 240              		.cfi_offset 14, -4
 241 0004 86B0     		sub	sp, sp, #24
 242              	.LCFI7:
 243              		.cfi_def_cfa_offset 48
 259:Src/main.c    **** 
 244              		.loc 1 259 3 view .LVU53
 259:Src/main.c    **** 
 245              		.loc 1 259 26 is_stmt 0 view .LVU54
 246 0006 0025     		movs	r5, #0
 247 0008 0095     		str	r5, [sp]
 248 000a 0195     		str	r5, [sp, #4]
 249 000c 0295     		str	r5, [sp, #8]
 250 000e 0395     		str	r5, [sp, #12]
 251 0010 0495     		str	r5, [sp, #16]
 252 0012 0595     		str	r5, [sp, #20]
 266:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV4;
 253              		.loc 1 266 3 is_stmt 1 view .LVU55
 266:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV4;
 254              		.loc 1 266 18 is_stmt 0 view .LVU56
 255 0014 2E4C     		ldr	r4, .L11
 256 0016 2F4B     		ldr	r3, .L11+4
 257 0018 2360     		str	r3, [r4]
 267:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 258              		.loc 1 267 3 is_stmt 1 view .LVU57
 267:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 259              		.loc 1 267 29 is_stmt 0 view .LVU58
 260 001a 4FF40023 		mov	r3, #524288
 261 001e 6360     		str	r3, [r4, #4]
 268:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 262              		.loc 1 268 3 is_stmt 1 view .LVU59
 268:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 263              		.loc 1 268 25 is_stmt 0 view .LVU60
 264 0020 A560     		str	r5, [r4, #8]
 269:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 265              		.loc 1 269 3 is_stmt 1 view .LVU61
 269:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 266              		.loc 1 269 24 is_stmt 0 view .LVU62
 267 0022 E560     		str	r5, [r4, #12]
 270:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 268              		.loc 1 270 3 is_stmt 1 view .LVU63
 270:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 269              		.loc 1 270 27 is_stmt 0 view .LVU64
 270 0024 0123     		movs	r3, #1
 271 0026 2361     		str	r3, [r4, #16]
 271:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
ARM GAS  /tmp/ccdfat9u.s 			page 16


 272              		.loc 1 271 3 is_stmt 1 view .LVU65
 271:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 273              		.loc 1 271 27 is_stmt 0 view .LVU66
 274 0028 0826     		movs	r6, #8
 275 002a 6661     		str	r6, [r4, #20]
 272:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 276              		.loc 1 272 3 is_stmt 1 view .LVU67
 272:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 277              		.loc 1 272 31 is_stmt 0 view .LVU68
 278 002c 2576     		strb	r5, [r4, #24]
 273:Src/main.c    ****   hadc1.Init.NbrOfConversion = 6;
 279              		.loc 1 273 3 is_stmt 1 view .LVU69
 273:Src/main.c    ****   hadc1.Init.NbrOfConversion = 6;
 280              		.loc 1 273 33 is_stmt 0 view .LVU70
 281 002e 6376     		strb	r3, [r4, #25]
 274:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 282              		.loc 1 274 3 is_stmt 1 view .LVU71
 274:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 283              		.loc 1 274 30 is_stmt 0 view .LVU72
 284 0030 4FF00608 		mov	r8, #6
 285 0034 C4F81C80 		str	r8, [r4, #28]
 275:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 286              		.loc 1 275 3 is_stmt 1 view .LVU73
 275:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 287              		.loc 1 275 36 is_stmt 0 view .LVU74
 288 0038 84F82050 		strb	r5, [r4, #32]
 276:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 289              		.loc 1 276 3 is_stmt 1 view .LVU75
 276:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 290              		.loc 1 276 34 is_stmt 0 view .LVU76
 291 003c 6362     		str	r3, [r4, #36]
 277:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 292              		.loc 1 277 3 is_stmt 1 view .LVU77
 277:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 293              		.loc 1 277 31 is_stmt 0 view .LVU78
 294 003e A562     		str	r5, [r4, #40]
 278:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 295              		.loc 1 278 3 is_stmt 1 view .LVU79
 278:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 296              		.loc 1 278 35 is_stmt 0 view .LVU80
 297 0040 E562     		str	r5, [r4, #44]
 279:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 298              		.loc 1 279 3 is_stmt 1 view .LVU81
 279:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 299              		.loc 1 279 36 is_stmt 0 view .LVU82
 300 0042 84F83030 		strb	r3, [r4, #48]
 280:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 301              		.loc 1 280 3 is_stmt 1 view .LVU83
 280:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 302              		.loc 1 280 22 is_stmt 0 view .LVU84
 303 0046 6563     		str	r5, [r4, #52]
 281:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 304              		.loc 1 281 3 is_stmt 1 view .LVU85
 281:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 305              		.loc 1 281 31 is_stmt 0 view .LVU86
 306 0048 84F83850 		strb	r5, [r4, #56]
 282:Src/main.c    ****   {
ARM GAS  /tmp/ccdfat9u.s 			page 17


 307              		.loc 1 282 3 is_stmt 1 view .LVU87
 282:Src/main.c    ****   {
 308              		.loc 1 282 7 is_stmt 0 view .LVU88
 309 004c 2046     		mov	r0, r4
 310 004e FFF7FEFF 		bl	HAL_ADC_Init
 311              	.LVL6:
 288:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 312              		.loc 1 288 3 is_stmt 1 view .LVU89
 288:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 313              		.loc 1 288 19 is_stmt 0 view .LVU90
 314 0052 214F     		ldr	r7, .L11+8
 315 0054 0097     		str	r7, [sp]
 289:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_47CYCLES_5;
 316              		.loc 1 289 3 is_stmt 1 view .LVU91
 289:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_47CYCLES_5;
 317              		.loc 1 289 16 is_stmt 0 view .LVU92
 318 0056 CDF80480 		str	r8, [sp, #4]
 290:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 319              		.loc 1 290 3 is_stmt 1 view .LVU93
 290:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 320              		.loc 1 290 24 is_stmt 0 view .LVU94
 321 005a 0423     		movs	r3, #4
 322 005c 0293     		str	r3, [sp, #8]
 291:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 323              		.loc 1 291 3 is_stmt 1 view .LVU95
 291:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 324              		.loc 1 291 22 is_stmt 0 view .LVU96
 325 005e 7F22     		movs	r2, #127
 326 0060 0392     		str	r2, [sp, #12]
 292:Src/main.c    ****   sConfig.Offset = 0;
 327              		.loc 1 292 3 is_stmt 1 view .LVU97
 292:Src/main.c    ****   sConfig.Offset = 0;
 328              		.loc 1 292 24 is_stmt 0 view .LVU98
 329 0062 0493     		str	r3, [sp, #16]
 293:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 330              		.loc 1 293 3 is_stmt 1 view .LVU99
 293:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 331              		.loc 1 293 18 is_stmt 0 view .LVU100
 332 0064 0595     		str	r5, [sp, #20]
 294:Src/main.c    ****   {
 333              		.loc 1 294 3 is_stmt 1 view .LVU101
 294:Src/main.c    ****   {
 334              		.loc 1 294 7 is_stmt 0 view .LVU102
 335 0066 6946     		mov	r1, sp
 336 0068 2046     		mov	r0, r4
 337 006a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 338              	.LVL7:
 300:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 339              		.loc 1 300 3 is_stmt 1 view .LVU103
 300:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 340              		.loc 1 300 19 is_stmt 0 view .LVU104
 341 006e 1B4B     		ldr	r3, .L11+12
 342 0070 0093     		str	r3, [sp]
 301:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 343              		.loc 1 301 3 is_stmt 1 view .LVU105
 301:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 344              		.loc 1 301 16 is_stmt 0 view .LVU106
ARM GAS  /tmp/ccdfat9u.s 			page 18


 345 0072 0C23     		movs	r3, #12
 346 0074 0193     		str	r3, [sp, #4]
 302:Src/main.c    ****   {
 347              		.loc 1 302 3 is_stmt 1 view .LVU107
 302:Src/main.c    ****   {
 348              		.loc 1 302 7 is_stmt 0 view .LVU108
 349 0076 6946     		mov	r1, sp
 350 0078 2046     		mov	r0, r4
 351 007a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 352              	.LVL8:
 308:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 353              		.loc 1 308 3 is_stmt 1 view .LVU109
 308:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 354              		.loc 1 308 19 is_stmt 0 view .LVU110
 355 007e 184B     		ldr	r3, .L11+16
 356 0080 0093     		str	r3, [sp]
 309:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 357              		.loc 1 309 3 is_stmt 1 view .LVU111
 309:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 358              		.loc 1 309 16 is_stmt 0 view .LVU112
 359 0082 1223     		movs	r3, #18
 360 0084 0193     		str	r3, [sp, #4]
 310:Src/main.c    ****   {
 361              		.loc 1 310 3 is_stmt 1 view .LVU113
 310:Src/main.c    ****   {
 362              		.loc 1 310 7 is_stmt 0 view .LVU114
 363 0086 6946     		mov	r1, sp
 364 0088 2046     		mov	r0, r4
 365 008a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 366              	.LVL9:
 316:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 367              		.loc 1 316 3 is_stmt 1 view .LVU115
 316:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 368              		.loc 1 316 19 is_stmt 0 view .LVU116
 369 008e 0097     		str	r7, [sp]
 317:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 370              		.loc 1 317 3 is_stmt 1 view .LVU117
 317:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 371              		.loc 1 317 16 is_stmt 0 view .LVU118
 372 0090 1823     		movs	r3, #24
 373 0092 0193     		str	r3, [sp, #4]
 318:Src/main.c    ****   {
 374              		.loc 1 318 3 is_stmt 1 view .LVU119
 318:Src/main.c    ****   {
 375              		.loc 1 318 7 is_stmt 0 view .LVU120
 376 0094 6946     		mov	r1, sp
 377 0096 2046     		mov	r0, r4
 378 0098 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 379              	.LVL10:
 324:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 380              		.loc 1 324 3 is_stmt 1 view .LVU121
 324:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 381              		.loc 1 324 19 is_stmt 0 view .LVU122
 382 009c 114B     		ldr	r3, .L11+20
 383 009e 0093     		str	r3, [sp]
 325:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 384              		.loc 1 325 3 is_stmt 1 view .LVU123
ARM GAS  /tmp/ccdfat9u.s 			page 19


 325:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 385              		.loc 1 325 16 is_stmt 0 view .LVU124
 386 00a0 4FF48073 		mov	r3, #256
 387 00a4 0193     		str	r3, [sp, #4]
 326:Src/main.c    ****   {
 388              		.loc 1 326 3 is_stmt 1 view .LVU125
 326:Src/main.c    ****   {
 389              		.loc 1 326 7 is_stmt 0 view .LVU126
 390 00a6 6946     		mov	r1, sp
 391 00a8 2046     		mov	r0, r4
 392 00aa FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 393              	.LVL11:
 332:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 394              		.loc 1 332 3 is_stmt 1 view .LVU127
 332:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 395              		.loc 1 332 19 is_stmt 0 view .LVU128
 396 00ae 0E4B     		ldr	r3, .L11+24
 397 00b0 0093     		str	r3, [sp]
 333:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 398              		.loc 1 333 3 is_stmt 1 view .LVU129
 333:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 399              		.loc 1 333 16 is_stmt 0 view .LVU130
 400 00b2 4FF48373 		mov	r3, #262
 401 00b6 0193     		str	r3, [sp, #4]
 334:Src/main.c    ****   {
 402              		.loc 1 334 3 is_stmt 1 view .LVU131
 334:Src/main.c    ****   {
 403              		.loc 1 334 7 is_stmt 0 view .LVU132
 404 00b8 6946     		mov	r1, sp
 405 00ba 2046     		mov	r0, r4
 406 00bc FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 407              	.LVL12:
 339:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 408              		.loc 1 339 3 is_stmt 1 view .LVU133
 339:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 409              		.loc 1 339 27 is_stmt 0 view .LVU134
 410 00c0 6661     		str	r6, [r4, #20]
 340:Src/main.c    ****   {
 411              		.loc 1 340 3 is_stmt 1 view .LVU135
 340:Src/main.c    ****   {
 412              		.loc 1 340 7 is_stmt 0 view .LVU136
 413 00c2 2046     		mov	r0, r4
 414 00c4 FFF7FEFF 		bl	HAL_ADC_Init
 415              	.LVL13:
 346:Src/main.c    **** 
 416              		.loc 1 346 1 view .LVU137
 417 00c8 06B0     		add	sp, sp, #24
 418              	.LCFI8:
 419              		.cfi_def_cfa_offset 24
 420              		@ sp needed
 421 00ca BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 422              	.L12:
 423 00ce 00BF     		.align	2
 424              	.L11:
 425 00d0 00000000 		.word	hadc1
 426 00d4 00000450 		.word	1342439424
 427 00d8 0004002A 		.word	704644096
ARM GAS  /tmp/ccdfat9u.s 			page 20


 428 00dc 0008302E 		.word	774899712
 429 00e0 00106032 		.word	845156352
 430 00e4 0080F03E 		.word	1055948800
 431 00e8 00002143 		.word	1126236160
 432              		.cfi_endproc
 433              	.LFE291:
 435              		.section	.text.MX_DAC1_Init,"ax",%progbits
 436              		.align	1
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv4-sp-d16
 442              	MX_DAC1_Init:
 443              	.LFB292:
 354:Src/main.c    **** 
 444              		.loc 1 354 1 is_stmt 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 40
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448 0000 10B5     		push	{r4, lr}
 449              	.LCFI9:
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 4, -8
 452              		.cfi_offset 14, -4
 453 0002 8AB0     		sub	sp, sp, #40
 454              	.LCFI10:
 455              		.cfi_def_cfa_offset 48
 360:Src/main.c    **** 
 456              		.loc 1 360 3 view .LVU139
 360:Src/main.c    **** 
 457              		.loc 1 360 26 is_stmt 0 view .LVU140
 458 0004 2422     		movs	r2, #36
 459 0006 0021     		movs	r1, #0
 460 0008 01A8     		add	r0, sp, #4
 461 000a FFF7FEFF 		bl	memset
 462              	.LVL14:
 367:Src/main.c    ****   if (HAL_DAC_Init(&hdac1) != HAL_OK)
 463              		.loc 1 367 3 is_stmt 1 view .LVU141
 367:Src/main.c    ****   if (HAL_DAC_Init(&hdac1) != HAL_OK)
 464              		.loc 1 367 18 is_stmt 0 view .LVU142
 465 000e 094C     		ldr	r4, .L15
 466 0010 094B     		ldr	r3, .L15+4
 467 0012 2360     		str	r3, [r4]
 368:Src/main.c    ****   {
 468              		.loc 1 368 3 is_stmt 1 view .LVU143
 368:Src/main.c    ****   {
 469              		.loc 1 368 7 is_stmt 0 view .LVU144
 470 0014 2046     		mov	r0, r4
 471 0016 FFF7FEFF 		bl	HAL_DAC_Init
 472              	.LVL15:
 374:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 473              		.loc 1 374 3 is_stmt 1 view .LVU145
 374:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 474              		.loc 1 374 29 is_stmt 0 view .LVU146
 475 001a 0022     		movs	r2, #0
 476 001c 0192     		str	r2, [sp, #4]
 375:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
ARM GAS  /tmp/ccdfat9u.s 			page 21


 477              		.loc 1 375 3 is_stmt 1 view .LVU147
 375:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 478              		.loc 1 375 23 is_stmt 0 view .LVU148
 479 001e 0292     		str	r2, [sp, #8]
 376:Src/main.c    ****   sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
 480              		.loc 1 376 3 is_stmt 1 view .LVU149
 376:Src/main.c    ****   sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
 481              		.loc 1 376 28 is_stmt 0 view .LVU150
 482 0020 0392     		str	r2, [sp, #12]
 377:Src/main.c    ****   sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 483              		.loc 1 377 3 is_stmt 1 view .LVU151
 377:Src/main.c    ****   sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 484              		.loc 1 377 39 is_stmt 0 view .LVU152
 485 0022 0492     		str	r2, [sp, #16]
 378:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 486              		.loc 1 378 3 is_stmt 1 view .LVU153
 378:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 487              		.loc 1 378 28 is_stmt 0 view .LVU154
 488 0024 0592     		str	r2, [sp, #20]
 379:Src/main.c    ****   {
 489              		.loc 1 379 3 is_stmt 1 view .LVU155
 379:Src/main.c    ****   {
 490              		.loc 1 379 7 is_stmt 0 view .LVU156
 491 0026 01A9     		add	r1, sp, #4
 492 0028 2046     		mov	r0, r4
 493 002a FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 494              	.LVL16:
 387:Src/main.c    **** 
 495              		.loc 1 387 1 view .LVU157
 496 002e 0AB0     		add	sp, sp, #40
 497              	.LCFI11:
 498              		.cfi_def_cfa_offset 8
 499              		@ sp needed
 500 0030 10BD     		pop	{r4, pc}
 501              	.L16:
 502 0032 00BF     		.align	2
 503              	.L15:
 504 0034 00000000 		.word	hdac1
 505 0038 00740040 		.word	1073771520
 506              		.cfi_endproc
 507              	.LFE292:
 509              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 510              		.align	1
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 514              		.fpu fpv4-sp-d16
 516              	MX_USART2_UART_Init:
 517              	.LFB295:
 486:Src/main.c    **** 
 518              		.loc 1 486 1 is_stmt 1 view -0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522 0000 08B5     		push	{r3, lr}
 523              	.LCFI12:
 524              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccdfat9u.s 			page 22


 525              		.cfi_offset 3, -8
 526              		.cfi_offset 14, -4
 495:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 527              		.loc 1 495 3 view .LVU159
 495:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 528              		.loc 1 495 19 is_stmt 0 view .LVU160
 529 0002 0948     		ldr	r0, .L19
 530 0004 094B     		ldr	r3, .L19+4
 531 0006 0360     		str	r3, [r0]
 496:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 532              		.loc 1 496 3 is_stmt 1 view .LVU161
 496:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 533              		.loc 1 496 24 is_stmt 0 view .LVU162
 534 0008 4FF4E133 		mov	r3, #115200
 535 000c 4360     		str	r3, [r0, #4]
 497:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 536              		.loc 1 497 3 is_stmt 1 view .LVU163
 497:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 537              		.loc 1 497 26 is_stmt 0 view .LVU164
 538 000e 0023     		movs	r3, #0
 539 0010 8360     		str	r3, [r0, #8]
 498:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 540              		.loc 1 498 3 is_stmt 1 view .LVU165
 498:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 541              		.loc 1 498 24 is_stmt 0 view .LVU166
 542 0012 C360     		str	r3, [r0, #12]
 499:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 543              		.loc 1 499 3 is_stmt 1 view .LVU167
 499:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 544              		.loc 1 499 22 is_stmt 0 view .LVU168
 545 0014 0361     		str	r3, [r0, #16]
 500:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 546              		.loc 1 500 3 is_stmt 1 view .LVU169
 500:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 547              		.loc 1 500 20 is_stmt 0 view .LVU170
 548 0016 0C22     		movs	r2, #12
 549 0018 4261     		str	r2, [r0, #20]
 501:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 550              		.loc 1 501 3 is_stmt 1 view .LVU171
 501:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 551              		.loc 1 501 25 is_stmt 0 view .LVU172
 552 001a 8361     		str	r3, [r0, #24]
 502:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 553              		.loc 1 502 3 is_stmt 1 view .LVU173
 502:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 554              		.loc 1 502 28 is_stmt 0 view .LVU174
 555 001c C361     		str	r3, [r0, #28]
 503:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 556              		.loc 1 503 3 is_stmt 1 view .LVU175
 503:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 557              		.loc 1 503 30 is_stmt 0 view .LVU176
 558 001e 0362     		str	r3, [r0, #32]
 504:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 559              		.loc 1 504 3 is_stmt 1 view .LVU177
 504:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 560              		.loc 1 504 38 is_stmt 0 view .LVU178
 561 0020 4362     		str	r3, [r0, #36]
ARM GAS  /tmp/ccdfat9u.s 			page 23


 505:Src/main.c    ****   {
 562              		.loc 1 505 3 is_stmt 1 view .LVU179
 505:Src/main.c    ****   {
 563              		.loc 1 505 7 is_stmt 0 view .LVU180
 564 0022 FFF7FEFF 		bl	HAL_UART_Init
 565              	.LVL17:
 513:Src/main.c    **** 
 566              		.loc 1 513 1 view .LVU181
 567 0026 08BD     		pop	{r3, pc}
 568              	.L20:
 569              		.align	2
 570              	.L19:
 571 0028 00000000 		.word	huart2
 572 002c 00440040 		.word	1073759232
 573              		.cfi_endproc
 574              	.LFE295:
 576              		.section	.text.MX_TIM2_Init,"ax",%progbits
 577              		.align	1
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.fpu fpv4-sp-d16
 583              	MX_TIM2_Init:
 584              	.LFB293:
 395:Src/main.c    **** 
 585              		.loc 1 395 1 is_stmt 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 32
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589 0000 30B5     		push	{r4, r5, lr}
 590              	.LCFI13:
 591              		.cfi_def_cfa_offset 12
 592              		.cfi_offset 4, -12
 593              		.cfi_offset 5, -8
 594              		.cfi_offset 14, -4
 595 0002 89B0     		sub	sp, sp, #36
 596              	.LCFI14:
 597              		.cfi_def_cfa_offset 48
 401:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 598              		.loc 1 401 3 view .LVU183
 401:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 599              		.loc 1 401 26 is_stmt 0 view .LVU184
 600 0004 0024     		movs	r4, #0
 601 0006 0494     		str	r4, [sp, #16]
 602 0008 0594     		str	r4, [sp, #20]
 603 000a 0694     		str	r4, [sp, #24]
 604 000c 0794     		str	r4, [sp, #28]
 402:Src/main.c    **** 
 605              		.loc 1 402 3 is_stmt 1 view .LVU185
 402:Src/main.c    **** 
 606              		.loc 1 402 27 is_stmt 0 view .LVU186
 607 000e 0194     		str	r4, [sp, #4]
 608 0010 0294     		str	r4, [sp, #8]
 609 0012 0394     		str	r4, [sp, #12]
 407:Src/main.c    ****   htim2.Init.Prescaler = 200;
 610              		.loc 1 407 3 is_stmt 1 view .LVU187
 407:Src/main.c    ****   htim2.Init.Prescaler = 200;
ARM GAS  /tmp/ccdfat9u.s 			page 24


 611              		.loc 1 407 18 is_stmt 0 view .LVU188
 612 0014 0E4D     		ldr	r5, .L23
 613 0016 4FF08043 		mov	r3, #1073741824
 614 001a 2B60     		str	r3, [r5]
 408:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 615              		.loc 1 408 3 is_stmt 1 view .LVU189
 408:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 616              		.loc 1 408 24 is_stmt 0 view .LVU190
 617 001c C823     		movs	r3, #200
 618 001e 6B60     		str	r3, [r5, #4]
 409:Src/main.c    ****   htim2.Init.Period = 10;
 619              		.loc 1 409 3 is_stmt 1 view .LVU191
 409:Src/main.c    ****   htim2.Init.Period = 10;
 620              		.loc 1 409 26 is_stmt 0 view .LVU192
 621 0020 AC60     		str	r4, [r5, #8]
 410:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 622              		.loc 1 410 3 is_stmt 1 view .LVU193
 410:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 623              		.loc 1 410 21 is_stmt 0 view .LVU194
 624 0022 0A23     		movs	r3, #10
 625 0024 EB60     		str	r3, [r5, #12]
 411:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 626              		.loc 1 411 3 is_stmt 1 view .LVU195
 411:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 627              		.loc 1 411 28 is_stmt 0 view .LVU196
 628 0026 2C61     		str	r4, [r5, #16]
 412:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 629              		.loc 1 412 3 is_stmt 1 view .LVU197
 412:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 630              		.loc 1 412 32 is_stmt 0 view .LVU198
 631 0028 AC61     		str	r4, [r5, #24]
 413:Src/main.c    ****   {
 632              		.loc 1 413 3 is_stmt 1 view .LVU199
 413:Src/main.c    ****   {
 633              		.loc 1 413 7 is_stmt 0 view .LVU200
 634 002a 2846     		mov	r0, r5
 635 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 636              	.LVL18:
 417:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 637              		.loc 1 417 3 is_stmt 1 view .LVU201
 417:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 638              		.loc 1 417 34 is_stmt 0 view .LVU202
 639 0030 4FF48053 		mov	r3, #4096
 640 0034 0493     		str	r3, [sp, #16]
 418:Src/main.c    ****   {
 641              		.loc 1 418 3 is_stmt 1 view .LVU203
 418:Src/main.c    ****   {
 642              		.loc 1 418 7 is_stmt 0 view .LVU204
 643 0036 04A9     		add	r1, sp, #16
 644 0038 2846     		mov	r0, r5
 645 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 646              	.LVL19:
 422:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 647              		.loc 1 422 3 is_stmt 1 view .LVU205
 422:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 648              		.loc 1 422 37 is_stmt 0 view .LVU206
 649 003e 0194     		str	r4, [sp, #4]
ARM GAS  /tmp/ccdfat9u.s 			page 25


 423:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 650              		.loc 1 423 3 is_stmt 1 view .LVU207
 423:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 651              		.loc 1 423 33 is_stmt 0 view .LVU208
 652 0040 0394     		str	r4, [sp, #12]
 424:Src/main.c    ****   {
 653              		.loc 1 424 3 is_stmt 1 view .LVU209
 424:Src/main.c    ****   {
 654              		.loc 1 424 7 is_stmt 0 view .LVU210
 655 0042 01A9     		add	r1, sp, #4
 656 0044 2846     		mov	r0, r5
 657 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 658              	.LVL20:
 432:Src/main.c    **** 
 659              		.loc 1 432 1 view .LVU211
 660 004a 09B0     		add	sp, sp, #36
 661              	.LCFI15:
 662              		.cfi_def_cfa_offset 12
 663              		@ sp needed
 664 004c 30BD     		pop	{r4, r5, pc}
 665              	.L24:
 666 004e 00BF     		.align	2
 667              	.L23:
 668 0050 00000000 		.word	htim2
 669              		.cfi_endproc
 670              	.LFE293:
 672              		.section	.text.MX_TIM15_Init,"ax",%progbits
 673              		.align	1
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 677              		.fpu fpv4-sp-d16
 679              	MX_TIM15_Init:
 680              	.LFB294:
 440:Src/main.c    **** 
 681              		.loc 1 440 1 is_stmt 1 view -0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 32
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685 0000 30B5     		push	{r4, r5, lr}
 686              	.LCFI16:
 687              		.cfi_def_cfa_offset 12
 688              		.cfi_offset 4, -12
 689              		.cfi_offset 5, -8
 690              		.cfi_offset 14, -4
 691 0002 89B0     		sub	sp, sp, #36
 692              	.LCFI17:
 693              		.cfi_def_cfa_offset 48
 446:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 694              		.loc 1 446 3 view .LVU213
 446:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 695              		.loc 1 446 26 is_stmt 0 view .LVU214
 696 0004 0024     		movs	r4, #0
 697 0006 0494     		str	r4, [sp, #16]
 698 0008 0594     		str	r4, [sp, #20]
 699 000a 0694     		str	r4, [sp, #24]
 700 000c 0794     		str	r4, [sp, #28]
ARM GAS  /tmp/ccdfat9u.s 			page 26


 447:Src/main.c    **** 
 701              		.loc 1 447 3 is_stmt 1 view .LVU215
 447:Src/main.c    **** 
 702              		.loc 1 447 27 is_stmt 0 view .LVU216
 703 000e 0194     		str	r4, [sp, #4]
 704 0010 0294     		str	r4, [sp, #8]
 705 0012 0394     		str	r4, [sp, #12]
 452:Src/main.c    ****   htim15.Init.Prescaler = 128;
 706              		.loc 1 452 3 is_stmt 1 view .LVU217
 452:Src/main.c    ****   htim15.Init.Prescaler = 128;
 707              		.loc 1 452 19 is_stmt 0 view .LVU218
 708 0014 0E4D     		ldr	r5, .L27
 709 0016 0F4B     		ldr	r3, .L27+4
 710 0018 2B60     		str	r3, [r5]
 453:Src/main.c    ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 711              		.loc 1 453 3 is_stmt 1 view .LVU219
 453:Src/main.c    ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 712              		.loc 1 453 25 is_stmt 0 view .LVU220
 713 001a 8023     		movs	r3, #128
 714 001c 6B60     		str	r3, [r5, #4]
 454:Src/main.c    ****   htim15.Init.Period = 10;
 715              		.loc 1 454 3 is_stmt 1 view .LVU221
 454:Src/main.c    ****   htim15.Init.Period = 10;
 716              		.loc 1 454 27 is_stmt 0 view .LVU222
 717 001e AC60     		str	r4, [r5, #8]
 455:Src/main.c    ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 718              		.loc 1 455 3 is_stmt 1 view .LVU223
 455:Src/main.c    ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 719              		.loc 1 455 22 is_stmt 0 view .LVU224
 720 0020 0A23     		movs	r3, #10
 721 0022 EB60     		str	r3, [r5, #12]
 456:Src/main.c    ****   htim15.Init.RepetitionCounter = 0;
 722              		.loc 1 456 3 is_stmt 1 view .LVU225
 456:Src/main.c    ****   htim15.Init.RepetitionCounter = 0;
 723              		.loc 1 456 29 is_stmt 0 view .LVU226
 724 0024 2C61     		str	r4, [r5, #16]
 457:Src/main.c    ****   htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 725              		.loc 1 457 3 is_stmt 1 view .LVU227
 457:Src/main.c    ****   htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 726              		.loc 1 457 33 is_stmt 0 view .LVU228
 727 0026 6C61     		str	r4, [r5, #20]
 458:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 728              		.loc 1 458 3 is_stmt 1 view .LVU229
 458:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 729              		.loc 1 458 33 is_stmt 0 view .LVU230
 730 0028 AC61     		str	r4, [r5, #24]
 459:Src/main.c    ****   {
 731              		.loc 1 459 3 is_stmt 1 view .LVU231
 459:Src/main.c    ****   {
 732              		.loc 1 459 7 is_stmt 0 view .LVU232
 733 002a 2846     		mov	r0, r5
 734 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 735              	.LVL21:
 463:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 736              		.loc 1 463 3 is_stmt 1 view .LVU233
 463:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 737              		.loc 1 463 34 is_stmt 0 view .LVU234
ARM GAS  /tmp/ccdfat9u.s 			page 27


 738 0030 4FF48053 		mov	r3, #4096
 739 0034 0493     		str	r3, [sp, #16]
 464:Src/main.c    ****   {
 740              		.loc 1 464 3 is_stmt 1 view .LVU235
 464:Src/main.c    ****   {
 741              		.loc 1 464 7 is_stmt 0 view .LVU236
 742 0036 04A9     		add	r1, sp, #16
 743 0038 2846     		mov	r0, r5
 744 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 745              	.LVL22:
 468:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 746              		.loc 1 468 3 is_stmt 1 view .LVU237
 468:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 747              		.loc 1 468 37 is_stmt 0 view .LVU238
 748 003e 0194     		str	r4, [sp, #4]
 469:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 749              		.loc 1 469 3 is_stmt 1 view .LVU239
 469:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 750              		.loc 1 469 33 is_stmt 0 view .LVU240
 751 0040 0394     		str	r4, [sp, #12]
 470:Src/main.c    ****   {
 752              		.loc 1 470 3 is_stmt 1 view .LVU241
 470:Src/main.c    ****   {
 753              		.loc 1 470 7 is_stmt 0 view .LVU242
 754 0042 01A9     		add	r1, sp, #4
 755 0044 2846     		mov	r0, r5
 756 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 757              	.LVL23:
 478:Src/main.c    **** 
 758              		.loc 1 478 1 view .LVU243
 759 004a 09B0     		add	sp, sp, #36
 760              	.LCFI18:
 761              		.cfi_def_cfa_offset 12
 762              		@ sp needed
 763 004c 30BD     		pop	{r4, r5, pc}
 764              	.L28:
 765 004e 00BF     		.align	2
 766              	.L27:
 767 0050 00000000 		.word	htim15
 768 0054 00400140 		.word	1073823744
 769              		.cfi_endproc
 770              	.LFE294:
 772              		.section	.text.debugPrintln,"ax",%progbits
 773              		.align	1
 774              		.global	debugPrintln
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv4-sp-d16
 780              	debugPrintln:
 781              	.LVL24:
 782              	.LFB286:
  72:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) _out, strlen(_out), 10);
 783              		.loc 1 72 58 is_stmt 1 view -0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 8
 786              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccdfat9u.s 			page 28


  72:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) _out, strlen(_out), 10);
 787              		.loc 1 72 58 is_stmt 0 view .LVU245
 788 0000 30B5     		push	{r4, r5, lr}
 789              	.LCFI19:
 790              		.cfi_def_cfa_offset 12
 791              		.cfi_offset 4, -12
 792              		.cfi_offset 5, -8
 793              		.cfi_offset 14, -4
 794 0002 83B0     		sub	sp, sp, #12
 795              	.LCFI20:
 796              		.cfi_def_cfa_offset 24
 797 0004 0446     		mov	r4, r0
 798 0006 0D46     		mov	r5, r1
  73:Src/main.c    ****  char newline[4] = "\r\n";
 799              		.loc 1 73 2 is_stmt 1 view .LVU246
  73:Src/main.c    ****  char newline[4] = "\r\n";
 800              		.loc 1 73 45 is_stmt 0 view .LVU247
 801 0008 0846     		mov	r0, r1
 802              	.LVL25:
  73:Src/main.c    ****  char newline[4] = "\r\n";
 803              		.loc 1 73 45 view .LVU248
 804 000a FFF7FEFF 		bl	strlen
 805              	.LVL26:
  73:Src/main.c    ****  char newline[4] = "\r\n";
 806              		.loc 1 73 2 view .LVU249
 807 000e 0A23     		movs	r3, #10
 808 0010 82B2     		uxth	r2, r0
 809 0012 2946     		mov	r1, r5
 810 0014 2046     		mov	r0, r4
 811 0016 FFF7FEFF 		bl	HAL_UART_Transmit
 812              	.LVL27:
  74:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) newline, 2, 10);
 813              		.loc 1 74 2 is_stmt 1 view .LVU250
  74:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) newline, 2, 10);
 814              		.loc 1 74 7 is_stmt 0 view .LVU251
 815 001a 40F60D23 		movw	r3, #2573
 816 001e 0193     		str	r3, [sp, #4]
  75:Src/main.c    **** }
 817              		.loc 1 75 2 is_stmt 1 view .LVU252
 818 0020 0A23     		movs	r3, #10
 819 0022 0222     		movs	r2, #2
 820 0024 01A9     		add	r1, sp, #4
 821 0026 2046     		mov	r0, r4
 822 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 823              	.LVL28:
  76:Src/main.c    **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
 824              		.loc 1 76 1 is_stmt 0 view .LVU253
 825 002c 03B0     		add	sp, sp, #12
 826              	.LCFI21:
 827              		.cfi_def_cfa_offset 12
 828              		@ sp needed
 829 002e 30BD     		pop	{r4, r5, pc}
  76:Src/main.c    **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
 830              		.loc 1 76 1 view .LVU254
 831              		.cfi_endproc
 832              	.LFE286:
 834              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
ARM GAS  /tmp/ccdfat9u.s 			page 29


 835              		.align	1
 836              		.global	HAL_ADC_ConvHalfCpltCallback
 837              		.syntax unified
 838              		.thumb
 839              		.thumb_func
 840              		.fpu fpv4-sp-d16
 842              	HAL_ADC_ConvHalfCpltCallback:
 843              	.LVL29:
 844              	.LFB287:
  78:Src/main.c    ****   value_adc = ADC_BUF[0];
 845              		.loc 1 78 1 is_stmt 1 view -0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              		@ link register save eliminated.
  79:Src/main.c    **** }
 850              		.loc 1 79 3 view .LVU256
  79:Src/main.c    **** }
 851              		.loc 1 79 22 is_stmt 0 view .LVU257
 852 0000 024B     		ldr	r3, .L32
 853 0002 1B88     		ldrh	r3, [r3]
 854 0004 9BB2     		uxth	r3, r3
  79:Src/main.c    **** }
 855              		.loc 1 79 13 view .LVU258
 856 0006 024A     		ldr	r2, .L32+4
 857 0008 1360     		str	r3, [r2]
  80:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 858              		.loc 1 80 1 view .LVU259
 859 000a 7047     		bx	lr
 860              	.L33:
 861              		.align	2
 862              	.L32:
 863 000c 00000000 		.word	ADC_BUF
 864 0010 00000000 		.word	value_adc
 865              		.cfi_endproc
 866              	.LFE287:
 868              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 869              		.align	1
 870              		.global	HAL_ADC_ConvCpltCallback
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 874              		.fpu fpv4-sp-d16
 876              	HAL_ADC_ConvCpltCallback:
 877              	.LVL30:
 878              	.LFB288:
  82:Src/main.c    ****   value_adc = ADC_BUF[3];
 879              		.loc 1 82 1 is_stmt 1 view -0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 883              		@ link register save eliminated.
  83:Src/main.c    **** }
 884              		.loc 1 83 3 view .LVU261
  83:Src/main.c    **** }
 885              		.loc 1 83 22 is_stmt 0 view .LVU262
 886 0000 024B     		ldr	r3, .L35
ARM GAS  /tmp/ccdfat9u.s 			page 30


 887 0002 DB88     		ldrh	r3, [r3, #6]
 888 0004 9BB2     		uxth	r3, r3
  83:Src/main.c    **** }
 889              		.loc 1 83 13 view .LVU263
 890 0006 024A     		ldr	r2, .L35+4
 891 0008 1360     		str	r3, [r2]
  84:Src/main.c    **** /* USER CODE END 0 */
 892              		.loc 1 84 1 view .LVU264
 893 000a 7047     		bx	lr
 894              	.L36:
 895              		.align	2
 896              	.L35:
 897 000c 00000000 		.word	ADC_BUF
 898 0010 00000000 		.word	value_adc
 899              		.cfi_endproc
 900              	.LFE288:
 902              		.section	.text.SystemClock_Config,"ax",%progbits
 903              		.align	1
 904              		.global	SystemClock_Config
 905              		.syntax unified
 906              		.thumb
 907              		.thumb_func
 908              		.fpu fpv4-sp-d16
 910              	SystemClock_Config:
 911              	.LFB290:
 182:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 912              		.loc 1 182 1 is_stmt 1 view -0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 176
 915              		@ frame_needed = 0, uses_anonymous_args = 0
 916 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 917              	.LCFI22:
 918              		.cfi_def_cfa_offset 24
 919              		.cfi_offset 4, -24
 920              		.cfi_offset 5, -20
 921              		.cfi_offset 6, -16
 922              		.cfi_offset 7, -12
 923              		.cfi_offset 8, -8
 924              		.cfi_offset 14, -4
 925 0004 ACB0     		sub	sp, sp, #176
 926              	.LCFI23:
 927              		.cfi_def_cfa_offset 200
 183:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 928              		.loc 1 183 3 view .LVU266
 183:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 929              		.loc 1 183 22 is_stmt 0 view .LVU267
 930 0006 4422     		movs	r2, #68
 931 0008 0021     		movs	r1, #0
 932 000a 1BA8     		add	r0, sp, #108
 933 000c FFF7FEFF 		bl	memset
 934              	.LVL31:
 184:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 935              		.loc 1 184 3 is_stmt 1 view .LVU268
 184:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 936              		.loc 1 184 22 is_stmt 0 view .LVU269
 937 0010 0024     		movs	r4, #0
 938 0012 1694     		str	r4, [sp, #88]
ARM GAS  /tmp/ccdfat9u.s 			page 31


 939 0014 1794     		str	r4, [sp, #92]
 940 0016 1894     		str	r4, [sp, #96]
 941 0018 1994     		str	r4, [sp, #100]
 942 001a 1A94     		str	r4, [sp, #104]
 185:Src/main.c    **** 
 943              		.loc 1 185 3 is_stmt 1 view .LVU270
 185:Src/main.c    **** 
 944              		.loc 1 185 28 is_stmt 0 view .LVU271
 945 001c 5422     		movs	r2, #84
 946 001e 2146     		mov	r1, r4
 947 0020 01A8     		add	r0, sp, #4
 948 0022 FFF7FEFF 		bl	memset
 949              	.LVL32:
 189:Src/main.c    ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 950              		.loc 1 189 3 is_stmt 1 view .LVU272
 951 0026 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 952              	.LVL33:
 190:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 953              		.loc 1 190 3 view .LVU273
 954 002a 234A     		ldr	r2, .L39
 955 002c D2F89030 		ldr	r3, [r2, #144]
 956 0030 23F01803 		bic	r3, r3, #24
 957 0034 C2F89030 		str	r3, [r2, #144]
 193:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 958              		.loc 1 193 3 view .LVU274
 193:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 959              		.loc 1 193 36 is_stmt 0 view .LVU275
 960 0038 1423     		movs	r3, #20
 961 003a 1B93     		str	r3, [sp, #108]
 194:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 962              		.loc 1 194 3 is_stmt 1 view .LVU276
 194:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 963              		.loc 1 194 30 is_stmt 0 view .LVU277
 964 003c 0125     		movs	r5, #1
 965 003e 1D95     		str	r5, [sp, #116]
 195:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 966              		.loc 1 195 3 is_stmt 1 view .LVU278
 195:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 967              		.loc 1 195 30 is_stmt 0 view .LVU279
 968 0040 2195     		str	r5, [sp, #132]
 196:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 969              		.loc 1 196 3 is_stmt 1 view .LVU280
 196:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 970              		.loc 1 196 41 is_stmt 0 view .LVU281
 971 0042 2294     		str	r4, [sp, #136]
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 972              		.loc 1 197 3 is_stmt 1 view .LVU282
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 973              		.loc 1 197 35 is_stmt 0 view .LVU283
 974 0044 6023     		movs	r3, #96
 975 0046 2393     		str	r3, [sp, #140]
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 976              		.loc 1 198 3 is_stmt 1 view .LVU284
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 977              		.loc 1 198 34 is_stmt 0 view .LVU285
 978 0048 0226     		movs	r6, #2
 979 004a 2596     		str	r6, [sp, #148]
ARM GAS  /tmp/ccdfat9u.s 			page 32


 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 980              		.loc 1 199 3 is_stmt 1 view .LVU286
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 981              		.loc 1 199 35 is_stmt 0 view .LVU287
 982 004c 2695     		str	r5, [sp, #152]
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 16;
 983              		.loc 1 200 3 is_stmt 1 view .LVU288
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 16;
 984              		.loc 1 200 30 is_stmt 0 view .LVU289
 985 004e 2795     		str	r5, [sp, #156]
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 986              		.loc 1 201 3 is_stmt 1 view .LVU290
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 987              		.loc 1 201 30 is_stmt 0 view .LVU291
 988 0050 4FF01008 		mov	r8, #16
 989 0054 CDF8A080 		str	r8, [sp, #160]
 202:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 990              		.loc 1 202 3 is_stmt 1 view .LVU292
 202:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 991              		.loc 1 202 30 is_stmt 0 view .LVU293
 992 0058 0727     		movs	r7, #7
 993 005a 2997     		str	r7, [sp, #164]
 203:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 994              		.loc 1 203 3 is_stmt 1 view .LVU294
 203:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 995              		.loc 1 203 30 is_stmt 0 view .LVU295
 996 005c 2A96     		str	r6, [sp, #168]
 204:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 997              		.loc 1 204 3 is_stmt 1 view .LVU296
 204:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 998              		.loc 1 204 30 is_stmt 0 view .LVU297
 999 005e 2B96     		str	r6, [sp, #172]
 205:Src/main.c    ****   {
 1000              		.loc 1 205 3 is_stmt 1 view .LVU298
 205:Src/main.c    ****   {
 1001              		.loc 1 205 7 is_stmt 0 view .LVU299
 1002 0060 1BA8     		add	r0, sp, #108
 1003 0062 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1004              	.LVL34:
 211:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1005              		.loc 1 211 3 is_stmt 1 view .LVU300
 211:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1006              		.loc 1 211 31 is_stmt 0 view .LVU301
 1007 0066 0F23     		movs	r3, #15
 1008 0068 1693     		str	r3, [sp, #88]
 213:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1009              		.loc 1 213 3 is_stmt 1 view .LVU302
 213:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1010              		.loc 1 213 34 is_stmt 0 view .LVU303
 1011 006a 0323     		movs	r3, #3
 1012 006c 1793     		str	r3, [sp, #92]
 214:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1013              		.loc 1 214 3 is_stmt 1 view .LVU304
 214:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1014              		.loc 1 214 35 is_stmt 0 view .LVU305
 1015 006e 1894     		str	r4, [sp, #96]
 215:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccdfat9u.s 			page 33


 1016              		.loc 1 215 3 is_stmt 1 view .LVU306
 215:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1017              		.loc 1 215 36 is_stmt 0 view .LVU307
 1018 0070 1994     		str	r4, [sp, #100]
 216:Src/main.c    **** 
 1019              		.loc 1 216 3 is_stmt 1 view .LVU308
 216:Src/main.c    **** 
 1020              		.loc 1 216 36 is_stmt 0 view .LVU309
 1021 0072 1A94     		str	r4, [sp, #104]
 218:Src/main.c    ****   {
 1022              		.loc 1 218 3 is_stmt 1 view .LVU310
 218:Src/main.c    ****   {
 1023              		.loc 1 218 7 is_stmt 0 view .LVU311
 1024 0074 2946     		mov	r1, r5
 1025 0076 16A8     		add	r0, sp, #88
 1026 0078 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1027              	.LVL35:
 222:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 1028              		.loc 1 222 3 is_stmt 1 view .LVU312
 222:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 1029              		.loc 1 222 38 is_stmt 0 view .LVU313
 1030 007c 44F20203 		movw	r3, #16386
 1031 0080 0193     		str	r3, [sp, #4]
 223:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 1032              		.loc 1 223 3 is_stmt 1 view .LVU314
 223:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 1033              		.loc 1 223 38 is_stmt 0 view .LVU315
 1034 0082 0A94     		str	r4, [sp, #40]
 224:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 1035              		.loc 1 224 3 is_stmt 1 view .LVU316
 224:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 1036              		.loc 1 224 35 is_stmt 0 view .LVU317
 1037 0084 4FF08053 		mov	r3, #268435456
 1038 0088 1393     		str	r3, [sp, #76]
 225:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 1039              		.loc 1 225 3 is_stmt 1 view .LVU318
 225:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 1040              		.loc 1 225 39 is_stmt 0 view .LVU319
 1041 008a 0295     		str	r5, [sp, #8]
 226:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 1042              		.loc 1 226 3 is_stmt 1 view .LVU320
 226:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 1043              		.loc 1 226 34 is_stmt 0 view .LVU321
 1044 008c 0395     		str	r5, [sp, #12]
 227:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 1045              		.loc 1 227 3 is_stmt 1 view .LVU322
 227:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 1046              		.loc 1 227 34 is_stmt 0 view .LVU323
 1047 008e CDF81080 		str	r8, [sp, #16]
 228:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 1048              		.loc 1 228 3 is_stmt 1 view .LVU324
 228:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 1049              		.loc 1 228 34 is_stmt 0 view .LVU325
 1050 0092 0597     		str	r7, [sp, #20]
 229:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 1051              		.loc 1 229 3 is_stmt 1 view .LVU326
 229:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
ARM GAS  /tmp/ccdfat9u.s 			page 34


 1052              		.loc 1 229 34 is_stmt 0 view .LVU327
 1053 0094 0696     		str	r6, [sp, #24]
 230:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 1054              		.loc 1 230 3 is_stmt 1 view .LVU328
 230:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 1055              		.loc 1 230 34 is_stmt 0 view .LVU329
 1056 0096 0796     		str	r6, [sp, #28]
 231:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1057              		.loc 1 231 3 is_stmt 1 view .LVU330
 231:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1058              		.loc 1 231 41 is_stmt 0 view .LVU331
 1059 0098 4FF08073 		mov	r3, #16777216
 1060 009c 0893     		str	r3, [sp, #32]
 232:Src/main.c    ****   {
 1061              		.loc 1 232 3 is_stmt 1 view .LVU332
 232:Src/main.c    ****   {
 1062              		.loc 1 232 7 is_stmt 0 view .LVU333
 1063 009e 01A8     		add	r0, sp, #4
 1064 00a0 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1065              	.LVL36:
 238:Src/main.c    ****   {
 1066              		.loc 1 238 3 is_stmt 1 view .LVU334
 238:Src/main.c    ****   {
 1067              		.loc 1 238 7 is_stmt 0 view .LVU335
 1068 00a4 4FF40070 		mov	r0, #512
 1069 00a8 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 1070              	.LVL37:
 244:Src/main.c    **** }
 1071              		.loc 1 244 3 is_stmt 1 view .LVU336
 1072 00ac FFF7FEFF 		bl	HAL_RCCEx_EnableMSIPLLMode
 1073              	.LVL38:
 245:Src/main.c    **** 
 1074              		.loc 1 245 1 is_stmt 0 view .LVU337
 1075 00b0 2CB0     		add	sp, sp, #176
 1076              	.LCFI24:
 1077              		.cfi_def_cfa_offset 24
 1078              		@ sp needed
 1079 00b2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1080              	.L40:
 1081 00b6 00BF     		.align	2
 1082              	.L39:
 1083 00b8 00100240 		.word	1073876992
 1084              		.cfi_endproc
 1085              	.LFE290:
 1087              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1088              		.align	2
 1089              	.LC0:
 1090 0000 53657474 		.ascii	"Setting effects....\000"
 1090      696E6720 
 1090      65666665 
 1090      6374732E 
 1090      2E2E2E00 
 1091              		.align	2
 1092              	.LC1:
 1093 0014 53657474 		.ascii	"Setting up HAL....\000"
 1093      696E6720 
 1093      75702048 
ARM GAS  /tmp/ccdfat9u.s 			page 35


 1093      414C2E2E 
 1093      2E2E00
 1094 0027 00       		.align	2
 1095              	.LC2:
 1096 0028 28414443 		.ascii	"(ADC IT)\000"
 1096      20495429 
 1096      00
 1097 0031 000000   		.align	2
 1098              	.LC3:
 1099 0034 2854494D 		.ascii	"(TIM IT)\000"
 1099      20495429 
 1099      00
 1100 003d 000000   		.align	2
 1101              	.LC4:
 1102 0040 646F6E65 		.ascii	"done.\000"
 1102      2E00
 1103              		.global	__aeabi_f2d
 1104              		.global	__aeabi_dmul
 1105              		.global	__aeabi_dsub
 1106              		.global	__aeabi_d2f
 1107              		.global	__aeabi_i2d
 1108              		.global	__aeabi_d2iz
 1109              		.section	.text.main,"ax",%progbits
 1110              		.align	1
 1111              		.global	main
 1112              		.syntax unified
 1113              		.thumb
 1114              		.thumb_func
 1115              		.fpu fpv4-sp-d16
 1117              	main:
 1118              	.LFB289:
  92:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1119              		.loc 1 92 1 is_stmt 1 view -0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 0
 1122              		@ frame_needed = 0, uses_anonymous_args = 0
 1123 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1124              	.LCFI25:
 1125              		.cfi_def_cfa_offset 24
 1126              		.cfi_offset 3, -24
 1127              		.cfi_offset 4, -20
 1128              		.cfi_offset 5, -16
 1129              		.cfi_offset 6, -12
 1130              		.cfi_offset 7, -8
 1131              		.cfi_offset 14, -4
  99:Src/main.c    **** 
 1132              		.loc 1 99 3 view .LVU339
 1133 0002 FFF7FEFF 		bl	HAL_Init
 1134              	.LVL39:
 105:Src/main.c    **** 
 1135              		.loc 1 105 3 view .LVU340
 1136 0006 FFF7FEFF 		bl	SystemClock_Config
 1137              	.LVL40:
 112:Src/main.c    ****   MX_DMA_Init();
 1138              		.loc 1 112 3 view .LVU341
 1139 000a FFF7FEFF 		bl	MX_GPIO_Init
 1140              	.LVL41:
ARM GAS  /tmp/ccdfat9u.s 			page 36


 113:Src/main.c    ****   MX_ADC1_Init();
 1141              		.loc 1 113 3 view .LVU342
 1142 000e FFF7FEFF 		bl	MX_DMA_Init
 1143              	.LVL42:
 114:Src/main.c    ****   MX_DAC1_Init();
 1144              		.loc 1 114 3 view .LVU343
 1145 0012 FFF7FEFF 		bl	MX_ADC1_Init
 1146              	.LVL43:
 115:Src/main.c    ****   MX_USART2_UART_Init();
 1147              		.loc 1 115 3 view .LVU344
 1148 0016 FFF7FEFF 		bl	MX_DAC1_Init
 1149              	.LVL44:
 116:Src/main.c    ****   MX_TIM2_Init();
 1150              		.loc 1 116 3 view .LVU345
 1151 001a FFF7FEFF 		bl	MX_USART2_UART_Init
 1152              	.LVL45:
 117:Src/main.c    ****   MX_TIM15_Init();
 1153              		.loc 1 117 3 view .LVU346
 1154 001e FFF7FEFF 		bl	MX_TIM2_Init
 1155              	.LVL46:
 118:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1156              		.loc 1 118 3 view .LVU347
 1157 0022 FFF7FEFF 		bl	MX_TIM15_Init
 1158              	.LVL47:
 120:Src/main.c    ****   default_init_reverb(&r);
 1159              		.loc 1 120 3 view .LVU348
 1160 0026 584C     		ldr	r4, .L44+8
 1161 0028 5849     		ldr	r1, .L44+12
 1162 002a 2046     		mov	r0, r4
 1163 002c FFF7FEFF 		bl	debugPrintln
 1164              	.LVL48:
 121:Src/main.c    ****   default_init_antinoise(&a);
 1165              		.loc 1 121 3 view .LVU349
 1166 0030 5748     		ldr	r0, .L44+16
 1167 0032 FFF7FEFF 		bl	default_init_reverb
 1168              	.LVL49:
 122:Src/main.c    ****   default_init_chorus(&c);
 1169              		.loc 1 122 3 view .LVU350
 1170 0036 5748     		ldr	r0, .L44+20
 1171 0038 FFF7FEFF 		bl	default_init_antinoise
 1172              	.LVL50:
 123:Src/main.c    ****   debugPrintln(&huart2, (char*) "Setting up HAL....");
 1173              		.loc 1 123 3 view .LVU351
 1174 003c 5648     		ldr	r0, .L44+24
 1175 003e FFF7FEFF 		bl	default_init_chorus
 1176              	.LVL51:
 124:Src/main.c    ****   HAL_DAC_Start(&hdac1, DAC_CHANNEL_1);
 1177              		.loc 1 124 3 view .LVU352
 1178 0042 5649     		ldr	r1, .L44+28
 1179 0044 2046     		mov	r0, r4
 1180 0046 FFF7FEFF 		bl	debugPrintln
 1181              	.LVL52:
 125:Src/main.c    ****   debugPrintln(&huart2, (char*) "(ADC IT)");
 1182              		.loc 1 125 3 view .LVU353
 1183 004a 0021     		movs	r1, #0
 1184 004c 5448     		ldr	r0, .L44+32
 1185 004e FFF7FEFF 		bl	HAL_DAC_Start
ARM GAS  /tmp/ccdfat9u.s 			page 37


 1186              	.LVL53:
 126:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&ADC_BUF, ADC_BUF_LEN);
 1187              		.loc 1 126 3 view .LVU354
 1188 0052 5449     		ldr	r1, .L44+36
 1189 0054 2046     		mov	r0, r4
 1190 0056 FFF7FEFF 		bl	debugPrintln
 1191              	.LVL54:
 127:Src/main.c    ****   //HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED);
 1192              		.loc 1 127 3 view .LVU355
 1193 005a 0622     		movs	r2, #6
 1194 005c 5249     		ldr	r1, .L44+40
 1195 005e 5348     		ldr	r0, .L44+44
 1196 0060 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1197              	.LVL55:
 130:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 1198              		.loc 1 130 3 view .LVU356
 1199 0064 5249     		ldr	r1, .L44+48
 1200 0066 2046     		mov	r0, r4
 1201 0068 FFF7FEFF 		bl	debugPrintln
 1202              	.LVL56:
 131:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim15);
 1203              		.loc 1 131 3 view .LVU357
 1204 006c 5148     		ldr	r0, .L44+52
 1205 006e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1206              	.LVL57:
 132:Src/main.c    ****   debugPrintln(&huart2, (char*) "done.");
 1207              		.loc 1 132 3 view .LVU358
 1208 0072 5148     		ldr	r0, .L44+56
 1209 0074 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1210              	.LVL58:
 133:Src/main.c    ****   /* USER CODE END 2 */
 1211              		.loc 1 133 3 view .LVU359
 1212 0078 5049     		ldr	r1, .L44+60
 1213 007a 2046     		mov	r0, r4
 1214 007c FFF7FEFF 		bl	debugPrintln
 1215              	.LVL59:
 1216              	.L42:
 139:Src/main.c    ****   {
 1217              		.loc 1 139 3 discriminator 1 view .LVU360
 1218              	.LBB6:
 142:Src/main.c    ****     uint16_t POT2 = ADC_BUF[2]; //A6
 1219              		.loc 1 142 5 discriminator 1 view .LVU361
 142:Src/main.c    ****     uint16_t POT2 = ADC_BUF[2]; //A6
 1220              		.loc 1 142 14 is_stmt 0 discriminator 1 view .LVU362
 1221 0080 494A     		ldr	r2, .L44+40
 1222 0082 5388     		ldrh	r3, [r2, #2]
 1223 0084 9BB2     		uxth	r3, r3
 1224 0086 07EE903A 		vmov	s15, r3	@ int
 1225              	.LVL60:
 143:Src/main.c    ****     uint16_t POT3 = ADC_BUF[4]; //D3
 1226              		.loc 1 143 5 is_stmt 1 discriminator 1 view .LVU363
 143:Src/main.c    ****     uint16_t POT3 = ADC_BUF[4]; //D3
 1227              		.loc 1 143 14 is_stmt 0 discriminator 1 view .LVU364
 1228 008a 9388     		ldrh	r3, [r2, #4]
 1229 008c 9EB2     		uxth	r6, r3
 1230              	.LVL61:
 144:Src/main.c    ****     uint16_t POT4 = ADC_BUF[5]; //D6
ARM GAS  /tmp/ccdfat9u.s 			page 38


 1231              		.loc 1 144 5 is_stmt 1 discriminator 1 view .LVU365
 144:Src/main.c    ****     uint16_t POT4 = ADC_BUF[5]; //D6
 1232              		.loc 1 144 14 is_stmt 0 discriminator 1 view .LVU366
 1233 008e 1589     		ldrh	r5, [r2, #8]
 1234 0090 ADB2     		uxth	r5, r5
 1235              	.LVL62:
 145:Src/main.c    **** 
 1236              		.loc 1 145 5 is_stmt 1 discriminator 1 view .LVU367
 145:Src/main.c    **** 
 1237              		.loc 1 145 14 is_stmt 0 discriminator 1 view .LVU368
 1238 0092 5489     		ldrh	r4, [r2, #10]
 1239 0094 A4B2     		uxth	r4, r4
 1240              	.LVL63:
 148:Src/main.c    ****     //c.wet = ((double)POT2/4095);
 1241              		.loc 1 148 5 is_stmt 1 discriminator 1 view .LVU369
 148:Src/main.c    ****     //c.wet = ((double)POT2/4095);
 1242              		.loc 1 148 21 is_stmt 0 discriminator 1 view .LVU370
 1243 0096 F8EE677A 		vcvt.f32.u32	s15, s15
 1244              	.LVL64:
 148:Src/main.c    ****     //c.wet = ((double)POT2/4095);
 1245              		.loc 1 148 16 discriminator 1 view .LVU371
 1246 009a 9FED497A 		vldr.32	s14, .L44+64
 1247 009e C7EE877A 		vdiv.f32	s15, s15, s14
 1248 00a2 17EE900A 		vmov	r0, s15
 1249 00a6 FFF7FEFF 		bl	__aeabi_f2d
 1250              	.LVL65:
 1251 00aa 41EC100B 		vmov	d0, r0, r1
 1252 00ae FFF7FEFF 		bl	atan
 1253              	.LVL66:
 1254 00b2 51EC100B 		vmov	r0, r1, d0
 148:Src/main.c    ****     //c.wet = ((double)POT2/4095);
 1255              		.loc 1 148 36 discriminator 1 view .LVU372
 1256 00b6 32A3     		adr	r3, .L44
 1257 00b8 D3E90023 		ldrd	r2, [r3]
 1258 00bc FFF7FEFF 		bl	__aeabi_dmul
 1259              	.LVL67:
 1260 00c0 0246     		mov	r2, r0
 1261 00c2 0B46     		mov	r3, r1
 148:Src/main.c    ****     //c.wet = ((double)POT2/4095);
 1262              		.loc 1 148 14 discriminator 1 view .LVU373
 1263 00c4 0020     		movs	r0, #0
 1264 00c6 3F49     		ldr	r1, .L44+68
 1265 00c8 FFF7FEFF 		bl	__aeabi_dsub
 1266              	.LVL68:
 1267 00cc FFF7FEFF 		bl	__aeabi_d2f
 1268              	.LVL69:
 148:Src/main.c    ****     //c.wet = ((double)POT2/4095);
 1269              		.loc 1 148 11 discriminator 1 view .LVU374
 1270 00d0 314F     		ldr	r7, .L44+24
 1271 00d2 F861     		str	r0, [r7, #28]	@ float
 150:Src/main.c    ****     r.fade = ((float)POT3/4095)*0.5;
 1272              		.loc 1 150 5 is_stmt 1 discriminator 1 view .LVU375
 150:Src/main.c    ****     r.fade = ((float)POT3/4095)*0.5;
 1273              		.loc 1 150 23 is_stmt 0 discriminator 1 view .LVU376
 1274 00d4 07EE906A 		vmov	s15, r6	@ int
 1275 00d8 F8EE677A 		vcvt.f32.u32	s15, s15
 150:Src/main.c    ****     r.fade = ((float)POT3/4095)*0.5;
ARM GAS  /tmp/ccdfat9u.s 			page 39


 1276              		.loc 1 150 18 discriminator 1 view .LVU377
 1277 00dc 9FED3A7A 		vldr.32	s14, .L44+72
 1278 00e0 C7EE877A 		vdiv.f32	s15, s15, s14
 1279 00e4 17EE900A 		vmov	r0, s15
 1280 00e8 FFF7FEFF 		bl	__aeabi_f2d
 1281              	.LVL70:
 1282 00ec 41EC100B 		vmov	d0, r0, r1
 1283 00f0 FFF7FEFF 		bl	atan
 1284              	.LVL71:
 1285 00f4 51EC100B 		vmov	r0, r1, d0
 150:Src/main.c    ****     r.fade = ((float)POT3/4095)*0.5;
 1286              		.loc 1 150 39 discriminator 1 view .LVU378
 1287 00f8 21A3     		adr	r3, .L44
 1288 00fa D3E90023 		ldrd	r2, [r3]
 1289 00fe FFF7FEFF 		bl	__aeabi_dmul
 1290              	.LVL72:
 150:Src/main.c    ****     r.fade = ((float)POT3/4095)*0.5;
 1291              		.loc 1 150 46 discriminator 1 view .LVU379
 1292 0102 0022     		movs	r2, #0
 1293 0104 314B     		ldr	r3, .L44+76
 1294 0106 FFF7FEFF 		bl	__aeabi_dmul
 1295              	.LVL73:
 1296 010a 0246     		mov	r2, r0
 1297 010c 0B46     		mov	r3, r1
 150:Src/main.c    ****     r.fade = ((float)POT3/4095)*0.5;
 1298              		.loc 1 150 16 discriminator 1 view .LVU380
 1299 010e 0020     		movs	r0, #0
 1300 0110 2E49     		ldr	r1, .L44+76
 1301 0112 FFF7FEFF 		bl	__aeabi_dsub
 1302              	.LVL74:
 1303 0116 FFF7FEFF 		bl	__aeabi_d2f
 1304              	.LVL75:
 150:Src/main.c    ****     r.fade = ((float)POT3/4095)*0.5;
 1305              		.loc 1 150 12 discriminator 1 view .LVU381
 1306 011a 7862     		str	r0, [r7, #36]	@ float
 151:Src/main.c    ****     int rawBuff = (((float)POT4/4095)*r.maxBufferSize);
 1307              		.loc 1 151 5 is_stmt 1 discriminator 1 view .LVU382
 151:Src/main.c    ****     int rawBuff = (((float)POT4/4095)*r.maxBufferSize);
 1308              		.loc 1 151 15 is_stmt 0 discriminator 1 view .LVU383
 1309 011c 07EE905A 		vmov	s15, r5	@ int
 1310 0120 B8EE677A 		vcvt.f32.u32	s14, s15
 151:Src/main.c    ****     int rawBuff = (((float)POT4/4095)*r.maxBufferSize);
 1311              		.loc 1 151 26 discriminator 1 view .LVU384
 1312 0124 DFED2A6A 		vldr.32	s13, .L44+80
 1313 0128 C7EE267A 		vdiv.f32	s15, s14, s13
 151:Src/main.c    ****     int rawBuff = (((float)POT4/4095)*r.maxBufferSize);
 1314              		.loc 1 151 12 discriminator 1 view .LVU385
 1315 012c 184D     		ldr	r5, .L44+16
 1316              	.LVL76:
 151:Src/main.c    ****     int rawBuff = (((float)POT4/4095)*r.maxBufferSize);
 1317              		.loc 1 151 12 discriminator 1 view .LVU386
 1318 012e B6EE007A 		vmov.f32	s14, #5.0e-1
 1319 0132 67EE877A 		vmul.f32	s15, s15, s14
 1320 0136 C5ED037A 		vstr.32	s15, [r5, #12]
 152:Src/main.c    ****     rawBuff = (floor(rawBuff / 100) * 100);
 1321              		.loc 1 152 5 is_stmt 1 discriminator 1 view .LVU387
 152:Src/main.c    ****     rawBuff = (floor(rawBuff / 100) * 100);
ARM GAS  /tmp/ccdfat9u.s 			page 40


 1322              		.loc 1 152 21 is_stmt 0 discriminator 1 view .LVU388
 1323 013a 07EE904A 		vmov	s15, r4	@ int
 1324 013e B8EE677A 		vcvt.f32.u32	s14, s15
 152:Src/main.c    ****     rawBuff = (floor(rawBuff / 100) * 100);
 1325              		.loc 1 152 32 discriminator 1 view .LVU389
 1326 0142 87EE266A 		vdiv.f32	s12, s14, s13
 152:Src/main.c    ****     rawBuff = (floor(rawBuff / 100) * 100);
 1327              		.loc 1 152 38 discriminator 1 view .LVU390
 1328 0146 D5ED047A 		vldr.32	s15, [r5, #16]	@ int
 1329 014a F8EEE77A 		vcvt.f32.s32	s15, s15
 1330 014e 67EE867A 		vmul.f32	s15, s15, s12
 152:Src/main.c    ****     rawBuff = (floor(rawBuff / 100) * 100);
 1331              		.loc 1 152 9 discriminator 1 view .LVU391
 1332 0152 FDEEE77A 		vcvt.s32.f32	s15, s15
 1333 0156 17EE900A 		vmov	r0, s15	@ int
 1334              	.LVL77:
 153:Src/main.c    ****     r.bufferSize = rawBuff+1;
 1335              		.loc 1 153 5 is_stmt 1 discriminator 1 view .LVU392
 153:Src/main.c    ****     r.bufferSize = rawBuff+1;
 1336              		.loc 1 153 30 is_stmt 0 discriminator 1 view .LVU393
 1337 015a 1E4B     		ldr	r3, .L44+84
 1338 015c 83FB0023 		smull	r2, r3, r3, r0
 1339 0160 C017     		asrs	r0, r0, #31
 1340              	.LVL78:
 153:Src/main.c    ****     r.bufferSize = rawBuff+1;
 1341              		.loc 1 153 16 discriminator 1 view .LVU394
 1342 0162 C0EB6310 		rsb	r0, r0, r3, asr #5
 1343 0166 FFF7FEFF 		bl	__aeabi_i2d
 1344              	.LVL79:
 153:Src/main.c    ****     r.bufferSize = rawBuff+1;
 1345              		.loc 1 153 37 discriminator 1 view .LVU395
 1346 016a 0022     		movs	r2, #0
 1347 016c 1A4B     		ldr	r3, .L44+88
 1348 016e FFF7FEFF 		bl	__aeabi_dmul
 1349              	.LVL80:
 153:Src/main.c    ****     r.bufferSize = rawBuff+1;
 1350              		.loc 1 153 13 discriminator 1 view .LVU396
 1351 0172 FFF7FEFF 		bl	__aeabi_d2iz
 1352              	.LVL81:
 154:Src/main.c    **** 
 1353              		.loc 1 154 5 is_stmt 1 discriminator 1 view .LVU397
 154:Src/main.c    **** 
 1354              		.loc 1 154 27 is_stmt 0 discriminator 1 view .LVU398
 1355 0176 0130     		adds	r0, r0, #1
 1356              	.LVL82:
 154:Src/main.c    **** 
 1357              		.loc 1 154 18 discriminator 1 view .LVU399
 1358 0178 2860     		str	r0, [r5]
 156:Src/main.c    ****     //sprintf(buf, "ADC: %f", c.velocity);
 1359              		.loc 1 156 5 is_stmt 1 discriminator 1 view .LVU400
 1360              	.LBE6:
 139:Src/main.c    ****   {
 1361              		.loc 1 139 9 discriminator 1 view .LVU401
 1362 017a 81E7     		b	.L42
 1363              	.L45:
 1364 017c AFF30080 		.align	3
 1365              	.L44:
ARM GAS  /tmp/ccdfat9u.s 			page 41


 1366 0180 83C8C96D 		.word	1841940611
 1367 0184 305FE43F 		.word	1071931184
 1368 0188 00000000 		.word	huart2
 1369 018c 00000000 		.word	.LC0
 1370 0190 00000000 		.word	r
 1371 0194 00000000 		.word	a
 1372 0198 00000000 		.word	c
 1373 019c 14000000 		.word	.LC1
 1374 01a0 00000000 		.word	hdac1
 1375 01a4 28000000 		.word	.LC2
 1376 01a8 00000000 		.word	ADC_BUF
 1377 01ac 00000000 		.word	hadc1
 1378 01b0 34000000 		.word	.LC3
 1379 01b4 00000000 		.word	htim2
 1380 01b8 00000000 		.word	htim15
 1381 01bc 40000000 		.word	.LC4
 1382 01c0 00004842 		.word	1112014848
 1383 01c4 0000F03F 		.word	1072693248
 1384 01c8 00007A43 		.word	1132068864
 1385 01cc 00002440 		.word	1076101120
 1386 01d0 00F07F45 		.word	1166012416
 1387 01d4 1F85EB51 		.word	1374389535
 1388 01d8 00005940 		.word	1079574528
 1389              		.cfi_endproc
 1390              	.LFE289:
 1392              		.section	.text.Error_Handler,"ax",%progbits
 1393              		.align	1
 1394              		.global	Error_Handler
 1395              		.syntax unified
 1396              		.thumb
 1397              		.thumb_func
 1398              		.fpu fpv4-sp-d16
 1400              	Error_Handler:
 1401              	.LFB298:
 566:Src/main.c    **** 
 567:Src/main.c    **** /* USER CODE BEGIN 4 */
 568:Src/main.c    **** 
 569:Src/main.c    **** /* USER CODE END 4 */
 570:Src/main.c    **** 
 571:Src/main.c    **** /**
 572:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 573:Src/main.c    ****   * @retval None
 574:Src/main.c    ****   */
 575:Src/main.c    **** void Error_Handler(void)
 576:Src/main.c    **** {
 1402              		.loc 1 576 1 view -0
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 0
 1405              		@ frame_needed = 0, uses_anonymous_args = 0
 1406              		@ link register save eliminated.
 577:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 578:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 579:Src/main.c    **** 
 580:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 581:Src/main.c    **** }
 1407              		.loc 1 581 1 view .LVU403
 1408 0000 7047     		bx	lr
ARM GAS  /tmp/ccdfat9u.s 			page 42


 1409              		.cfi_endproc
 1410              	.LFE298:
 1412              		.comm	htim15,64,4
 1413              		.comm	htim2,64,4
 1414              		.comm	hdma_adc1,72,4
 1415              		.comm	a,16,4
 1416              		.comm	c,40,4
 1417              		.comm	od,8,4
 1418              		.comm	t,2,4
 1419              		.comm	f,4,4
 1420              		.comm	o,20,4
 1421              		.comm	r,20,4
 1422              		.comm	huart2,128,4
 1423              		.comm	hdac1,20,4
 1424              		.comm	hadc1,100,4
 1425              		.comm	ADC_BUF,12,4
 1426              		.comm	value_dac,4,4
 1427              		.comm	trig,4,4
 1428              		.comm	value_adc,4,4
 1429              		.text
 1430              	.Letext0:
 1431              		.file 2 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_typ
 1432              		.file 3 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1433              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1434              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 1435              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 1436              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 1437              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1438              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 1439              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 1440              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 1441              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 1442              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 1443              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dac.h"
 1444              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 1445              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 1446              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 1447              		.file 18 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 1448              		.file 19 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/lock.h"
 1449              		.file 20 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_types.h"
 1450              		.file 21 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/lib/gcc/arm-none-eabi/9.2.1/include/stdde
 1451              		.file 22 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/reent.h"
 1452              		.file 23 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/stdlib.h"
 1453              		.file 24 "Inc/effects.h"
 1454              		.file 25 "Inc/main.h"
 1455              		.file 26 "<built-in>"
 1456              		.file 27 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 1457              		.file 28 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 1458              		.file 29 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 1459              		.file 30 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 1460              		.file 31 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/string.h"
ARM GAS  /tmp/ccdfat9u.s 			page 43


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccdfat9u.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccdfat9u.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccdfat9u.s:155    .text.MX_GPIO_Init:0000000000000090 $d
     /tmp/ccdfat9u.s:161    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccdfat9u.s:167    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccdfat9u.s:215    .text.MX_DMA_Init:0000000000000030 $d
     /tmp/ccdfat9u.s:220    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccdfat9u.s:226    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccdfat9u.s:425    .text.MX_ADC1_Init:00000000000000d0 $d
                            *COM*:0000000000000064 hadc1
     /tmp/ccdfat9u.s:436    .text.MX_DAC1_Init:0000000000000000 $t
     /tmp/ccdfat9u.s:442    .text.MX_DAC1_Init:0000000000000000 MX_DAC1_Init
     /tmp/ccdfat9u.s:504    .text.MX_DAC1_Init:0000000000000034 $d
                            *COM*:0000000000000014 hdac1
     /tmp/ccdfat9u.s:510    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccdfat9u.s:516    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccdfat9u.s:571    .text.MX_USART2_UART_Init:0000000000000028 $d
                            *COM*:0000000000000080 huart2
     /tmp/ccdfat9u.s:577    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccdfat9u.s:583    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccdfat9u.s:668    .text.MX_TIM2_Init:0000000000000050 $d
                            *COM*:0000000000000040 htim2
     /tmp/ccdfat9u.s:673    .text.MX_TIM15_Init:0000000000000000 $t
     /tmp/ccdfat9u.s:679    .text.MX_TIM15_Init:0000000000000000 MX_TIM15_Init
     /tmp/ccdfat9u.s:767    .text.MX_TIM15_Init:0000000000000050 $d
                            *COM*:0000000000000040 htim15
     /tmp/ccdfat9u.s:773    .text.debugPrintln:0000000000000000 $t
     /tmp/ccdfat9u.s:780    .text.debugPrintln:0000000000000000 debugPrintln
     /tmp/ccdfat9u.s:835    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccdfat9u.s:842    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccdfat9u.s:863    .text.HAL_ADC_ConvHalfCpltCallback:000000000000000c $d
                            *COM*:000000000000000c ADC_BUF
                            *COM*:0000000000000004 value_adc
     /tmp/ccdfat9u.s:869    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccdfat9u.s:876    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccdfat9u.s:897    .text.HAL_ADC_ConvCpltCallback:000000000000000c $d
     /tmp/ccdfat9u.s:903    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccdfat9u.s:910    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccdfat9u.s:1083   .text.SystemClock_Config:00000000000000b8 $d
     /tmp/ccdfat9u.s:1088   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccdfat9u.s:1110   .text.main:0000000000000000 $t
     /tmp/ccdfat9u.s:1117   .text.main:0000000000000000 main
     /tmp/ccdfat9u.s:1366   .text.main:0000000000000180 $d
                            *COM*:0000000000000014 r
                            *COM*:0000000000000010 a
                            *COM*:0000000000000028 c
     /tmp/ccdfat9u.s:1393   .text.Error_Handler:0000000000000000 $t
     /tmp/ccdfat9u.s:1400   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000048 hdma_adc1
                            *COM*:0000000000000008 od
                            *COM*:0000000000000002 t
                            *COM*:0000000000000004 f
                            *COM*:0000000000000014 o
                            *COM*:0000000000000004 value_dac
                            *COM*:0000000000000004 trig
ARM GAS  /tmp/ccdfat9u.s 			page 44



UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_ADC_Init
HAL_ADC_ConfigChannel
memset
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_UART_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
strlen
HAL_UART_Transmit
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_RCCEx_EnableMSIPLLMode
__aeabi_f2d
__aeabi_dmul
__aeabi_dsub
__aeabi_d2f
__aeabi_i2d
__aeabi_d2iz
HAL_Init
default_init_reverb
default_init_antinoise
default_init_chorus
HAL_DAC_Start
HAL_ADC_Start_DMA
HAL_TIM_Base_Start_IT
atan
