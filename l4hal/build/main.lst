ARM GAS  /tmp/ccV0hvll.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB293:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include <string.h>
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
ARM GAS  /tmp/ccV0hvll.s 			page 2


  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** ADC_HandleTypeDef hadc1;
  45:Src/main.c    **** 
  46:Src/main.c    **** DAC_HandleTypeDef hdac1;
  47:Src/main.c    **** 
  48:Src/main.c    **** OPAMP_HandleTypeDef hopamp1;
  49:Src/main.c    **** 
  50:Src/main.c    **** UART_HandleTypeDef huart2;
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** /* USER CODE END PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** void SystemClock_Config(void);
  57:Src/main.c    **** static void MX_GPIO_Init(void);
  58:Src/main.c    **** static void MX_USART2_UART_Init(void);
  59:Src/main.c    **** static void MX_DAC1_Init(void);
  60:Src/main.c    **** static void MX_ADC1_Init(void);
  61:Src/main.c    **** static void MX_OPAMP1_Init(void);
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PFP */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** void debugPrintln(UART_HandleTypeDef *huart, char _out[]){
  69:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) _out, strlen(_out), 10);
  70:Src/main.c    ****  char newline[4] = "\r\n";
  71:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) newline, 2, 10);
  72:Src/main.c    **** }
  73:Src/main.c    **** /* USER CODE END 0 */
  74:Src/main.c    **** 
  75:Src/main.c    **** /**
  76:Src/main.c    ****   * @brief  The application entry point.
  77:Src/main.c    ****   * @retval int
  78:Src/main.c    ****   */
  79:Src/main.c    **** int main(void)
  80:Src/main.c    **** {
  81:Src/main.c    ****   /* USER CODE BEGIN 1 */
  82:Src/main.c    ****   /* USER CODE END 1 */
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Src/main.c    ****   HAL_Init();
  88:Src/main.c    **** 
ARM GAS  /tmp/ccV0hvll.s 			page 3


  89:Src/main.c    ****   /* USER CODE BEGIN Init */
  90:Src/main.c    ****   /* USER CODE END Init */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* Configure the system clock */
  93:Src/main.c    ****   SystemClock_Config();
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE END SysInit */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* Initialize all configured peripherals */
 100:Src/main.c    ****   MX_GPIO_Init();
 101:Src/main.c    ****   MX_USART2_UART_Init();
 102:Src/main.c    ****   MX_DAC1_Init();
 103:Src/main.c    ****   MX_ADC1_Init();
 104:Src/main.c    ****   MX_OPAMP1_Init();
 105:Src/main.c    ****   /* USER CODE BEGIN 2 */
 106:Src/main.c    ****   debugPrintln(&huart2, (char*) "Setting effects....");
 107:Src/main.c    ****   default_init_reverb(&r);
 108:Src/main.c    ****   default_init_octave(&o);
 109:Src/main.c    ****   debugPrintln(&huart2, (char*) "Setting up HAL....");
 110:Src/main.c    ****   HAL_DAC_Start(&hdac1, DAC_CHANNEL_1);
 111:Src/main.c    ****   HAL_OPAMP_Start(&hopamp1);
 112:Src/main.c    ****   //HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED);
 113:Src/main.c    ****   HAL_ADC_Start_IT(&hadc1);
 114:Src/main.c    ****   debugPrintln(&huart2, (char*) "done!");
 115:Src/main.c    ****   /* USER CODE END 2 */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Infinite loop */
 118:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 119:Src/main.c    ****   while (1)
 120:Src/main.c    ****   {
 121:Src/main.c    ****     /*adc_value = HAL_ADC_GetValue(&hadc1);
 122:Src/main.c    ****     char buf[32];
 123:Src/main.c    ****     sprintf(buf, "%d", adc_value);
 124:Src/main.c    ****     debugPrintln(&huart2,buf);*/
 125:Src/main.c    ****     //value_adc = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5);
 126:Src/main.c    ****     //HAL_DAC_SetValue(&hdac1, DAC_CHANNEL_1, DAC_ALIGN_12B_R, value_adc);
 127:Src/main.c    ****     /*debugPrintln(&huart2,"----");
 128:Src/main.c    ****     if (HAL_ADC_PollForConversion(&hadc1, 1000000) == HAL_OK) {
 129:Src/main.c    ****         {
 130:Src/main.c    ****             value_adc = HAL_ADC_GetValue(&hadc1);
 131:Src/main.c    ****             HAL_DAC_SetValue(&hdac1, DAC_CHANNEL_1, DAC_ALIGN_12B_R, trig);
 132:Src/main.c    ****             trig = (trig != 0) ? 0 : 4095;
 133:Src/main.c    ****             char buf[32];
 134:Src/main.c    ****             sprintf(buf, "%d", trig);
 135:Src/main.c    ****             debugPrintln(&huart2,buf);
 136:Src/main.c    ****             HAL_ADC_Stop(&hadc1);
 137:Src/main.c    ****             HAL_ADC_Start(&hadc1);
 138:Src/main.c    ****         }
 139:Src/main.c    ****     }*/
 140:Src/main.c    ****     //debugPrintln(&huart2,"...");
 141:Src/main.c    ****     /*HAL_DAC_SetValue(&hadc1,DAC_CHANNEL_1,DAC_ALIGN_12B_R,value_dac);
 142:Src/main.c    ****     if(value_dac<2047) {
 143:Src/main.c    ****       value_dac++;
 144:Src/main.c    ****     } else {
 145:Src/main.c    ****       value_dac = 0;
ARM GAS  /tmp/ccV0hvll.s 			page 4


 146:Src/main.c    ****     }
 147:Src/main.c    ****     HAL_Delay(10);*/
 148:Src/main.c    ****     /* USER CODE END WHILE */
 149:Src/main.c    **** 
 150:Src/main.c    ****     /* USER CODE BEGIN 3 */
 151:Src/main.c    ****   }
 152:Src/main.c    ****   /* USER CODE END 3 */
 153:Src/main.c    **** }
 154:Src/main.c    **** 
 155:Src/main.c    **** /**
 156:Src/main.c    ****   * @brief System Clock Configuration
 157:Src/main.c    ****   * @retval None
 158:Src/main.c    ****   */
 159:Src/main.c    **** void SystemClock_Config(void)
 160:Src/main.c    **** {
 161:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 162:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 163:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 164:Src/main.c    **** 
 165:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 166:Src/main.c    ****   */
 167:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 168:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 169:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 170:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 171:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 172:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 173:Src/main.c    ****   {
 174:Src/main.c    ****     Error_Handler();
 175:Src/main.c    ****   }
 176:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 177:Src/main.c    ****   */
 178:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 179:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 180:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 181:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 182:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 183:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 184:Src/main.c    **** 
 185:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 186:Src/main.c    ****   {
 187:Src/main.c    ****     Error_Handler();
 188:Src/main.c    ****   }
 189:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_ADC;
 190:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 191:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 192:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 193:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 194:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 195:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 196:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 197:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 198:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 199:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 200:Src/main.c    ****   {
 201:Src/main.c    ****     Error_Handler();
 202:Src/main.c    ****   }
ARM GAS  /tmp/ccV0hvll.s 			page 5


 203:Src/main.c    ****   /** Configure the main internal regulator output voltage
 204:Src/main.c    ****   */
 205:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 206:Src/main.c    ****   {
 207:Src/main.c    ****     Error_Handler();
 208:Src/main.c    ****   }
 209:Src/main.c    **** }
 210:Src/main.c    **** 
 211:Src/main.c    **** /**
 212:Src/main.c    ****   * @brief ADC1 Initialization Function
 213:Src/main.c    ****   * @param None
 214:Src/main.c    ****   * @retval None
 215:Src/main.c    ****   */
 216:Src/main.c    **** static void MX_ADC1_Init(void)
 217:Src/main.c    **** {
 218:Src/main.c    **** 
 219:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 220:Src/main.c    **** 
 221:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 222:Src/main.c    **** 
 223:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 224:Src/main.c    **** 
 225:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 226:Src/main.c    **** 
 227:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 228:Src/main.c    ****   /** Common config
 229:Src/main.c    ****   */
 230:Src/main.c    ****   hadc1.Instance = ADC1;
 231:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 232:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 233:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 234:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 235:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 236:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 237:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 238:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 239:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 240:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 241:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 242:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 243:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 244:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 245:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 246:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 247:Src/main.c    ****   {
 248:Src/main.c    ****     Error_Handler();
 249:Src/main.c    ****   }
 250:Src/main.c    ****   /** Configure Regular Channel
 251:Src/main.c    ****   */
 252:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_10;
 253:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 254:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 255:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 256:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 257:Src/main.c    ****   sConfig.Offset = 0;
 258:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 259:Src/main.c    ****   {
ARM GAS  /tmp/ccV0hvll.s 			page 6


 260:Src/main.c    ****     Error_Handler();
 261:Src/main.c    ****   }
 262:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 263:Src/main.c    ****   hadc1.Init.EOCSelection = EOC_SEQ_CONV;
 264:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 265:Src/main.c    ****   {
 266:Src/main.c    ****     Error_Handler();
 267:Src/main.c    ****   }
 268:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 269:Src/main.c    **** 
 270:Src/main.c    **** }
 271:Src/main.c    **** 
 272:Src/main.c    **** /**
 273:Src/main.c    ****   * @brief DAC1 Initialization Function
 274:Src/main.c    ****   * @param None
 275:Src/main.c    ****   * @retval None
 276:Src/main.c    ****   */
 277:Src/main.c    **** static void MX_DAC1_Init(void)
 278:Src/main.c    **** {
 279:Src/main.c    **** 
 280:Src/main.c    ****   /* USER CODE BEGIN DAC1_Init 0 */
 281:Src/main.c    **** 
 282:Src/main.c    ****   /* USER CODE END DAC1_Init 0 */
 283:Src/main.c    **** 
 284:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 285:Src/main.c    **** 
 286:Src/main.c    ****   /* USER CODE BEGIN DAC1_Init 1 */
 287:Src/main.c    **** 
 288:Src/main.c    ****   /* USER CODE END DAC1_Init 1 */
 289:Src/main.c    ****   /** DAC Initialization
 290:Src/main.c    ****   */
 291:Src/main.c    ****   hdac1.Instance = DAC1;
 292:Src/main.c    ****   if (HAL_DAC_Init(&hdac1) != HAL_OK)
 293:Src/main.c    ****   {
 294:Src/main.c    ****     Error_Handler();
 295:Src/main.c    ****   }
 296:Src/main.c    ****   /** DAC channel OUT1 config
 297:Src/main.c    ****   */
 298:Src/main.c    ****   sConfig.DAC_SampleAndHold = DAC_SAMPLEANDHOLD_DISABLE;
 299:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 300:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 301:Src/main.c    ****   sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
 302:Src/main.c    ****   sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 303:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 304:Src/main.c    ****   {
 305:Src/main.c    ****     Error_Handler();
 306:Src/main.c    ****   }
 307:Src/main.c    ****   /* USER CODE BEGIN DAC1_Init 2 */
 308:Src/main.c    **** 
 309:Src/main.c    ****   /* USER CODE END DAC1_Init 2 */
 310:Src/main.c    **** 
 311:Src/main.c    **** }
 312:Src/main.c    **** 
 313:Src/main.c    **** /**
 314:Src/main.c    ****   * @brief OPAMP1 Initialization Function
 315:Src/main.c    ****   * @param None
 316:Src/main.c    ****   * @retval None
ARM GAS  /tmp/ccV0hvll.s 			page 7


 317:Src/main.c    ****   */
 318:Src/main.c    **** static void MX_OPAMP1_Init(void)
 319:Src/main.c    **** {
 320:Src/main.c    **** 
 321:Src/main.c    ****   /* USER CODE BEGIN OPAMP1_Init 0 */
 322:Src/main.c    **** 
 323:Src/main.c    ****   /* USER CODE END OPAMP1_Init 0 */
 324:Src/main.c    **** 
 325:Src/main.c    ****   /* USER CODE BEGIN OPAMP1_Init 1 */
 326:Src/main.c    **** 
 327:Src/main.c    ****   /* USER CODE END OPAMP1_Init 1 */
 328:Src/main.c    ****   hopamp1.Instance = OPAMP1;
 329:Src/main.c    ****   hopamp1.Init.PowerSupplyRange = OPAMP_POWERSUPPLY_LOW;
 330:Src/main.c    ****   hopamp1.Init.Mode = OPAMP_PGA_MODE;
 331:Src/main.c    ****   hopamp1.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
 332:Src/main.c    ****   hopamp1.Init.InvertingInput = OPAMP_INVERTINGINPUT_CONNECT_NO;
 333:Src/main.c    ****   hopamp1.Init.PgaGain = OPAMP_PGA_GAIN_2;
 334:Src/main.c    ****   hopamp1.Init.PowerMode = OPAMP_POWERMODE_NORMAL;
 335:Src/main.c    ****   hopamp1.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
 336:Src/main.c    ****   if (HAL_OPAMP_Init(&hopamp1) != HAL_OK)
 337:Src/main.c    ****   {
 338:Src/main.c    ****     Error_Handler();
 339:Src/main.c    ****   }
 340:Src/main.c    ****   /* USER CODE BEGIN OPAMP1_Init 2 */
 341:Src/main.c    **** 
 342:Src/main.c    ****   /* USER CODE END OPAMP1_Init 2 */
 343:Src/main.c    **** 
 344:Src/main.c    **** }
 345:Src/main.c    **** 
 346:Src/main.c    **** /**
 347:Src/main.c    ****   * @brief USART2 Initialization Function
 348:Src/main.c    ****   * @param None
 349:Src/main.c    ****   * @retval None
 350:Src/main.c    ****   */
 351:Src/main.c    **** static void MX_USART2_UART_Init(void)
 352:Src/main.c    **** {
 353:Src/main.c    **** 
 354:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 355:Src/main.c    **** 
 356:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 357:Src/main.c    **** 
 358:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 359:Src/main.c    **** 
 360:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 361:Src/main.c    ****   huart2.Instance = USART2;
 362:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 363:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 364:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 365:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 366:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 367:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 368:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 369:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 370:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 371:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 372:Src/main.c    ****   {
 373:Src/main.c    ****     Error_Handler();
ARM GAS  /tmp/ccV0hvll.s 			page 8


 374:Src/main.c    ****   }
 375:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 376:Src/main.c    **** 
 377:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 378:Src/main.c    **** 
 379:Src/main.c    **** }
 380:Src/main.c    **** 
 381:Src/main.c    **** /**
 382:Src/main.c    ****   * @brief GPIO Initialization Function
 383:Src/main.c    ****   * @param None
 384:Src/main.c    ****   * @retval None
 385:Src/main.c    ****   */
 386:Src/main.c    **** static void MX_GPIO_Init(void)
 387:Src/main.c    **** {
  28              		.loc 1 387 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 388:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 388 3 view .LVU1
  42              		.loc 1 388 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 389:Src/main.c    **** 
 390:Src/main.c    ****   /* GPIO Ports Clock Enable */
 391:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 391 3 is_stmt 1 view .LVU3
  50              	.LBB2:
  51              		.loc 1 391 3 view .LVU4
  52              		.loc 1 391 3 view .LVU5
  53 0010 114B     		ldr	r3, .L3
  54 0012 DA6C     		ldr	r2, [r3, #76]
  55 0014 42F00102 		orr	r2, r2, #1
  56 0018 DA64     		str	r2, [r3, #76]
  57              		.loc 1 391 3 view .LVU6
  58 001a DA6C     		ldr	r2, [r3, #76]
  59 001c 02F00102 		and	r2, r2, #1
  60 0020 0192     		str	r2, [sp, #4]
  61              		.loc 1 391 3 view .LVU7
  62 0022 019A     		ldr	r2, [sp, #4]
  63              	.LBE2:
  64              		.loc 1 391 3 view .LVU8
 392:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 392 3 view .LVU9
ARM GAS  /tmp/ccV0hvll.s 			page 9


  66              	.LBB3:
  67              		.loc 1 392 3 view .LVU10
  68              		.loc 1 392 3 view .LVU11
  69 0024 DA6C     		ldr	r2, [r3, #76]
  70 0026 42F00202 		orr	r2, r2, #2
  71 002a DA64     		str	r2, [r3, #76]
  72              		.loc 1 392 3 view .LVU12
  73 002c DB6C     		ldr	r3, [r3, #76]
  74 002e 03F00203 		and	r3, r3, #2
  75 0032 0293     		str	r3, [sp, #8]
  76              		.loc 1 392 3 view .LVU13
  77 0034 029B     		ldr	r3, [sp, #8]
  78              	.LBE3:
  79              		.loc 1 392 3 view .LVU14
 393:Src/main.c    **** 
 394:Src/main.c    ****   /*Configure GPIO pin Output Level */
 395:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
  80              		.loc 1 395 3 view .LVU15
  81 0036 094D     		ldr	r5, .L3+4
  82 0038 2246     		mov	r2, r4
  83 003a 0121     		movs	r1, #1
  84 003c 2846     		mov	r0, r5
  85 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL0:
 396:Src/main.c    **** 
 397:Src/main.c    ****   /*Configure GPIO pin : PB0 */
 398:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
  87              		.loc 1 398 3 view .LVU16
  88              		.loc 1 398 23 is_stmt 0 view .LVU17
  89 0042 0123     		movs	r3, #1
  90 0044 0393     		str	r3, [sp, #12]
 399:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 399 3 is_stmt 1 view .LVU18
  92              		.loc 1 399 24 is_stmt 0 view .LVU19
  93 0046 0493     		str	r3, [sp, #16]
 400:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  94              		.loc 1 400 3 is_stmt 1 view .LVU20
  95              		.loc 1 400 24 is_stmt 0 view .LVU21
  96 0048 0594     		str	r4, [sp, #20]
 401:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  97              		.loc 1 401 3 is_stmt 1 view .LVU22
  98              		.loc 1 401 25 is_stmt 0 view .LVU23
  99 004a 0694     		str	r4, [sp, #24]
 402:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 100              		.loc 1 402 3 is_stmt 1 view .LVU24
 101 004c 03A9     		add	r1, sp, #12
 102 004e 2846     		mov	r0, r5
 103 0050 FFF7FEFF 		bl	HAL_GPIO_Init
 104              	.LVL1:
 403:Src/main.c    **** 
 404:Src/main.c    **** }
 105              		.loc 1 404 1 is_stmt 0 view .LVU25
 106 0054 09B0     		add	sp, sp, #36
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 12
 109              		@ sp needed
 110 0056 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccV0hvll.s 			page 10


 111              	.L4:
 112              		.align	2
 113              	.L3:
 114 0058 00100240 		.word	1073876992
 115 005c 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE293:
 119              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 120              		.align	1
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv4-sp-d16
 126              	MX_USART2_UART_Init:
 127              	.LFB292:
 352:Src/main.c    **** 
 128              		.loc 1 352 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132 0000 08B5     		push	{r3, lr}
 133              	.LCFI3:
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 3, -8
 136              		.cfi_offset 14, -4
 361:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 137              		.loc 1 361 3 view .LVU27
 361:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 138              		.loc 1 361 19 is_stmt 0 view .LVU28
 139 0002 0948     		ldr	r0, .L7
 140 0004 094B     		ldr	r3, .L7+4
 141 0006 0360     		str	r3, [r0]
 362:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 142              		.loc 1 362 3 is_stmt 1 view .LVU29
 362:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 143              		.loc 1 362 24 is_stmt 0 view .LVU30
 144 0008 4FF4E133 		mov	r3, #115200
 145 000c 4360     		str	r3, [r0, #4]
 363:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 146              		.loc 1 363 3 is_stmt 1 view .LVU31
 363:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 147              		.loc 1 363 26 is_stmt 0 view .LVU32
 148 000e 0023     		movs	r3, #0
 149 0010 8360     		str	r3, [r0, #8]
 364:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 150              		.loc 1 364 3 is_stmt 1 view .LVU33
 364:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 151              		.loc 1 364 24 is_stmt 0 view .LVU34
 152 0012 C360     		str	r3, [r0, #12]
 365:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 153              		.loc 1 365 3 is_stmt 1 view .LVU35
 365:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 154              		.loc 1 365 22 is_stmt 0 view .LVU36
 155 0014 0361     		str	r3, [r0, #16]
 366:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 156              		.loc 1 366 3 is_stmt 1 view .LVU37
 366:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  /tmp/ccV0hvll.s 			page 11


 157              		.loc 1 366 20 is_stmt 0 view .LVU38
 158 0016 0C22     		movs	r2, #12
 159 0018 4261     		str	r2, [r0, #20]
 367:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 160              		.loc 1 367 3 is_stmt 1 view .LVU39
 367:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 161              		.loc 1 367 25 is_stmt 0 view .LVU40
 162 001a 8361     		str	r3, [r0, #24]
 368:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 163              		.loc 1 368 3 is_stmt 1 view .LVU41
 368:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 164              		.loc 1 368 28 is_stmt 0 view .LVU42
 165 001c C361     		str	r3, [r0, #28]
 369:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 166              		.loc 1 369 3 is_stmt 1 view .LVU43
 369:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 167              		.loc 1 369 30 is_stmt 0 view .LVU44
 168 001e 0362     		str	r3, [r0, #32]
 370:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 169              		.loc 1 370 3 is_stmt 1 view .LVU45
 370:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 170              		.loc 1 370 38 is_stmt 0 view .LVU46
 171 0020 4362     		str	r3, [r0, #36]
 371:Src/main.c    ****   {
 172              		.loc 1 371 3 is_stmt 1 view .LVU47
 371:Src/main.c    ****   {
 173              		.loc 1 371 7 is_stmt 0 view .LVU48
 174 0022 FFF7FEFF 		bl	HAL_UART_Init
 175              	.LVL2:
 379:Src/main.c    **** 
 176              		.loc 1 379 1 view .LVU49
 177 0026 08BD     		pop	{r3, pc}
 178              	.L8:
 179              		.align	2
 180              	.L7:
 181 0028 00000000 		.word	huart2
 182 002c 00440040 		.word	1073759232
 183              		.cfi_endproc
 184              	.LFE292:
 186              		.section	.text.MX_DAC1_Init,"ax",%progbits
 187              		.align	1
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu fpv4-sp-d16
 193              	MX_DAC1_Init:
 194              	.LFB290:
 278:Src/main.c    **** 
 195              		.loc 1 278 1 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 40
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 10B5     		push	{r4, lr}
 200              	.LCFI4:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 4, -8
 203              		.cfi_offset 14, -4
ARM GAS  /tmp/ccV0hvll.s 			page 12


 204 0002 8AB0     		sub	sp, sp, #40
 205              	.LCFI5:
 206              		.cfi_def_cfa_offset 48
 284:Src/main.c    **** 
 207              		.loc 1 284 3 view .LVU51
 284:Src/main.c    **** 
 208              		.loc 1 284 26 is_stmt 0 view .LVU52
 209 0004 2422     		movs	r2, #36
 210 0006 0021     		movs	r1, #0
 211 0008 01A8     		add	r0, sp, #4
 212 000a FFF7FEFF 		bl	memset
 213              	.LVL3:
 291:Src/main.c    ****   if (HAL_DAC_Init(&hdac1) != HAL_OK)
 214              		.loc 1 291 3 is_stmt 1 view .LVU53
 291:Src/main.c    ****   if (HAL_DAC_Init(&hdac1) != HAL_OK)
 215              		.loc 1 291 18 is_stmt 0 view .LVU54
 216 000e 094C     		ldr	r4, .L11
 217 0010 094B     		ldr	r3, .L11+4
 218 0012 2360     		str	r3, [r4]
 292:Src/main.c    ****   {
 219              		.loc 1 292 3 is_stmt 1 view .LVU55
 292:Src/main.c    ****   {
 220              		.loc 1 292 7 is_stmt 0 view .LVU56
 221 0014 2046     		mov	r0, r4
 222 0016 FFF7FEFF 		bl	HAL_DAC_Init
 223              	.LVL4:
 298:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 224              		.loc 1 298 3 is_stmt 1 view .LVU57
 298:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 225              		.loc 1 298 29 is_stmt 0 view .LVU58
 226 001a 0022     		movs	r2, #0
 227 001c 0192     		str	r2, [sp, #4]
 299:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 228              		.loc 1 299 3 is_stmt 1 view .LVU59
 299:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 229              		.loc 1 299 23 is_stmt 0 view .LVU60
 230 001e 0292     		str	r2, [sp, #8]
 300:Src/main.c    ****   sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
 231              		.loc 1 300 3 is_stmt 1 view .LVU61
 300:Src/main.c    ****   sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
 232              		.loc 1 300 28 is_stmt 0 view .LVU62
 233 0020 0392     		str	r2, [sp, #12]
 301:Src/main.c    ****   sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 234              		.loc 1 301 3 is_stmt 1 view .LVU63
 301:Src/main.c    ****   sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 235              		.loc 1 301 39 is_stmt 0 view .LVU64
 236 0022 0492     		str	r2, [sp, #16]
 302:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 237              		.loc 1 302 3 is_stmt 1 view .LVU65
 302:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 238              		.loc 1 302 28 is_stmt 0 view .LVU66
 239 0024 0592     		str	r2, [sp, #20]
 303:Src/main.c    ****   {
 240              		.loc 1 303 3 is_stmt 1 view .LVU67
 303:Src/main.c    ****   {
 241              		.loc 1 303 7 is_stmt 0 view .LVU68
 242 0026 01A9     		add	r1, sp, #4
ARM GAS  /tmp/ccV0hvll.s 			page 13


 243 0028 2046     		mov	r0, r4
 244 002a FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 245              	.LVL5:
 311:Src/main.c    **** 
 246              		.loc 1 311 1 view .LVU69
 247 002e 0AB0     		add	sp, sp, #40
 248              	.LCFI6:
 249              		.cfi_def_cfa_offset 8
 250              		@ sp needed
 251 0030 10BD     		pop	{r4, pc}
 252              	.L12:
 253 0032 00BF     		.align	2
 254              	.L11:
 255 0034 00000000 		.word	hdac1
 256 0038 00740040 		.word	1073771520
 257              		.cfi_endproc
 258              	.LFE290:
 260              		.section	.text.MX_ADC1_Init,"ax",%progbits
 261              		.align	1
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	MX_ADC1_Init:
 268              	.LFB289:
 217:Src/main.c    **** 
 269              		.loc 1 217 1 is_stmt 1 view -0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 24
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273 0000 70B5     		push	{r4, r5, r6, lr}
 274              	.LCFI7:
 275              		.cfi_def_cfa_offset 16
 276              		.cfi_offset 4, -16
 277              		.cfi_offset 5, -12
 278              		.cfi_offset 6, -8
 279              		.cfi_offset 14, -4
 280 0002 86B0     		sub	sp, sp, #24
 281              	.LCFI8:
 282              		.cfi_def_cfa_offset 40
 223:Src/main.c    **** 
 283              		.loc 1 223 3 view .LVU71
 223:Src/main.c    **** 
 284              		.loc 1 223 26 is_stmt 0 view .LVU72
 285 0004 0025     		movs	r5, #0
 286 0006 0095     		str	r5, [sp]
 287 0008 0195     		str	r5, [sp, #4]
 288 000a 0295     		str	r5, [sp, #8]
 289 000c 0395     		str	r5, [sp, #12]
 290 000e 0495     		str	r5, [sp, #16]
 291 0010 0595     		str	r5, [sp, #20]
 230:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 292              		.loc 1 230 3 is_stmt 1 view .LVU73
 230:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 293              		.loc 1 230 18 is_stmt 0 view .LVU74
 294 0012 174C     		ldr	r4, .L15
 295 0014 174B     		ldr	r3, .L15+4
ARM GAS  /tmp/ccV0hvll.s 			page 14


 296 0016 2360     		str	r3, [r4]
 231:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 297              		.loc 1 231 3 is_stmt 1 view .LVU75
 231:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 298              		.loc 1 231 29 is_stmt 0 view .LVU76
 299 0018 6560     		str	r5, [r4, #4]
 232:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 300              		.loc 1 232 3 is_stmt 1 view .LVU77
 232:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 301              		.loc 1 232 25 is_stmt 0 view .LVU78
 302 001a A560     		str	r5, [r4, #8]
 233:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 303              		.loc 1 233 3 is_stmt 1 view .LVU79
 233:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 304              		.loc 1 233 24 is_stmt 0 view .LVU80
 305 001c E560     		str	r5, [r4, #12]
 234:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 306              		.loc 1 234 3 is_stmt 1 view .LVU81
 234:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 307              		.loc 1 234 27 is_stmt 0 view .LVU82
 308 001e 2561     		str	r5, [r4, #16]
 235:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 309              		.loc 1 235 3 is_stmt 1 view .LVU83
 235:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 310              		.loc 1 235 27 is_stmt 0 view .LVU84
 311 0020 0826     		movs	r6, #8
 312 0022 6661     		str	r6, [r4, #20]
 236:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 313              		.loc 1 236 3 is_stmt 1 view .LVU85
 236:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 314              		.loc 1 236 31 is_stmt 0 view .LVU86
 315 0024 2576     		strb	r5, [r4, #24]
 237:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 316              		.loc 1 237 3 is_stmt 1 view .LVU87
 237:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 317              		.loc 1 237 33 is_stmt 0 view .LVU88
 318 0026 0123     		movs	r3, #1
 319 0028 6376     		strb	r3, [r4, #25]
 238:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 320              		.loc 1 238 3 is_stmt 1 view .LVU89
 238:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 321              		.loc 1 238 30 is_stmt 0 view .LVU90
 322 002a E361     		str	r3, [r4, #28]
 239:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 323              		.loc 1 239 3 is_stmt 1 view .LVU91
 239:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 324              		.loc 1 239 36 is_stmt 0 view .LVU92
 325 002c 84F82050 		strb	r5, [r4, #32]
 240:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 326              		.loc 1 240 3 is_stmt 1 view .LVU93
 240:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 327              		.loc 1 240 34 is_stmt 0 view .LVU94
 328 0030 6362     		str	r3, [r4, #36]
 241:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 329              		.loc 1 241 3 is_stmt 1 view .LVU95
 241:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 330              		.loc 1 241 31 is_stmt 0 view .LVU96
ARM GAS  /tmp/ccV0hvll.s 			page 15


 331 0032 A562     		str	r5, [r4, #40]
 242:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 332              		.loc 1 242 3 is_stmt 1 view .LVU97
 242:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 333              		.loc 1 242 35 is_stmt 0 view .LVU98
 334 0034 E562     		str	r5, [r4, #44]
 243:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 335              		.loc 1 243 3 is_stmt 1 view .LVU99
 243:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 336              		.loc 1 243 36 is_stmt 0 view .LVU100
 337 0036 84F83050 		strb	r5, [r4, #48]
 244:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 338              		.loc 1 244 3 is_stmt 1 view .LVU101
 244:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 339              		.loc 1 244 22 is_stmt 0 view .LVU102
 340 003a 6563     		str	r5, [r4, #52]
 245:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 341              		.loc 1 245 3 is_stmt 1 view .LVU103
 245:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 342              		.loc 1 245 31 is_stmt 0 view .LVU104
 343 003c 84F83850 		strb	r5, [r4, #56]
 246:Src/main.c    ****   {
 344              		.loc 1 246 3 is_stmt 1 view .LVU105
 246:Src/main.c    ****   {
 345              		.loc 1 246 7 is_stmt 0 view .LVU106
 346 0040 2046     		mov	r0, r4
 347 0042 FFF7FEFF 		bl	HAL_ADC_Init
 348              	.LVL6:
 252:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 349              		.loc 1 252 3 is_stmt 1 view .LVU107
 252:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 350              		.loc 1 252 19 is_stmt 0 view .LVU108
 351 0046 0C4B     		ldr	r3, .L15+8
 352 0048 0093     		str	r3, [sp]
 253:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 353              		.loc 1 253 3 is_stmt 1 view .LVU109
 253:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 354              		.loc 1 253 16 is_stmt 0 view .LVU110
 355 004a 0623     		movs	r3, #6
 356 004c 0193     		str	r3, [sp, #4]
 254:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 357              		.loc 1 254 3 is_stmt 1 view .LVU111
 254:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 358              		.loc 1 254 24 is_stmt 0 view .LVU112
 359 004e 0295     		str	r5, [sp, #8]
 255:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 360              		.loc 1 255 3 is_stmt 1 view .LVU113
 255:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 361              		.loc 1 255 22 is_stmt 0 view .LVU114
 362 0050 7F23     		movs	r3, #127
 363 0052 0393     		str	r3, [sp, #12]
 256:Src/main.c    ****   sConfig.Offset = 0;
 364              		.loc 1 256 3 is_stmt 1 view .LVU115
 256:Src/main.c    ****   sConfig.Offset = 0;
 365              		.loc 1 256 24 is_stmt 0 view .LVU116
 366 0054 0423     		movs	r3, #4
 367 0056 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccV0hvll.s 			page 16


 257:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 368              		.loc 1 257 3 is_stmt 1 view .LVU117
 257:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 369              		.loc 1 257 18 is_stmt 0 view .LVU118
 370 0058 0595     		str	r5, [sp, #20]
 258:Src/main.c    ****   {
 371              		.loc 1 258 3 is_stmt 1 view .LVU119
 258:Src/main.c    ****   {
 372              		.loc 1 258 7 is_stmt 0 view .LVU120
 373 005a 6946     		mov	r1, sp
 374 005c 2046     		mov	r0, r4
 375 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 376              	.LVL7:
 263:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 377              		.loc 1 263 3 is_stmt 1 view .LVU121
 263:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 378              		.loc 1 263 27 is_stmt 0 view .LVU122
 379 0062 6661     		str	r6, [r4, #20]
 264:Src/main.c    ****   {
 380              		.loc 1 264 3 is_stmt 1 view .LVU123
 264:Src/main.c    ****   {
 381              		.loc 1 264 7 is_stmt 0 view .LVU124
 382 0064 2046     		mov	r0, r4
 383 0066 FFF7FEFF 		bl	HAL_ADC_Init
 384              	.LVL8:
 270:Src/main.c    **** 
 385              		.loc 1 270 1 view .LVU125
 386 006a 06B0     		add	sp, sp, #24
 387              	.LCFI9:
 388              		.cfi_def_cfa_offset 16
 389              		@ sp needed
 390 006c 70BD     		pop	{r4, r5, r6, pc}
 391              	.L16:
 392 006e 00BF     		.align	2
 393              	.L15:
 394 0070 00000000 		.word	hadc1
 395 0074 00000450 		.word	1342439424
 396 0078 0004002A 		.word	704644096
 397              		.cfi_endproc
 398              	.LFE289:
 400              		.section	.text.MX_OPAMP1_Init,"ax",%progbits
 401              		.align	1
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu fpv4-sp-d16
 407              	MX_OPAMP1_Init:
 408              	.LFB291:
 319:Src/main.c    **** 
 409              		.loc 1 319 1 is_stmt 1 view -0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413 0000 08B5     		push	{r3, lr}
 414              	.LCFI10:
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 3, -8
ARM GAS  /tmp/ccV0hvll.s 			page 17


 417              		.cfi_offset 14, -4
 328:Src/main.c    ****   hopamp1.Init.PowerSupplyRange = OPAMP_POWERSUPPLY_LOW;
 418              		.loc 1 328 3 view .LVU127
 328:Src/main.c    ****   hopamp1.Init.PowerSupplyRange = OPAMP_POWERSUPPLY_LOW;
 419              		.loc 1 328 20 is_stmt 0 view .LVU128
 420 0002 0848     		ldr	r0, .L19
 421 0004 084B     		ldr	r3, .L19+4
 422 0006 0360     		str	r3, [r0]
 329:Src/main.c    ****   hopamp1.Init.Mode = OPAMP_PGA_MODE;
 423              		.loc 1 329 3 is_stmt 1 view .LVU129
 329:Src/main.c    ****   hopamp1.Init.Mode = OPAMP_PGA_MODE;
 424              		.loc 1 329 33 is_stmt 0 view .LVU130
 425 0008 0023     		movs	r3, #0
 426 000a 4360     		str	r3, [r0, #4]
 330:Src/main.c    ****   hopamp1.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
 427              		.loc 1 330 3 is_stmt 1 view .LVU131
 330:Src/main.c    ****   hopamp1.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
 428              		.loc 1 330 21 is_stmt 0 view .LVU132
 429 000c 0822     		movs	r2, #8
 430 000e C260     		str	r2, [r0, #12]
 331:Src/main.c    ****   hopamp1.Init.InvertingInput = OPAMP_INVERTINGINPUT_CONNECT_NO;
 431              		.loc 1 331 3 is_stmt 1 view .LVU133
 331:Src/main.c    ****   hopamp1.Init.InvertingInput = OPAMP_INVERTINGINPUT_CONNECT_NO;
 432              		.loc 1 331 34 is_stmt 0 view .LVU134
 433 0010 4361     		str	r3, [r0, #20]
 332:Src/main.c    ****   hopamp1.Init.PgaGain = OPAMP_PGA_GAIN_2;
 434              		.loc 1 332 3 is_stmt 1 view .LVU135
 332:Src/main.c    ****   hopamp1.Init.PgaGain = OPAMP_PGA_GAIN_2;
 435              		.loc 1 332 31 is_stmt 0 view .LVU136
 436 0012 4FF40072 		mov	r2, #512
 437 0016 0261     		str	r2, [r0, #16]
 333:Src/main.c    ****   hopamp1.Init.PowerMode = OPAMP_POWERMODE_NORMAL;
 438              		.loc 1 333 3 is_stmt 1 view .LVU137
 333:Src/main.c    ****   hopamp1.Init.PowerMode = OPAMP_POWERMODE_NORMAL;
 439              		.loc 1 333 24 is_stmt 0 view .LVU138
 440 0018 8361     		str	r3, [r0, #24]
 334:Src/main.c    ****   hopamp1.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
 441              		.loc 1 334 3 is_stmt 1 view .LVU139
 334:Src/main.c    ****   hopamp1.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
 442              		.loc 1 334 26 is_stmt 0 view .LVU140
 443 001a 8360     		str	r3, [r0, #8]
 335:Src/main.c    ****   if (HAL_OPAMP_Init(&hopamp1) != HAL_OK)
 444              		.loc 1 335 3 is_stmt 1 view .LVU141
 335:Src/main.c    ****   if (HAL_OPAMP_Init(&hopamp1) != HAL_OK)
 445              		.loc 1 335 29 is_stmt 0 view .LVU142
 446 001c C361     		str	r3, [r0, #28]
 336:Src/main.c    ****   {
 447              		.loc 1 336 3 is_stmt 1 view .LVU143
 336:Src/main.c    ****   {
 448              		.loc 1 336 7 is_stmt 0 view .LVU144
 449 001e FFF7FEFF 		bl	HAL_OPAMP_Init
 450              	.LVL9:
 344:Src/main.c    **** 
 451              		.loc 1 344 1 view .LVU145
 452 0022 08BD     		pop	{r3, pc}
 453              	.L20:
 454              		.align	2
ARM GAS  /tmp/ccV0hvll.s 			page 18


 455              	.L19:
 456 0024 00000000 		.word	hopamp1
 457 0028 00780040 		.word	1073772544
 458              		.cfi_endproc
 459              	.LFE291:
 461              		.section	.text.debugPrintln,"ax",%progbits
 462              		.align	1
 463              		.global	debugPrintln
 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 467              		.fpu fpv4-sp-d16
 469              	debugPrintln:
 470              	.LVL10:
 471              	.LFB286:
  68:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) _out, strlen(_out), 10);
 472              		.loc 1 68 58 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 8
 475              		@ frame_needed = 0, uses_anonymous_args = 0
  68:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) _out, strlen(_out), 10);
 476              		.loc 1 68 58 is_stmt 0 view .LVU147
 477 0000 30B5     		push	{r4, r5, lr}
 478              	.LCFI11:
 479              		.cfi_def_cfa_offset 12
 480              		.cfi_offset 4, -12
 481              		.cfi_offset 5, -8
 482              		.cfi_offset 14, -4
 483 0002 83B0     		sub	sp, sp, #12
 484              	.LCFI12:
 485              		.cfi_def_cfa_offset 24
 486 0004 0446     		mov	r4, r0
 487 0006 0D46     		mov	r5, r1
  69:Src/main.c    ****  char newline[4] = "\r\n";
 488              		.loc 1 69 2 is_stmt 1 view .LVU148
  69:Src/main.c    ****  char newline[4] = "\r\n";
 489              		.loc 1 69 45 is_stmt 0 view .LVU149
 490 0008 0846     		mov	r0, r1
 491              	.LVL11:
  69:Src/main.c    ****  char newline[4] = "\r\n";
 492              		.loc 1 69 45 view .LVU150
 493 000a FFF7FEFF 		bl	strlen
 494              	.LVL12:
  69:Src/main.c    ****  char newline[4] = "\r\n";
 495              		.loc 1 69 2 view .LVU151
 496 000e 0A23     		movs	r3, #10
 497 0010 82B2     		uxth	r2, r0
 498 0012 2946     		mov	r1, r5
 499 0014 2046     		mov	r0, r4
 500 0016 FFF7FEFF 		bl	HAL_UART_Transmit
 501              	.LVL13:
  70:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) newline, 2, 10);
 502              		.loc 1 70 2 is_stmt 1 view .LVU152
  70:Src/main.c    ****  HAL_UART_Transmit(huart, (uint8_t *) newline, 2, 10);
 503              		.loc 1 70 7 is_stmt 0 view .LVU153
 504 001a 40F60D23 		movw	r3, #2573
 505 001e 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccV0hvll.s 			page 19


  71:Src/main.c    **** }
 506              		.loc 1 71 2 is_stmt 1 view .LVU154
 507 0020 0A23     		movs	r3, #10
 508 0022 0222     		movs	r2, #2
 509 0024 01A9     		add	r1, sp, #4
 510 0026 2046     		mov	r0, r4
 511 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 512              	.LVL14:
  72:Src/main.c    **** /* USER CODE END 0 */
 513              		.loc 1 72 1 is_stmt 0 view .LVU155
 514 002c 03B0     		add	sp, sp, #12
 515              	.LCFI13:
 516              		.cfi_def_cfa_offset 12
 517              		@ sp needed
 518 002e 30BD     		pop	{r4, r5, pc}
  72:Src/main.c    **** /* USER CODE END 0 */
 519              		.loc 1 72 1 view .LVU156
 520              		.cfi_endproc
 521              	.LFE286:
 523              		.section	.text.SystemClock_Config,"ax",%progbits
 524              		.align	1
 525              		.global	SystemClock_Config
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	SystemClock_Config:
 532              	.LFB288:
 160:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 533              		.loc 1 160 1 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 176
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537 0000 70B5     		push	{r4, r5, r6, lr}
 538              	.LCFI14:
 539              		.cfi_def_cfa_offset 16
 540              		.cfi_offset 4, -16
 541              		.cfi_offset 5, -12
 542              		.cfi_offset 6, -8
 543              		.cfi_offset 14, -4
 544 0002 ACB0     		sub	sp, sp, #176
 545              	.LCFI15:
 546              		.cfi_def_cfa_offset 192
 161:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 547              		.loc 1 161 3 view .LVU158
 161:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 548              		.loc 1 161 22 is_stmt 0 view .LVU159
 549 0004 4022     		movs	r2, #64
 550 0006 0021     		movs	r1, #0
 551 0008 1CA8     		add	r0, sp, #112
 552 000a FFF7FEFF 		bl	memset
 553              	.LVL15:
 162:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 554              		.loc 1 162 3 is_stmt 1 view .LVU160
 162:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 555              		.loc 1 162 22 is_stmt 0 view .LVU161
 556 000e 0024     		movs	r4, #0
ARM GAS  /tmp/ccV0hvll.s 			page 20


 557 0010 1694     		str	r4, [sp, #88]
 558 0012 1794     		str	r4, [sp, #92]
 559 0014 1894     		str	r4, [sp, #96]
 560 0016 1994     		str	r4, [sp, #100]
 561 0018 1A94     		str	r4, [sp, #104]
 163:Src/main.c    **** 
 562              		.loc 1 163 3 is_stmt 1 view .LVU162
 163:Src/main.c    **** 
 563              		.loc 1 163 28 is_stmt 0 view .LVU163
 564 001a 5422     		movs	r2, #84
 565 001c 2146     		mov	r1, r4
 566 001e 01A8     		add	r0, sp, #4
 567 0020 FFF7FEFF 		bl	memset
 568              	.LVL16:
 167:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 569              		.loc 1 167 3 is_stmt 1 view .LVU164
 167:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 570              		.loc 1 167 36 is_stmt 0 view .LVU165
 571 0024 1026     		movs	r6, #16
 572 0026 1B96     		str	r6, [sp, #108]
 168:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 573              		.loc 1 168 3 is_stmt 1 view .LVU166
 168:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 574              		.loc 1 168 30 is_stmt 0 view .LVU167
 575 0028 0125     		movs	r5, #1
 576 002a 2195     		str	r5, [sp, #132]
 169:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 577              		.loc 1 169 3 is_stmt 1 view .LVU168
 170:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 578              		.loc 1 170 3 view .LVU169
 170:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 579              		.loc 1 170 35 is_stmt 0 view .LVU170
 580 002c 6023     		movs	r3, #96
 581 002e 2393     		str	r3, [sp, #140]
 171:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 582              		.loc 1 171 3 is_stmt 1 view .LVU171
 172:Src/main.c    ****   {
 583              		.loc 1 172 3 view .LVU172
 172:Src/main.c    ****   {
 584              		.loc 1 172 7 is_stmt 0 view .LVU173
 585 0030 1BA8     		add	r0, sp, #108
 586 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 587              	.LVL17:
 178:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 588              		.loc 1 178 3 is_stmt 1 view .LVU174
 178:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 589              		.loc 1 178 31 is_stmt 0 view .LVU175
 590 0036 0F23     		movs	r3, #15
 591 0038 1693     		str	r3, [sp, #88]
 180:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 592              		.loc 1 180 3 is_stmt 1 view .LVU176
 180:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 593              		.loc 1 180 34 is_stmt 0 view .LVU177
 594 003a 1794     		str	r4, [sp, #92]
 181:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 595              		.loc 1 181 3 is_stmt 1 view .LVU178
 181:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccV0hvll.s 			page 21


 596              		.loc 1 181 35 is_stmt 0 view .LVU179
 597 003c 1894     		str	r4, [sp, #96]
 182:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 598              		.loc 1 182 3 is_stmt 1 view .LVU180
 182:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 599              		.loc 1 182 36 is_stmt 0 view .LVU181
 600 003e 1994     		str	r4, [sp, #100]
 183:Src/main.c    **** 
 601              		.loc 1 183 3 is_stmt 1 view .LVU182
 183:Src/main.c    **** 
 602              		.loc 1 183 36 is_stmt 0 view .LVU183
 603 0040 1A94     		str	r4, [sp, #104]
 185:Src/main.c    ****   {
 604              		.loc 1 185 3 is_stmt 1 view .LVU184
 185:Src/main.c    ****   {
 605              		.loc 1 185 7 is_stmt 0 view .LVU185
 606 0042 2146     		mov	r1, r4
 607 0044 16A8     		add	r0, sp, #88
 608 0046 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 609              	.LVL18:
 189:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 610              		.loc 1 189 3 is_stmt 1 view .LVU186
 189:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 611              		.loc 1 189 38 is_stmt 0 view .LVU187
 612 004a 44F20203 		movw	r3, #16386
 613 004e 0193     		str	r3, [sp, #4]
 190:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 614              		.loc 1 190 3 is_stmt 1 view .LVU188
 190:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 615              		.loc 1 190 38 is_stmt 0 view .LVU189
 616 0050 0A94     		str	r4, [sp, #40]
 191:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 617              		.loc 1 191 3 is_stmt 1 view .LVU190
 191:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 618              		.loc 1 191 35 is_stmt 0 view .LVU191
 619 0052 4FF08053 		mov	r3, #268435456
 620 0056 1393     		str	r3, [sp, #76]
 192:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 621              		.loc 1 192 3 is_stmt 1 view .LVU192
 192:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 622              		.loc 1 192 39 is_stmt 0 view .LVU193
 623 0058 0295     		str	r5, [sp, #8]
 193:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 624              		.loc 1 193 3 is_stmt 1 view .LVU194
 193:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 625              		.loc 1 193 34 is_stmt 0 view .LVU195
 626 005a 0395     		str	r5, [sp, #12]
 194:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 627              		.loc 1 194 3 is_stmt 1 view .LVU196
 194:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 628              		.loc 1 194 34 is_stmt 0 view .LVU197
 629 005c 0496     		str	r6, [sp, #16]
 195:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 630              		.loc 1 195 3 is_stmt 1 view .LVU198
 195:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 631              		.loc 1 195 34 is_stmt 0 view .LVU199
 632 005e 0723     		movs	r3, #7
ARM GAS  /tmp/ccV0hvll.s 			page 22


 633 0060 0593     		str	r3, [sp, #20]
 196:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 634              		.loc 1 196 3 is_stmt 1 view .LVU200
 196:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 635              		.loc 1 196 34 is_stmt 0 view .LVU201
 636 0062 0223     		movs	r3, #2
 637 0064 0693     		str	r3, [sp, #24]
 197:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 638              		.loc 1 197 3 is_stmt 1 view .LVU202
 197:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 639              		.loc 1 197 34 is_stmt 0 view .LVU203
 640 0066 0793     		str	r3, [sp, #28]
 198:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 641              		.loc 1 198 3 is_stmt 1 view .LVU204
 198:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 642              		.loc 1 198 41 is_stmt 0 view .LVU205
 643 0068 4FF08073 		mov	r3, #16777216
 644 006c 0893     		str	r3, [sp, #32]
 199:Src/main.c    ****   {
 645              		.loc 1 199 3 is_stmt 1 view .LVU206
 199:Src/main.c    ****   {
 646              		.loc 1 199 7 is_stmt 0 view .LVU207
 647 006e 01A8     		add	r0, sp, #4
 648 0070 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 649              	.LVL19:
 205:Src/main.c    ****   {
 650              		.loc 1 205 3 is_stmt 1 view .LVU208
 205:Src/main.c    ****   {
 651              		.loc 1 205 7 is_stmt 0 view .LVU209
 652 0074 4FF40070 		mov	r0, #512
 653 0078 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 654              	.LVL20:
 209:Src/main.c    **** 
 655              		.loc 1 209 1 view .LVU210
 656 007c 2CB0     		add	sp, sp, #176
 657              	.LCFI16:
 658              		.cfi_def_cfa_offset 16
 659              		@ sp needed
 660 007e 70BD     		pop	{r4, r5, r6, pc}
 661              		.cfi_endproc
 662              	.LFE288:
 664              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 665              		.align	2
 666              	.LC0:
 667 0000 53657474 		.ascii	"Setting effects....\000"
 667      696E6720 
 667      65666665 
 667      6374732E 
 667      2E2E2E00 
 668              		.align	2
 669              	.LC1:
 670 0014 53657474 		.ascii	"Setting up HAL....\000"
 670      696E6720 
 670      75702048 
 670      414C2E2E 
 670      2E2E00
 671 0027 00       		.align	2
ARM GAS  /tmp/ccV0hvll.s 			page 23


 672              	.LC2:
 673 0028 646F6E65 		.ascii	"done!\000"
 673      2100
 674              		.section	.text.main,"ax",%progbits
 675              		.align	1
 676              		.global	main
 677              		.syntax unified
 678              		.thumb
 679              		.thumb_func
 680              		.fpu fpv4-sp-d16
 682              	main:
 683              	.LFB287:
  80:Src/main.c    ****   /* USER CODE BEGIN 1 */
 684              		.loc 1 80 1 is_stmt 1 view -0
 685              		.cfi_startproc
 686              		@ Volatile: function does not return.
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689 0000 08B5     		push	{r3, lr}
 690              	.LCFI17:
 691              		.cfi_def_cfa_offset 8
 692              		.cfi_offset 3, -8
 693              		.cfi_offset 14, -4
  87:Src/main.c    **** 
 694              		.loc 1 87 3 view .LVU212
 695 0002 FFF7FEFF 		bl	HAL_Init
 696              	.LVL21:
  93:Src/main.c    **** 
 697              		.loc 1 93 3 view .LVU213
 698 0006 FFF7FEFF 		bl	SystemClock_Config
 699              	.LVL22:
 100:Src/main.c    ****   MX_USART2_UART_Init();
 700              		.loc 1 100 3 view .LVU214
 701 000a FFF7FEFF 		bl	MX_GPIO_Init
 702              	.LVL23:
 101:Src/main.c    ****   MX_DAC1_Init();
 703              		.loc 1 101 3 view .LVU215
 704 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 705              	.LVL24:
 102:Src/main.c    ****   MX_ADC1_Init();
 706              		.loc 1 102 3 view .LVU216
 707 0012 FFF7FEFF 		bl	MX_DAC1_Init
 708              	.LVL25:
 103:Src/main.c    ****   MX_OPAMP1_Init();
 709              		.loc 1 103 3 view .LVU217
 710 0016 FFF7FEFF 		bl	MX_ADC1_Init
 711              	.LVL26:
 104:Src/main.c    ****   /* USER CODE BEGIN 2 */
 712              		.loc 1 104 3 view .LVU218
 713 001a FFF7FEFF 		bl	MX_OPAMP1_Init
 714              	.LVL27:
 106:Src/main.c    ****   default_init_reverb(&r);
 715              		.loc 1 106 3 view .LVU219
 716 001e 0F4C     		ldr	r4, .L28
 717 0020 0F49     		ldr	r1, .L28+4
 718 0022 2046     		mov	r0, r4
 719 0024 FFF7FEFF 		bl	debugPrintln
ARM GAS  /tmp/ccV0hvll.s 			page 24


 720              	.LVL28:
 107:Src/main.c    ****   default_init_octave(&o);
 721              		.loc 1 107 3 view .LVU220
 722 0028 0E48     		ldr	r0, .L28+8
 723 002a FFF7FEFF 		bl	default_init_reverb
 724              	.LVL29:
 108:Src/main.c    ****   debugPrintln(&huart2, (char*) "Setting up HAL....");
 725              		.loc 1 108 3 view .LVU221
 726 002e 0E48     		ldr	r0, .L28+12
 727 0030 FFF7FEFF 		bl	default_init_octave
 728              	.LVL30:
 109:Src/main.c    ****   HAL_DAC_Start(&hdac1, DAC_CHANNEL_1);
 729              		.loc 1 109 3 view .LVU222
 730 0034 0D49     		ldr	r1, .L28+16
 731 0036 2046     		mov	r0, r4
 732 0038 FFF7FEFF 		bl	debugPrintln
 733              	.LVL31:
 110:Src/main.c    ****   HAL_OPAMP_Start(&hopamp1);
 734              		.loc 1 110 3 view .LVU223
 735 003c 0021     		movs	r1, #0
 736 003e 0C48     		ldr	r0, .L28+20
 737 0040 FFF7FEFF 		bl	HAL_DAC_Start
 738              	.LVL32:
 111:Src/main.c    ****   //HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED);
 739              		.loc 1 111 3 view .LVU224
 740 0044 0B48     		ldr	r0, .L28+24
 741 0046 FFF7FEFF 		bl	HAL_OPAMP_Start
 742              	.LVL33:
 113:Src/main.c    ****   debugPrintln(&huart2, (char*) "done!");
 743              		.loc 1 113 3 view .LVU225
 744 004a 0B48     		ldr	r0, .L28+28
 745 004c FFF7FEFF 		bl	HAL_ADC_Start_IT
 746              	.LVL34:
 114:Src/main.c    ****   /* USER CODE END 2 */
 747              		.loc 1 114 3 view .LVU226
 748 0050 0A49     		ldr	r1, .L28+32
 749 0052 2046     		mov	r0, r4
 750 0054 FFF7FEFF 		bl	debugPrintln
 751              	.LVL35:
 752              	.L26:
 119:Src/main.c    ****   {
 753              		.loc 1 119 3 discriminator 1 view .LVU227
 151:Src/main.c    ****   /* USER CODE END 3 */
 754              		.loc 1 151 3 discriminator 1 view .LVU228
 119:Src/main.c    ****   {
 755              		.loc 1 119 9 discriminator 1 view .LVU229
 756 0058 FEE7     		b	.L26
 757              	.L29:
 758 005a 00BF     		.align	2
 759              	.L28:
 760 005c 00000000 		.word	huart2
 761 0060 00000000 		.word	.LC0
 762 0064 00000000 		.word	r
 763 0068 00000000 		.word	o
 764 006c 14000000 		.word	.LC1
 765 0070 00000000 		.word	hdac1
 766 0074 00000000 		.word	hopamp1
ARM GAS  /tmp/ccV0hvll.s 			page 25


 767 0078 00000000 		.word	hadc1
 768 007c 28000000 		.word	.LC2
 769              		.cfi_endproc
 770              	.LFE287:
 772              		.section	.text.Error_Handler,"ax",%progbits
 773              		.align	1
 774              		.global	Error_Handler
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv4-sp-d16
 780              	Error_Handler:
 781              	.LFB294:
 405:Src/main.c    **** 
 406:Src/main.c    **** /* USER CODE BEGIN 4 */
 407:Src/main.c    **** 
 408:Src/main.c    **** /* USER CODE END 4 */
 409:Src/main.c    **** 
 410:Src/main.c    **** /**
 411:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 412:Src/main.c    ****   * @retval None
 413:Src/main.c    ****   */
 414:Src/main.c    **** void Error_Handler(void)
 415:Src/main.c    **** {
 782              		.loc 1 415 1 view -0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              		@ link register save eliminated.
 416:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 417:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 418:Src/main.c    **** 
 419:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 420:Src/main.c    **** }
 787              		.loc 1 420 1 view .LVU231
 788 0000 7047     		bx	lr
 789              		.cfi_endproc
 790              	.LFE294:
 792              		.comm	o,20,4
 793              		.comm	r,24,8
 794              		.comm	huart2,128,4
 795              		.comm	hopamp1,52,4
 796              		.comm	hdac1,20,4
 797              		.comm	hadc1,100,4
 798              		.comm	value_dac,4,4
 799              		.comm	trig,4,4
 800              		.comm	value_adc,4,4
 801              		.text
 802              	.Letext0:
 803              		.file 2 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_typ
 804              		.file 3 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 805              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 806              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 807              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 808              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 809              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 810              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
ARM GAS  /tmp/ccV0hvll.s 			page 26


 811              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 812              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 813              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 814              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 815              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dac.h"
 816              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 817              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_opamp.h"
 818              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 819              		.file 18 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 820              		.file 19 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/lock.h"
 821              		.file 20 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_types.h"
 822              		.file 21 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/lib/gcc/arm-none-eabi/9.2.1/include/stdde
 823              		.file 22 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/reent.h"
 824              		.file 23 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/stdlib.h"
 825              		.file 24 "Inc/effects.h"
 826              		.file 25 "Inc/main.h"
 827              		.file 26 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 828              		.file 27 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/string.h"
 829              		.file 28 "<built-in>"
ARM GAS  /tmp/ccV0hvll.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccV0hvll.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccV0hvll.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccV0hvll.s:114    .text.MX_GPIO_Init:0000000000000058 $d
     /tmp/ccV0hvll.s:120    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccV0hvll.s:126    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccV0hvll.s:181    .text.MX_USART2_UART_Init:0000000000000028 $d
                            *COM*:0000000000000080 huart2
     /tmp/ccV0hvll.s:187    .text.MX_DAC1_Init:0000000000000000 $t
     /tmp/ccV0hvll.s:193    .text.MX_DAC1_Init:0000000000000000 MX_DAC1_Init
     /tmp/ccV0hvll.s:255    .text.MX_DAC1_Init:0000000000000034 $d
                            *COM*:0000000000000014 hdac1
     /tmp/ccV0hvll.s:261    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccV0hvll.s:267    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccV0hvll.s:394    .text.MX_ADC1_Init:0000000000000070 $d
                            *COM*:0000000000000064 hadc1
     /tmp/ccV0hvll.s:401    .text.MX_OPAMP1_Init:0000000000000000 $t
     /tmp/ccV0hvll.s:407    .text.MX_OPAMP1_Init:0000000000000000 MX_OPAMP1_Init
     /tmp/ccV0hvll.s:456    .text.MX_OPAMP1_Init:0000000000000024 $d
                            *COM*:0000000000000034 hopamp1
     /tmp/ccV0hvll.s:462    .text.debugPrintln:0000000000000000 $t
     /tmp/ccV0hvll.s:469    .text.debugPrintln:0000000000000000 debugPrintln
     /tmp/ccV0hvll.s:524    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccV0hvll.s:531    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccV0hvll.s:665    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccV0hvll.s:675    .text.main:0000000000000000 $t
     /tmp/ccV0hvll.s:682    .text.main:0000000000000000 main
     /tmp/ccV0hvll.s:760    .text.main:000000000000005c $d
                            *COM*:0000000000000018 r
                            *COM*:0000000000000014 o
     /tmp/ccV0hvll.s:773    .text.Error_Handler:0000000000000000 $t
     /tmp/ccV0hvll.s:780    .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000004 value_dac
                            *COM*:0000000000000004 trig
                            *COM*:0000000000000004 value_adc

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_OPAMP_Init
strlen
HAL_UART_Transmit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_Init
default_init_reverb
default_init_octave
HAL_DAC_Start
ARM GAS  /tmp/ccV0hvll.s 			page 28


HAL_OPAMP_Start
HAL_ADC_Start_IT
