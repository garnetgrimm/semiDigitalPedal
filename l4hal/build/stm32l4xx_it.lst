ARM GAS  /tmp/ccoqk2q4.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB286:
  28              		.file 1 "Src/stm32l4xx_it.c"
   1:Src/stm32l4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32l4xx_it.c **** /**
   3:Src/stm32l4xx_it.c ****   ******************************************************************************
   4:Src/stm32l4xx_it.c ****   * @file    stm32l4xx_it.c
   5:Src/stm32l4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32l4xx_it.c ****   ******************************************************************************
   7:Src/stm32l4xx_it.c ****   * @attention
   8:Src/stm32l4xx_it.c ****   *
   9:Src/stm32l4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32l4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32l4xx_it.c ****   *
  12:Src/stm32l4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32l4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32l4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32l4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32l4xx_it.c ****   *
  17:Src/stm32l4xx_it.c ****   ******************************************************************************
  18:Src/stm32l4xx_it.c ****   */
  19:Src/stm32l4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32l4xx_it.c **** 
  21:Src/stm32l4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32l4xx_it.c **** #include "main.h"
  23:Src/stm32l4xx_it.c **** #include "stm32l4xx_it.h"
  24:Src/stm32l4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32l4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32l4xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32l4xx_it.c **** 
  28:Src/stm32l4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32l4xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32l4xx_it.c **** 
ARM GAS  /tmp/ccoqk2q4.s 			page 2


  31:Src/stm32l4xx_it.c **** /* USER CODE END TD */
  32:Src/stm32l4xx_it.c **** 
  33:Src/stm32l4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32l4xx_it.c **** 
  36:Src/stm32l4xx_it.c **** /* USER CODE END PD */
  37:Src/stm32l4xx_it.c **** 
  38:Src/stm32l4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32l4xx_it.c **** 
  41:Src/stm32l4xx_it.c **** /* USER CODE END PM */
  42:Src/stm32l4xx_it.c **** 
  43:Src/stm32l4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32l4xx_it.c **** 
  46:Src/stm32l4xx_it.c **** /* USER CODE END PV */
  47:Src/stm32l4xx_it.c **** 
  48:Src/stm32l4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32l4xx_it.c **** 
  51:Src/stm32l4xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32l4xx_it.c **** 
  53:Src/stm32l4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32l4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32l4xx_it.c **** 
  56:Src/stm32l4xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32l4xx_it.c **** 
  58:Src/stm32l4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32l4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  60:Src/stm32l4xx_it.c **** extern TIM_HandleTypeDef htim2;
  61:Src/stm32l4xx_it.c **** extern TIM_HandleTypeDef htim15;
  62:Src/stm32l4xx_it.c **** /* USER CODE BEGIN EV */
  63:Src/stm32l4xx_it.c **** 
  64:Src/stm32l4xx_it.c **** /* USER CODE END EV */
  65:Src/stm32l4xx_it.c **** 
  66:Src/stm32l4xx_it.c **** /******************************************************************************/
  67:Src/stm32l4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  68:Src/stm32l4xx_it.c **** /******************************************************************************/
  69:Src/stm32l4xx_it.c **** /**
  70:Src/stm32l4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Src/stm32l4xx_it.c ****   */
  72:Src/stm32l4xx_it.c **** void NMI_Handler(void)
  73:Src/stm32l4xx_it.c **** {
  29              		.loc 1 73 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  74:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Src/stm32l4xx_it.c **** 
  76:Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Src/stm32l4xx_it.c **** 
  79:Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Src/stm32l4xx_it.c **** }
  34              		.loc 1 80 1 view .LVU1
  35 0000 7047     		bx	lr
ARM GAS  /tmp/ccoqk2q4.s 			page 3


  36              		.cfi_endproc
  37              	.LFE286:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB287:
  81:Src/stm32l4xx_it.c **** 
  82:Src/stm32l4xx_it.c **** /**
  83:Src/stm32l4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Src/stm32l4xx_it.c ****   */
  85:Src/stm32l4xx_it.c **** void HardFault_Handler(void)
  86:Src/stm32l4xx_it.c **** {
  49              		.loc 1 86 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  87:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Src/stm32l4xx_it.c **** 
  89:Src/stm32l4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Src/stm32l4xx_it.c ****   while (1)
  56              		.loc 1 90 3 discriminator 1 view .LVU3
  91:Src/stm32l4xx_it.c ****   {
  92:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Src/stm32l4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Src/stm32l4xx_it.c ****   }
  57              		.loc 1 94 3 discriminator 1 view .LVU4
  90:Src/stm32l4xx_it.c ****   {
  58              		.loc 1 90 9 discriminator 1 view .LVU5
  59 0000 FEE7     		b	.L3
  60              		.cfi_endproc
  61              	.LFE287:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	MemManage_Handler:
  72              	.LFB288:
  95:Src/stm32l4xx_it.c **** }
  96:Src/stm32l4xx_it.c **** 
  97:Src/stm32l4xx_it.c **** /**
  98:Src/stm32l4xx_it.c ****   * @brief This function handles Memory management fault.
  99:Src/stm32l4xx_it.c ****   */
 100:Src/stm32l4xx_it.c **** void MemManage_Handler(void)
 101:Src/stm32l4xx_it.c **** {
  73              		.loc 1 101 1 view -0
  74              		.cfi_startproc
ARM GAS  /tmp/ccoqk2q4.s 			page 4


  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L5:
 102:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:Src/stm32l4xx_it.c **** 
 104:Src/stm32l4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:Src/stm32l4xx_it.c ****   while (1)
  80              		.loc 1 105 3 discriminator 1 view .LVU7
 106:Src/stm32l4xx_it.c ****   {
 107:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:Src/stm32l4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:Src/stm32l4xx_it.c ****   }
  81              		.loc 1 109 3 discriminator 1 view .LVU8
 105:Src/stm32l4xx_it.c ****   {
  82              		.loc 1 105 9 discriminator 1 view .LVU9
  83 0000 FEE7     		b	.L5
  84              		.cfi_endproc
  85              	.LFE288:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB289:
 110:Src/stm32l4xx_it.c **** }
 111:Src/stm32l4xx_it.c **** 
 112:Src/stm32l4xx_it.c **** /**
 113:Src/stm32l4xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 114:Src/stm32l4xx_it.c ****   */
 115:Src/stm32l4xx_it.c **** void BusFault_Handler(void)
 116:Src/stm32l4xx_it.c **** {
  97              		.loc 1 116 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L7:
 117:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:Src/stm32l4xx_it.c **** 
 119:Src/stm32l4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:Src/stm32l4xx_it.c ****   while (1)
 104              		.loc 1 120 3 discriminator 1 view .LVU11
 121:Src/stm32l4xx_it.c ****   {
 122:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 123:Src/stm32l4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:Src/stm32l4xx_it.c ****   }
 105              		.loc 1 124 3 discriminator 1 view .LVU12
 120:Src/stm32l4xx_it.c ****   {
 106              		.loc 1 120 9 discriminator 1 view .LVU13
 107 0000 FEE7     		b	.L7
 108              		.cfi_endproc
ARM GAS  /tmp/ccoqk2q4.s 			page 5


 109              	.LFE289:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB290:
 125:Src/stm32l4xx_it.c **** }
 126:Src/stm32l4xx_it.c **** 
 127:Src/stm32l4xx_it.c **** /**
 128:Src/stm32l4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 129:Src/stm32l4xx_it.c ****   */
 130:Src/stm32l4xx_it.c **** void UsageFault_Handler(void)
 131:Src/stm32l4xx_it.c **** {
 121              		.loc 1 131 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L9:
 132:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Src/stm32l4xx_it.c **** 
 134:Src/stm32l4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Src/stm32l4xx_it.c ****   while (1)
 128              		.loc 1 135 3 discriminator 1 view .LVU15
 136:Src/stm32l4xx_it.c ****   {
 137:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Src/stm32l4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Src/stm32l4xx_it.c ****   }
 129              		.loc 1 139 3 discriminator 1 view .LVU16
 135:Src/stm32l4xx_it.c ****   {
 130              		.loc 1 135 9 discriminator 1 view .LVU17
 131 0000 FEE7     		b	.L9
 132              		.cfi_endproc
 133              	.LFE290:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	SVC_Handler:
 144              	.LFB291:
 140:Src/stm32l4xx_it.c **** }
 141:Src/stm32l4xx_it.c **** 
 142:Src/stm32l4xx_it.c **** /**
 143:Src/stm32l4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 144:Src/stm32l4xx_it.c ****   */
 145:Src/stm32l4xx_it.c **** void SVC_Handler(void)
 146:Src/stm32l4xx_it.c **** {
 145              		.loc 1 146 1 view -0
 146              		.cfi_startproc
ARM GAS  /tmp/ccoqk2q4.s 			page 6


 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 147:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 148:Src/stm32l4xx_it.c **** 
 149:Src/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 150:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 151:Src/stm32l4xx_it.c **** 
 152:Src/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 153:Src/stm32l4xx_it.c **** }
 150              		.loc 1 153 1 view .LVU19
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE291:
 155              		.section	.text.DebugMon_Handler,"ax",%progbits
 156              		.align	1
 157              		.global	DebugMon_Handler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	DebugMon_Handler:
 164              	.LFB292:
 154:Src/stm32l4xx_it.c **** 
 155:Src/stm32l4xx_it.c **** /**
 156:Src/stm32l4xx_it.c ****   * @brief This function handles Debug monitor.
 157:Src/stm32l4xx_it.c ****   */
 158:Src/stm32l4xx_it.c **** void DebugMon_Handler(void)
 159:Src/stm32l4xx_it.c **** {
 165              		.loc 1 159 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 160:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 161:Src/stm32l4xx_it.c **** 
 162:Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 163:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 164:Src/stm32l4xx_it.c **** 
 165:Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 166:Src/stm32l4xx_it.c **** }
 170              		.loc 1 166 1 view .LVU21
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE292:
 175              		.section	.text.PendSV_Handler,"ax",%progbits
 176              		.align	1
 177              		.global	PendSV_Handler
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	PendSV_Handler:
 184              	.LFB293:
 167:Src/stm32l4xx_it.c **** 
 168:Src/stm32l4xx_it.c **** /**
 169:Src/stm32l4xx_it.c ****   * @brief This function handles Pendable request for system service.
ARM GAS  /tmp/ccoqk2q4.s 			page 7


 170:Src/stm32l4xx_it.c ****   */
 171:Src/stm32l4xx_it.c **** void PendSV_Handler(void)
 172:Src/stm32l4xx_it.c **** {
 185              		.loc 1 172 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 173:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 174:Src/stm32l4xx_it.c **** 
 175:Src/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 176:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 177:Src/stm32l4xx_it.c **** 
 178:Src/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 179:Src/stm32l4xx_it.c **** }
 190              		.loc 1 179 1 view .LVU23
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE293:
 195              		.section	.text.SysTick_Handler,"ax",%progbits
 196              		.align	1
 197              		.global	SysTick_Handler
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	SysTick_Handler:
 204              	.LFB294:
 180:Src/stm32l4xx_it.c **** 
 181:Src/stm32l4xx_it.c **** /**
 182:Src/stm32l4xx_it.c ****   * @brief This function handles System tick timer.
 183:Src/stm32l4xx_it.c ****   */
 184:Src/stm32l4xx_it.c **** void SysTick_Handler(void)
 185:Src/stm32l4xx_it.c **** {
 205              		.loc 1 185 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI0:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 186:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 187:Src/stm32l4xx_it.c **** 
 188:Src/stm32l4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 189:Src/stm32l4xx_it.c ****   HAL_IncTick();
 214              		.loc 1 189 3 view .LVU25
 215 0002 FFF7FEFF 		bl	HAL_IncTick
 216              	.LVL0:
 190:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 191:Src/stm32l4xx_it.c **** 
 192:Src/stm32l4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 193:Src/stm32l4xx_it.c **** }
 217              		.loc 1 193 1 is_stmt 0 view .LVU26
 218 0006 08BD     		pop	{r3, pc}
 219              		.cfi_endproc
ARM GAS  /tmp/ccoqk2q4.s 			page 8


 220              	.LFE294:
 222              		.section	.text.TIM1_BRK_TIM15_IRQHandler,"ax",%progbits
 223              		.align	1
 224              		.global	TIM1_BRK_TIM15_IRQHandler
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	TIM1_BRK_TIM15_IRQHandler:
 231              	.LFB295:
 194:Src/stm32l4xx_it.c **** 
 195:Src/stm32l4xx_it.c **** /******************************************************************************/
 196:Src/stm32l4xx_it.c **** /* STM32L4xx Peripheral Interrupt Handlers                                    */
 197:Src/stm32l4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 198:Src/stm32l4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 199:Src/stm32l4xx_it.c **** /* please refer to the startup file (startup_stm32l4xx.s).                    */
 200:Src/stm32l4xx_it.c **** /******************************************************************************/
 201:Src/stm32l4xx_it.c **** 
 202:Src/stm32l4xx_it.c **** /**
 203:Src/stm32l4xx_it.c ****   * @brief This function handles TIM1 break interrupt and TIM15 global interrupt.
 204:Src/stm32l4xx_it.c ****   */
 205:Src/stm32l4xx_it.c **** void TIM1_BRK_TIM15_IRQHandler(void)
 206:Src/stm32l4xx_it.c **** {
 232              		.loc 1 206 1 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI1:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
 207:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM15_IRQn 0 */
 208:Src/stm32l4xx_it.c ****   //HAL_DAC_SetValue(&hdac1, DAC_CHANNEL_1, DAC_ALIGN_12B_R, value_dac);
 209:Src/stm32l4xx_it.c ****   /* USER CODE END TIM1_BRK_TIM15_IRQn 0 */
 210:Src/stm32l4xx_it.c ****   HAL_TIM_IRQHandler(&htim15);
 241              		.loc 1 210 3 view .LVU28
 242 0002 0548     		ldr	r0, .L17
 243 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 244              	.LVL1:
 211:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM15_IRQn 1 */
 212:Src/stm32l4xx_it.c ****   HAL_DAC_SetValue(&hdac1, DAC_CHANNEL_1, DAC_ALIGN_12B_R, value_dac);
 245              		.loc 1 212 3 view .LVU29
 246 0008 044B     		ldr	r3, .L17+4
 247 000a 1B68     		ldr	r3, [r3]
 248 000c 0022     		movs	r2, #0
 249 000e 1146     		mov	r1, r2
 250 0010 0348     		ldr	r0, .L17+8
 251 0012 FFF7FEFF 		bl	HAL_DAC_SetValue
 252              	.LVL2:
 213:Src/stm32l4xx_it.c ****   /* USER CODE END TIM1_BRK_TIM15_IRQn 1 */
 214:Src/stm32l4xx_it.c **** }
 253              		.loc 1 214 1 is_stmt 0 view .LVU30
 254 0016 08BD     		pop	{r3, pc}
 255              	.L18:
 256              		.align	2
 257              	.L17:
ARM GAS  /tmp/ccoqk2q4.s 			page 9


 258 0018 00000000 		.word	htim15
 259 001c 00000000 		.word	value_dac
 260 0020 00000000 		.word	hdac1
 261              		.cfi_endproc
 262              	.LFE295:
 264              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 265              		.align	1
 266              		.global	TIM2_IRQHandler
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu fpv4-sp-d16
 272              	TIM2_IRQHandler:
 273              	.LFB296:
 215:Src/stm32l4xx_it.c **** 
 216:Src/stm32l4xx_it.c **** /**
 217:Src/stm32l4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 218:Src/stm32l4xx_it.c ****   */
 219:Src/stm32l4xx_it.c **** void TIM2_IRQHandler(void)
 220:Src/stm32l4xx_it.c **** {
 274              		.loc 1 220 1 is_stmt 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278 0000 10B5     		push	{r4, lr}
 279              	.LCFI2:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 4, -8
 282              		.cfi_offset 14, -4
 221:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 222:Src/stm32l4xx_it.c **** 
 223:Src/stm32l4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 224:Src/stm32l4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 283              		.loc 1 224 3 view .LVU32
 284 0002 0D48     		ldr	r0, .L21
 285 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 286              	.LVL3:
 225:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 226:Src/stm32l4xx_it.c ****   GPIOA -> ODR ^= GPIO_PIN_8;
 287              		.loc 1 226 3 view .LVU33
 288              		.loc 1 226 16 is_stmt 0 view .LVU34
 289 0008 4FF09042 		mov	r2, #1207959552
 290 000c 5369     		ldr	r3, [r2, #20]
 291 000e 83F48073 		eor	r3, r3, #256
 292 0012 5361     		str	r3, [r2, #20]
 227:Src/stm32l4xx_it.c ****   value_dac = value_adc;
 293              		.loc 1 227 3 is_stmt 1 view .LVU35
 294              		.loc 1 227 13 is_stmt 0 view .LVU36
 295 0014 094C     		ldr	r4, .L21+4
 296 0016 0A4B     		ldr	r3, .L21+8
 297 0018 1B68     		ldr	r3, [r3]
 298 001a 2360     		str	r3, [r4]
 228:Src/stm32l4xx_it.c ****   step_antinoise(&a, &value_dac);
 299              		.loc 1 228 3 is_stmt 1 view .LVU37
 300 001c 2146     		mov	r1, r4
 301 001e 0948     		ldr	r0, .L21+12
 302 0020 FFF7FEFF 		bl	step_antinoise
ARM GAS  /tmp/ccoqk2q4.s 			page 10


 303              	.LVL4:
 229:Src/stm32l4xx_it.c ****   step_chorus(&c, &value_dac);
 304              		.loc 1 229 3 view .LVU38
 305 0024 2146     		mov	r1, r4
 306 0026 0848     		ldr	r0, .L21+16
 307 0028 FFF7FEFF 		bl	step_chorus
 308              	.LVL5:
 230:Src/stm32l4xx_it.c ****   step_reverb(&r, &value_dac);
 309              		.loc 1 230 3 view .LVU39
 310 002c 2146     		mov	r1, r4
 311 002e 0748     		ldr	r0, .L21+20
 312 0030 FFF7FEFF 		bl	step_reverb
 313              	.LVL6:
 231:Src/stm32l4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 232:Src/stm32l4xx_it.c **** }
 314              		.loc 1 232 1 is_stmt 0 view .LVU40
 315 0034 10BD     		pop	{r4, pc}
 316              	.L22:
 317 0036 00BF     		.align	2
 318              	.L21:
 319 0038 00000000 		.word	htim2
 320 003c 00000000 		.word	value_dac
 321 0040 00000000 		.word	value_adc
 322 0044 00000000 		.word	a
 323 0048 00000000 		.word	c
 324 004c 00000000 		.word	r
 325              		.cfi_endproc
 326              	.LFE296:
 328              		.section	.text.DMA2_Channel3_IRQHandler,"ax",%progbits
 329              		.align	1
 330              		.global	DMA2_Channel3_IRQHandler
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 334              		.fpu fpv4-sp-d16
 336              	DMA2_Channel3_IRQHandler:
 337              	.LFB297:
 233:Src/stm32l4xx_it.c **** 
 234:Src/stm32l4xx_it.c **** /**
 235:Src/stm32l4xx_it.c ****   * @brief This function handles DMA2 channel3 global interrupt.
 236:Src/stm32l4xx_it.c ****   */
 237:Src/stm32l4xx_it.c **** void DMA2_Channel3_IRQHandler(void)
 238:Src/stm32l4xx_it.c **** {
 338              		.loc 1 238 1 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342 0000 08B5     		push	{r3, lr}
 343              	.LCFI3:
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 3, -8
 346              		.cfi_offset 14, -4
 239:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA2_Channel3_IRQn 0 */
 240:Src/stm32l4xx_it.c **** 
 241:Src/stm32l4xx_it.c ****   /* USER CODE END DMA2_Channel3_IRQn 0 */
 242:Src/stm32l4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 347              		.loc 1 242 3 view .LVU42
ARM GAS  /tmp/ccoqk2q4.s 			page 11


 348 0002 0248     		ldr	r0, .L25
 349 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 350              	.LVL7:
 243:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA2_Channel3_IRQn 1 */
 244:Src/stm32l4xx_it.c **** 
 245:Src/stm32l4xx_it.c ****   /* USER CODE END DMA2_Channel3_IRQn 1 */
 246:Src/stm32l4xx_it.c **** }
 351              		.loc 1 246 1 is_stmt 0 view .LVU43
 352 0008 08BD     		pop	{r3, pc}
 353              	.L26:
 354 000a 00BF     		.align	2
 355              	.L25:
 356 000c 00000000 		.word	hdma_adc1
 357              		.cfi_endproc
 358              	.LFE297:
 360              		.comm	a,16,4
 361              		.comm	c,40,4
 362              		.comm	od,8,4
 363              		.comm	t,2,4
 364              		.comm	f,4,4
 365              		.comm	o,20,4
 366              		.comm	r,20,4
 367              		.comm	huart2,128,4
 368              		.comm	hdac1,20,4
 369              		.comm	hadc1,100,4
 370              		.comm	ADC_BUF,12,4
 371              		.comm	value_dac,4,4
 372              		.comm	trig,4,4
 373              		.comm	value_adc,4,4
 374              		.text
 375              	.Letext0:
 376              		.file 2 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_typ
 377              		.file 3 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 378              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 379              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 380              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 381              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 382              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 383              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 384              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 385              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dac.h"
 386              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 387              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 388              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 389              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 390              		.file 16 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/lock.h"
 391              		.file 17 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_types.h"
 392              		.file 18 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/lib/gcc/arm-none-eabi/9.2.1/include/stdde
 393              		.file 19 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/reent.h"
 394              		.file 20 "/home/garnet/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/stdlib.h"
 395              		.file 21 "Inc/effects.h"
 396              		.file 22 "Inc/main.h"
ARM GAS  /tmp/ccoqk2q4.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_it.c
     /tmp/ccoqk2q4.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccoqk2q4.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccoqk2q4.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccoqk2q4.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccoqk2q4.s:64     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccoqk2q4.s:71     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccoqk2q4.s:88     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccoqk2q4.s:95     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccoqk2q4.s:112    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccoqk2q4.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccoqk2q4.s:136    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccoqk2q4.s:143    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccoqk2q4.s:156    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccoqk2q4.s:163    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccoqk2q4.s:176    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccoqk2q4.s:183    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccoqk2q4.s:196    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccoqk2q4.s:203    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccoqk2q4.s:223    .text.TIM1_BRK_TIM15_IRQHandler:0000000000000000 $t
     /tmp/ccoqk2q4.s:230    .text.TIM1_BRK_TIM15_IRQHandler:0000000000000000 TIM1_BRK_TIM15_IRQHandler
     /tmp/ccoqk2q4.s:258    .text.TIM1_BRK_TIM15_IRQHandler:0000000000000018 $d
                            *COM*:0000000000000004 value_dac
                            *COM*:0000000000000014 hdac1
     /tmp/ccoqk2q4.s:265    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccoqk2q4.s:272    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccoqk2q4.s:319    .text.TIM2_IRQHandler:0000000000000038 $d
                            *COM*:0000000000000004 value_adc
                            *COM*:0000000000000010 a
                            *COM*:0000000000000028 c
                            *COM*:0000000000000014 r
     /tmp/ccoqk2q4.s:329    .text.DMA2_Channel3_IRQHandler:0000000000000000 $t
     /tmp/ccoqk2q4.s:336    .text.DMA2_Channel3_IRQHandler:0000000000000000 DMA2_Channel3_IRQHandler
     /tmp/ccoqk2q4.s:356    .text.DMA2_Channel3_IRQHandler:000000000000000c $d
                            *COM*:0000000000000008 od
                            *COM*:0000000000000002 t
                            *COM*:0000000000000004 f
                            *COM*:0000000000000014 o
                            *COM*:0000000000000080 huart2
                            *COM*:0000000000000064 hadc1
                            *COM*:000000000000000c ADC_BUF
                            *COM*:0000000000000004 trig

UNDEFINED SYMBOLS
HAL_IncTick
HAL_TIM_IRQHandler
HAL_DAC_SetValue
htim15
step_antinoise
step_chorus
step_reverb
htim2
HAL_DMA_IRQHandler
hdma_adc1
